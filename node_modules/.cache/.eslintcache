[{"/home/gurramkonda_y/Desktop/react/lister home/src/components/Home.js":"1","/home/gurramkonda_y/Desktop/react/skill-portal/src/index.js":"2","/home/gurramkonda_y/Desktop/react/skill-portal/src/App.js":"3","/home/gurramkonda_y/Desktop/react/skill-portal/src/reportWebVitals.js":"4","/home/gurramkonda_y/Desktop/react/skill-portal/src/HomeScreen.js":"5","/home/gurramkonda_y/Desktop/react/skill-portal/src/FilterScreen.js":"6","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/EmployeeDetails.js":"7","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Footer.js":"8","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/ScrollToTop.js":"9","/home/gurramkonda_y/Desktop/react/skill-portal/src/config.js":"10","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/FilterNav.js":"11","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Navbar.js":"12","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Home.js":"13","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/FilterPage.js":"14","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/HomeText.js":"15","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Howitworks.js":"16","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Projects.js":"17","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/styles/FooterStyles.js":"18","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Wheel.js":"19","/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Skills.js":"20","/home/gurramkonda_y/Desktop/react/emp-portal/src/index.js":"21","/home/gurramkonda_y/Desktop/react/emp-portal/src/App.js":"22","/home/gurramkonda_y/Desktop/react/emp-portal/src/reportWebVitals.js":"23","/home/gurramkonda_y/Desktop/react/emp-portal/src/HomeScreen.js":"24","/home/gurramkonda_y/Desktop/react/emp-portal/src/FilterScreen.js":"25","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/EmployeeDetails.js":"26","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Navbar.js":"27","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Footer.js":"28","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Home.js":"29","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/ScrollToTop.js":"30","/home/gurramkonda_y/Desktop/react/emp-portal/src/config.js":"31","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js":"32","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterNav.js":"33","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Howitworks.js":"34","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Projects.js":"35","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/HomeText.js":"36","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/styles/FooterStyles.js":"37","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Skills.js":"38","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Wheel.js":"39"},{"size":3021,"mtime":1625581488267,"results":"40","hashOfConfig":"41"},{"size":500,"mtime":1624609372000,"results":"42","hashOfConfig":"43"},{"size":624,"mtime":1626245452191,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1624615145000,"results":"45","hashOfConfig":"43"},{"size":943,"mtime":1626245469559,"results":"46","hashOfConfig":"43"},{"size":789,"mtime":1626245008453,"results":"47","hashOfConfig":"43"},{"size":3876,"mtime":1625725982330,"results":"48","hashOfConfig":"43"},{"size":2492,"mtime":1626251933580,"results":"49","hashOfConfig":"43"},{"size":245,"mtime":1625289182000,"results":"50","hashOfConfig":"43"},{"size":126,"mtime":1625646025295,"results":"51","hashOfConfig":"43"},{"size":3596,"mtime":1626241702309,"results":"52","hashOfConfig":"43"},{"size":4851,"mtime":1626246412696,"results":"53","hashOfConfig":"43"},{"size":4211,"mtime":1625667131074,"results":"54","hashOfConfig":"43"},{"size":25199,"mtime":1626251980642,"results":"55","hashOfConfig":"43"},{"size":890,"mtime":1625645177448,"results":"56","hashOfConfig":"43"},{"size":3053,"mtime":1625651722621,"results":"57","hashOfConfig":"43"},{"size":6048,"mtime":1625651616694,"results":"58","hashOfConfig":"43"},{"size":558,"mtime":1625201086000,"results":"59","hashOfConfig":"43"},{"size":3883,"mtime":1626246725232,"results":"60","hashOfConfig":"43"},{"size":3480,"mtime":1626246681848,"results":"61","hashOfConfig":"43"},{"size":500,"mtime":1624609372000,"results":"62","hashOfConfig":"63"},{"size":624,"mtime":1626245452000,"results":"64","hashOfConfig":"63"},{"size":362,"mtime":1624615145000,"results":"65","hashOfConfig":"63"},{"size":942,"mtime":1626855688456,"results":"66","hashOfConfig":"63"},{"size":803,"mtime":1626848313516,"results":"67","hashOfConfig":"63"},{"size":4259,"mtime":1626848566652,"results":"68","hashOfConfig":"63"},{"size":4888,"mtime":1626786191394,"results":"69","hashOfConfig":"63"},{"size":2492,"mtime":1626251933580,"results":"70","hashOfConfig":"63"},{"size":4211,"mtime":1625667131074,"results":"71","hashOfConfig":"63"},{"size":245,"mtime":1625289182000,"results":"72","hashOfConfig":"63"},{"size":153,"mtime":1626855464767,"results":"73","hashOfConfig":"63"},{"size":25654,"mtime":1626848626705,"results":"74","hashOfConfig":"63"},{"size":3738,"mtime":1626855560621,"results":"75","hashOfConfig":"63"},{"size":3855,"mtime":1626851041241,"results":"76","hashOfConfig":"63"},{"size":6036,"mtime":1626851125843,"results":"77","hashOfConfig":"63"},{"size":890,"mtime":1625645177448,"results":"78","hashOfConfig":"63"},{"size":558,"mtime":1625201086000,"results":"79","hashOfConfig":"63"},{"size":3528,"mtime":1626850010268,"results":"80","hashOfConfig":"63"},{"size":3931,"mtime":1626850608368,"results":"81","hashOfConfig":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"d8f9lx",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ni1ej2",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1576isv",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/home/gurramkonda_y/Desktop/react/lister home/src/components/Home.js",["163","164"],"/home/gurramkonda_y/Desktop/react/skill-portal/src/index.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/App.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/reportWebVitals.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/HomeScreen.js",["165","166","167","168"],"/home/gurramkonda_y/Desktop/react/skill-portal/src/FilterScreen.js",["169"],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/EmployeeDetails.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Footer.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/ScrollToTop.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/config.js",["170"],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/FilterNav.js",["171"],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Navbar.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Home.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/FilterPage.js",["172","173","174","175","176"],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/HomeText.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Howitworks.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Projects.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/styles/FooterStyles.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Wheel.js",[],"/home/gurramkonda_y/Desktop/react/skill-portal/src/components/Skills.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/index.js",[],["177","178"],"/home/gurramkonda_y/Desktop/react/emp-portal/src/App.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/reportWebVitals.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/HomeScreen.js",["179"],"/home/gurramkonda_y/Desktop/react/emp-portal/src/FilterScreen.js",["180"],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/EmployeeDetails.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Navbar.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Footer.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Home.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/ScrollToTop.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/config.js",["181"],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js",["182"],"import React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\nimport Chip from '@material-ui/core/Chip';\n// import Rating from \"@material-ui/lab/Rating\";\nimport {  TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport emailIcon from \"../assets/email-logo.png\";\nimport { SocialIcon } from \"react-social-icons\";\n\n/*\n  state variables and api data: 20-68 lines\n  onchange functions 70-164\n  req Data initializations: 170-235\n  filters (Dynamic checkboxes,slider,input) html: 240-400\n  filtering employees based on filter logic: 401-550\n  displaying tags,emp cards,next/back buttons: 550-670\n*/\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],//api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:9,\n      checkedItemsTag : [],\n      skillsCheckBox: false\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n  //fetching data from api\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/projects').then(res => res.json()),\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    })\n  }\n\n  //Experience slider on change calls the fxn and changes the values\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  //all types of input text field changes will call the fxn and changes the value\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change \n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'checkedItemsSkills'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      // document.getElementById(item).checked = true;\n    }\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n  }\n\n  //show more skill filter option \n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  //show more filter filter option \n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n  //next or back to view other emp cards if exists\n  changePage(direction) {\n    console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n  //if u click cancel on the selected tags the checkboxes should be unchecked auto\n  handleDelete = (chipToDelete) => () => {\n    console.log(chipToDelete);\n\n    let nam = chipToDelete.filterField;\n    var isChecked = false;\n    var item = chipToDelete.value;;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'skill'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n      console.log(event.target);\n    }\n    else if(nam === 'manager'){\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'pod'){\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'project'){\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n  };\n\n\n  render() {\n    //initialisig the state variables for manipulations \n    let Employees = this.state.Employees;\n    // let experienceMin, experienceMax;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    let checkedItemsTagList = this.state.checkedItemsTag;\n    checkedItemsTagList=[];\n    this.state.filteredEmployee = [];\n    console.log((this.state.checkedItemsSkills));\n    console.log((ManagersChecked));\n    console.log((projectsChecked));\n    console.log((podsChecked));\n    console.log((this.state.skillsApi));\n    console.log(checkedItemsTagList);\n\n    //storing all the checked items in array to display as tags\n    if(skillsChecked.size >0 || ManagersChecked.size >0  ||  podsChecked.size >0  || projectsChecked.size>0){\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n     \n      for (let i = 0; i < skillsChecked.size ; i++) {\n        let ps = iteratorS1.next().value;\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = { value: ps, filterField: \"skill\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n         \n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"manager\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"pod\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"project\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n  }\n\n    return (\n      <>\n      <div className=\"filter-container\" id=\"filterPage\">\n        {/* different types of filters  */}\n        <div className=\"reqForm\">\n          <form >\n            {/* <p className=\"filterName\">Enter name or Id:</p> */}\n            {/* name or id input filed*/}\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Enter name or Id\"\n                variant=\"outlined\"\n                style={{ marginTop: \"15px\", padding: \"10.5px 8px\", paddingLeft: 0 }}\n                type=\"text\"\n                name=\"name\"\n                onChange={this.myChangeHandler}\n                className=\"InpcheckedItemsSkillsuttextField\"\n              />\n\n            {/* Experience slider*/}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n                style={{color:\"#ff8c4b\"}}\n              />\n            </div>\n\n            {/*  skills checkboxes*/}\n            <p className=\"filterName\">Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                <p className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </p>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\">Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            className=\"checkboxes\"\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n    \n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)? \n                  <p className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n          </form>\n        </div>\n\n    {/* checking the req conditions for emp */}\n          {Employees.map(x => (\n            <>\n              {(\n                (() => {\n                  var experienceMatch = false;\n                  var primarySkillsMatch = false;\n                  var projectsMatch = false;\n                  var nameMatch = false;\n                  var podsMatch = false;\n                  var managerMatch = false;\n                  //experience checking: whether the emp has meet the req experience of customer\n                  if ((((parseInt(x.Experience)) >= expMinReq) && (parseInt(x.Experience) <= expMaxReq))) {\n                    experienceMatch = true;\n                  }\n\n                  //name checking: whether the emp has matched the name\n                  if (nameReq) {\n                    if (((x.name.toLowerCase()).includes(nameReq.toLowerCase())) || x.Emp_id.includes(nameReq)) {\n                      nameMatch = true;\n                      //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n                    } else {\n                      return <></>\n                    }\n                  } else {\n                    nameMatch = true;     //if customer not typed anything\n                  }\n\n                  // skills checking: whether the emp has req  skills\n\n                  if (skillsChecked.size > 0) {\n                    const iterator1 = skillsChecked.keys();\n                    const iterator2 = skillsChecked.values();\n                    for (let i = 0; i < skillsChecked.size; i++) {\n                      let selectedSkill = iterator2.next().value;\n                      let ps = iterator1.next().value;\n                      if (selectedSkill) {\n                        if (((x.primary_skills.toLowerCase()).includes(ps)) || ((x.secndary_skills.toLowerCase()).includes(ps))) {\n\n                          primarySkillsMatch = true;\n                          // console.log(\"true\");\n                        } else {\n                          // console.log(\"false\");\n                          return (<></>);\n                        }\n\n                      } else {\n                        primarySkillsMatch = true;\n                       \n                      }\n                    }\n                  } else {\n                    primarySkillsMatch = true;\n                  }\n\n                  //managers Match\n                  if (ManagersChecked.size > 0) {\n                    const iterator1 = ManagersChecked.keys();\n                    const iterator2 = ManagersChecked.values();\n                    let oneManagerAtleastChecked = false;\n                    for (let i = 0; i < ManagersChecked.size; i++) {\n                        let selectedManger = iterator2.next().value;\n                         let ps = iterator1.next().value;\n                      if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n                        oneManagerAtleastChecked = true;\n                        if (((x.Manager.toLowerCase()).includes(ps))) {\n                          managerMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          managerMatch = false;\n                        }\n\n                      } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {\n                        managerMatch = true;\n                      }\n                    }\n                  } else {\n                    managerMatch = true;\n                  }\n                  // console.log(managerMatch);\n\n\n                  //pods Match\n                  if (podsChecked.size > 0) {\n                    const iterator1 = podsChecked.keys();\n                    const iterator2 = podsChecked.values();\n                    let onePodAtleastChecked = false;\n                    for (let i = 0; i < podsChecked.size; i++) {\n                        let selectedPod = iterator2.next().value;\n                      let ps = iterator1.next().value;\n\n                      if (selectedPod && !podsMatch) {\n                        onePodAtleastChecked = true;\n                        // let ps = iterator1.next().value;\n                        console.log(ps);\n                        console.log(x.Pod.toLowerCase());\n\n                        if (((x.Pod.toLowerCase()).includes(ps))) {\n\n                          podsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          podsMatch = false;\n                        }\n\n                      } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) {\n                        podsMatch = true;\n                      }\n                    }\n                  } else {\n                    podsMatch = true;\n                  }\n                  // console.log(podsMatch);\n\n\n                  //projects match\n                  if (projectsChecked.size > 0) {\n                    const iterator1 = projectsChecked.keys();\n                    const iterator2 = projectsChecked.values();\n                    let oneProjectAtleastChecked = false;\n                    for (let i = 0; i < projectsChecked.size; i++) {\n                        let selectedProject = iterator2.next().value;\n                        let ps = iterator1.next().value;\n                      if (selectedProject && !projectsMatch) {\n                        oneProjectAtleastChecked = true;\n                        console.log(ps);\n                        console.log(x.current_working_project.toLowerCase());\n\n                        if (((x.current_working_project.toLowerCase()).includes(ps))) {\n\n                          projectsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          projectsMatch = false;\n                        }\n\n                      } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) {\n                        projectsMatch = true;   \n                      } \n                    }\n                  } else {\n                    projectsMatch = true;\n                  }\n                  // console.log(projectsMatch);\n\n\n\n\n                  if (experienceMatch && nameMatch && primarySkillsMatch && managerMatch && podsMatch && projectsMatch) {\n                    this.state.filteredEmployee.push(x);\n                  }\n                })()\n              )}\n            </>\n          ))\n          }\n    \n\n        {/* //displaying */}\n        <div className=\"Employees\">\n{/* selected filters as tags */}\n          {console.log(this.state.checkedItemsTag)}\n          <div className=\"selectedTags\">   \n          {checkedItemsTagList.map(x => ( \n            <>\n              {(\n                (() => {\n                  return (\n                    (\n                      <>\n                        <Chip\n                          label={x.value}\n                          // icon={icon}\n                          onDelete={this.handleDelete(x)}\n                          className=\"tags\"\n                        />\n                      </>\n                    )\n                  )\n                })()\n              )}\n            </>\n          ))\n          }\n          </div>\n\n          {this.state.filteredEmployee.length>0 ? console.log(this.state.filteredEmployee.length):\n          <>\n          {(\n          (()=>{\n            return(   //no result found\n              <div className='NoResult'>\n               <img alt= \"No result found\" src= {NoResult}></img>   \n              </div>\n              )})())\n          }\n          </>\n          }\n\n          {/* Filtered Employees displaying */}\n          {this.state.filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => (\n            <>\n              {(\n                (() => {\n                    return (\n                      (\n                         \n                        <div className=\"Employee-details\">\n                          <header>\n                            <div className=\"avatar\">\n                              <img\n                                src={`${config.drupal_url}/${employee.Profile_photo}`}\n                                height=\"200\"\n                                alt=\"profilephoto\"\n                                className=\"profilephoto\"\n                              ></img>\n                            </div>\n                          </header>\n                          {/* {employee.name} */}\n                          <div className=\"Employee-description\">\n                            <p className=\"Name\" style={{ marginBottom: \"1rem\" }}>\n                              {employee.name}\n                            </p>\n                            {/* <p>{ employee.Emp_id }</p> */}\n                            <p>{employee.role}</p>\n                            <div className=\"Manager-email\">\n                            <p\n                              style={{\n                                textAlign: \"left\",\n                                fontSize: \"0.7rem\",\n                                marginBottom: \"5px\",\n                              }}\n                            >\n                              Manager: {employee.Manager}\n                            </p>\n                             <a href={\"mailto:\" + employee.email}><img style={{borderRadius:\"50%\", textAlign: \"right\",height: \"22px\", marginRight:\"14px\" }} alt= \"email-icon\" src={emailIcon}></img></a>\n                           \n                            </div>\n                            <div className=\"exp-linkedin\">\n                            <p style={{ textAlign: \"left\", fontSize: \"0.7rem\" }}>\n                              Experience: {employee.Experience} years\n                            </p>\n                            <SocialIcon url={employee.linkedin_profile} bgColor=\"#282936\" style={{borderRadius:\"50%\", textAlign: \"right\", fontSize: \"0.7rem\",height: \"22px\"  }} ></SocialIcon>\n                            </div>\n                            <button class=\"button\">\n                              <span>\n                                <a href={\"/EmployeeDetails/\" + employee.Emp_id}>View Profile</a>{\" \"}\n                              </span>\n                            </button>\n                          </div>\n                      </div>\n                      \n                      )\n                    )\n                })()\n              )}\n            </>\n          ))\n          \n          } \n        </div>\n      </div>\n      {/* next page or back button for viewing the cards */}\n      <div className=\"nextBack\">\n      {this.state.currentPage > 1 ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; Back</button>\n      : null}\n      {this.state.filteredEmployee.length  > this.state.currentPage * this.state.maxItemsPerPage ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}>Next &raquo;</button>\n      : null}\n     </div>\n    </>\n    );\n  }\n}\n","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterNav.js",["183"],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Howitworks.js",["184","185","186","187","188","189"],"import React, { useEffect } from \"react\";\nimport perfect from \"../assets/perfect.png\";\nimport search from \"../assets/search.png\";\nimport share from \"../assets/share.png\";\nimport styled from \"styled-components\";\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\"\n\nconst Conatiner = styled.div`\n    display:flex;\n    flex-direction:column;\n    font-family: Montserrat;\n    width:100%\n    height: 250vh;\n    background-color: #F5F5F5;\n    @media (max-width:400px){\n      height:100%;\n    }\n  `;\n\nconst Left_How_it_works = styled.div`\n\n  margin: 0px;\n  padding:0px;\n  img {\n    z-index:1;\n    @media (max-width:400px){\n      height:85%;\n      width:85%;\n    }\n  }\n  h1 {\n    color:#939191;\n    font-size: 2rem;\n    font-weight: 600;\n    @media (max-width:400px){\n      font-size:1.3rem;\n    }\n  }\n  p {\n    font-size: 1.5rem;\n    margin-left: 15px;\n    @media (max-width:400px){\n      font-size:0.8rem;\n    }\n  }\n  @media (max-width:400px){\n    width:100%;\n    margin:0;\n    padding:0;\n    font-size:1rem;\n}\n  \n\n`;\n\nconst Right_How_it_works = styled.div`\n \n  margin: 0px;\n  padding: 0px;\n  img {\n    padding-left:7rem ;\n    z-index:1;\n    @media (max-width:400px){\n      height:85%;\n      width:85%;\n    }\n  }\n  h1 {\n    color:#939191;\n    font-size: 2rem;\n    font-weight: 600;\n    padding-left: 7rem;\n    @media (max-width:400px){\n      font-size:1.3rem;\n    }\n  }\n  p {\n    font-size: 1.5rem;\n    margin-left: 15px;\n    padding-left: 8rem;\n    @media (max-width:400px){\n      font-size:0.8rem;\n    }\n  }\n  @media (max-width:400px){\n    height:75%;\n    width:100%;\n    margin:0;\n    padding:0;\n}\n  \n`;\nconst Heading = styled.h1`\n  \n    margin-left:30px;\n    padding:0.7rem;\n    font-weight:700;\n    font-size:2rem;\n    @media (max-width:400px){\n      margin:0;\n      margin-bottom:0.7rem;\n      padding:0rem;\n      font-weight:700;\n      font-size:1.8rem;\n  }\n`;\n\nconst Row = styled.div`\n  text-align:left;\n  padding-bottom:5%;\n  justify-between: space-between;\n  display: flex;\n  align-items: center;\n  max-width: 1100px;\n  padding-left: 150px;\n  @media (max-width:400px){\n    width:100%;\n    margin:0;\n    padding:3%;\n    font-size:1rem;\n}\n  \n`;\n\nconst Howitworks = () => {\n  useEffect(() => {\n    Aos.init({ duration: 2000 });\n\n  }, []);\n  return (\n    <>\n\n      <Conatiner id=\"Howitworks\">\n        <Heading>How it Works</Heading>\n        <Row>\n          <div data-aos=\"fade-right\" className=\"Left\">\n            <Left_How_it_works>\n              <h1>Struck Ups, Facing issues Need Help?</h1>\n              <p>The right place is here, Search here for right person.</p>\n            </Left_How_it_works>\n          </div>\n          <div data-aos=\"fade-left\" className=\"Right\">\n            <Right_How_it_works>\n              <img src={search} alt=\"search\"></img>\n            </Right_How_it_works>\n          </div>\n        </Row>\n        <Row>\n          <div data-aos=\"fade-right\" className=\"Left\">\n            <Left_How_it_works>\n              <img src={perfect} alt=\"filter\"></img>\n            </Left_How_it_works>\n          </div>\n          <div data-aos=\"fade-left\" className=\"Right\">\n            <Right_How_it_works>\n              <h1> Look for the best one!</h1>\n              <p> Find the perfect and wonderful matches.</p>\n            </Right_How_it_works>\n          </div>\n        </Row>\n        <Row>\n          <div data-aos=\"fade-right\" className=\"Left\">\n            <Left_How_it_works>\n              <h1>Start sharing and get your needs!</h1>\n              <p>Start Working together and do it quickly with sharing mind.</p>\n            </Left_How_it_works>\n          </div>\n          <div data-aos=\"fade-left\" className=\"Right\">\n            <Right_How_it_works>\n              <img src={share} alt=\"reach and work\"></img>\n            </Right_How_it_works>\n          </div>\n        </Row>\n      </Conatiner>\n    </>\n  );\n};\n\nexport default Howitworks;\n","/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Projects.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/HomeText.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/styles/FooterStyles.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Skills.js",[],"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Wheel.js",[],{"ruleId":"190","severity":1,"message":"191","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":14},{"ruleId":"190","severity":1,"message":"194","line":10,"column":7,"nodeType":"192","messageId":"193","endLine":10,"endColumn":21},{"ruleId":"190","severity":1,"message":"195","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":15},{"ruleId":"190","severity":1,"message":"196","line":7,"column":17,"nodeType":"192","messageId":"193","endLine":7,"endColumn":23},{"ruleId":"190","severity":1,"message":"197","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":17,"column":6,"nodeType":"200","endLine":17,"endColumn":8,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"199","line":15,"column":8,"nodeType":"200","endLine":15,"endColumn":10,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":1,"nodeType":"205","endLine":4,"endColumn":4},{"ruleId":"198","severity":1,"message":"199","line":33,"column":8,"nodeType":"200","endLine":33,"endColumn":10,"suggestions":"206"},{"ruleId":"190","severity":1,"message":"207","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":168,"column":5,"nodeType":"210","messageId":"211","endLine":168,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":304,"column":17,"nodeType":"214","endLine":305,"endColumn":48},{"ruleId":"212","severity":1,"message":"213","line":387,"column":19,"nodeType":"214","endLine":388,"endColumn":53},{"ruleId":"215","severity":1,"message":"216","line":595,"column":16,"nodeType":"214","endLine":595,"endColumn":37},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"198","severity":1,"message":"199","line":17,"column":6,"nodeType":"200","endLine":17,"endColumn":8,"suggestions":"221"},{"ruleId":"198","severity":1,"message":"199","line":15,"column":8,"nodeType":"200","endLine":15,"endColumn":10,"suggestions":"222"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":1,"nodeType":"205","endLine":4,"endColumn":4},{"ruleId":"208","severity":1,"message":"209","line":184,"column":5,"nodeType":"210","messageId":"211","endLine":184,"endColumn":15},{"ruleId":"198","severity":1,"message":"199","line":33,"column":8,"nodeType":"200","endLine":33,"endColumn":10,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":138,"column":13,"nodeType":"214","messageId":"226","endLine":138,"endColumn":32},{"ruleId":"224","severity":1,"message":"227","line":144,"column":13,"nodeType":"214","messageId":"226","endLine":144,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":151,"column":13,"nodeType":"214","messageId":"226","endLine":151,"endColumn":32},{"ruleId":"224","severity":1,"message":"227","line":156,"column":13,"nodeType":"214","messageId":"226","endLine":156,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":164,"column":13,"nodeType":"214","messageId":"226","endLine":164,"endColumn":32},{"ruleId":"224","severity":1,"message":"227","line":170,"column":13,"nodeType":"214","messageId":"226","endLine":170,"endColumn":33},"no-unused-vars","'Lottie' is defined but never used.","Identifier","unusedVar","'defaultOptions' is assigned a value but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'FilterScreen' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.","ArrayExpression",["228"],["229"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["230"],"'Checkbox' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["231"],"no-negated-in-lhs",["232"],["233"],["234"],["235"],"react/jsx-pascal-case","Imported JSX component Left_How_it_works must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Right_How_it_works must be in PascalCase or SCREAMING_SNAKE_CASE",{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"236","fix":"239"},"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"240"},{"desc":"236","fix":"241"},{"desc":"236","fix":"242"},"Update the dependencies array to be: [getItems]",{"range":"243","text":"244"},{"range":"245","text":"244"},{"range":"246","text":"244"},{"range":"247","text":"244"},{"range":"248","text":"244"},{"range":"249","text":"244"},[605,607],"[getItems]",[592,594],[1091,1093],[604,606],[585,587],[1090,1092]]