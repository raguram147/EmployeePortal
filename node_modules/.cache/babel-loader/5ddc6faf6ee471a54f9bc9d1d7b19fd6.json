{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config'; // import Typography from '@material-ui/core/Typography';\n\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueText = value => {\n      return `${value}`;\n    };\n\n    this.handleChange = (e, newValue) => {\n      console.log(newValue);\n      this.setState({\n        ExperienceMinMax: newValue\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow: 10,\n      //number of skill filters to be shown\n      projectsFilterShow: 10,\n      //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage: 1,\n      maxItemsPerPage: 9,\n      checkedItemsTag: []\n    };\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/lister/Employees').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/skills').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/manager').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/pod').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/projects').then(res => res.json())]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    });\n  }\n\n  CheckBoxhandleChange(event) {\n    //skills,project,pod,manager checkeditems change\n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    if (nam === 'checkedItemsSkills') this.setState(prevState => ({\n      checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n    }));else if (nam === 'checkedItemsManager') this.setState(prevState => ({\n      checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n    }));else if (nam === 'checkedItemsPod') this.setState(prevState => ({\n      checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n    }));else if (nam === 'checkedItemsProjects') this.setState(prevState => ({\n      checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n    }));\n  }\n\n  showMoreSkills() {\n    this.state.skillsFilterShow === 10 ? this.setState({\n      skillsFilterShow: this.state.skillsApi.length,\n      skillsExpanded: true\n    }) : this.setState({\n      skillsFilterShow: 10,\n      skillsExpanded: false\n    });\n  }\n\n  showMoreProjects() {\n    this.state.projectsFilterShow === 10 ? this.setState({\n      projectsFilterShow: this.state.projectsApi.length,\n      projectsExpanded: true\n    }) : this.setState({\n      projectsFilterShow: 10,\n      projectsExpanded: false\n    });\n  }\n\n  changePage(direction) {\n    console.log(direction);\n\n    if (direction === 'back') {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    } else if (direction === 'next') {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  render() {\n    let Employees = this.state.Employees; // let experienceMin, experienceMax;\n\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let skillsFilterShowCust = this.state.skillsFilterShow;\n    let checkedItemsTag = this.state.checkedItemsTag;\n    this.state.filteredEmployee = [];\n    console.log(this.state.checkedItemsSkills);\n    console.log(ManagersChecked);\n    console.log(this.state.skillsApi);\n\n    if (skillsChecked.size() > 0) {\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size(); i++) {\n        if (iteratorS2.next().value) {\n          let ps = iteratorS1.next().value;\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"skill\"\n          };\n          checkedItemsTag.push(tagsCheckedObj);\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reqForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Enter name or Id:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              onChange: this.myChangeHandler,\n              className: \"InputtextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Experience-overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Experience: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", this.state.ExperienceMinMax[0], \" - \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"  \", this.state.ExperienceMinMax[1], \" years\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"experienceSlider\",\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                defaultValue: [0, 25],\n                value: this.ExperienceMinMax,\n                onChange: this.handleChange,\n                valueLabelDisplay: \"auto\",\n                \"aria-labelledby\": \"range-slider\",\n                getAriaValueText: this.valueText,\n                step: 1,\n                min: 0,\n                max: 45\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Skills :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        name: \"checkedItemsSkills\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreSkills,\n                  children: this.state.skillsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 21\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Managers :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: this.state.MangersApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsManager\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Pods :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: this.state.PodsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsPod\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"projects :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.projectsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsProjects\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)), this.state.projectsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreProjects,\n                  children: this.state.projectsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this) : console.log(\"less products\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: (() => {\n            var experienceMatch = false;\n            var primarySkillsMatch = false;\n            var projectsMatch = false;\n            var nameMatch = false;\n            var podsMatch = false;\n            var managerMatch = false; //experience checking: whether the emp has meet the req experience of customer\n\n            if (parseInt(x.Experience) >= expMinReq && parseInt(x.Experience) <= expMaxReq) {\n              experienceMatch = true;\n            } //name checking: whether the emp has matched the name\n\n\n            if (nameReq) {\n              if (x.name.toLowerCase().includes(nameReq.toLowerCase()) || x.Emp_id.includes(nameReq)) {\n                nameMatch = true; //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n              } else {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n              }\n            } else {\n              nameMatch = true; //if customer not typed anything\n            } // skills checking: whether the emp has req  skills\n\n\n            if (skillsChecked.size > 0) {\n              const iterator1 = skillsChecked.keys();\n              const iterator2 = skillsChecked.values(); // console.log(iterator1.next().value);\n              // console.log(iterator2.next().value);\n\n              for (let i = 0; i < skillsChecked.size; i++) {\n                if (iterator2.next().value) {\n                  // console.log(iterator1.next().value);\n                  let ps = iterator1.next().value; // let tagsCheckedObj = {value: ps, filterField:\"skill\"};\n                  // checkedItemsTag.push(tagsCheckedObj);\n                  // console.log(tagsCheckedObj);\n                  // console.log(x.primary_skills.toLowerCase());\n\n                  if (x.primary_skills.toLowerCase().includes(ps) || x.secndary_skills.toLowerCase().includes(ps)) {\n                    primarySkillsMatch = true; // console.log(\"true\");\n                  } else {\n                    // console.log(\"false\");\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n                  }\n                } else {\n                  primarySkillsMatch = true;\n                  console.log(iterator1.next().value); //don't uncomment this line if u want remove console.log\n                }\n              }\n            } else {\n              primarySkillsMatch = true;\n            } //managers Match\n\n\n            if (ManagersChecked.size > 0) {\n              const iterator1 = ManagersChecked.keys();\n              const iterator2 = ManagersChecked.values();\n              let oneManagerAtleastChecked = false;\n\n              for (let i = 0; i < ManagersChecked.size; i++) {\n                let selectedManger = iterator2.next().value;\n                let ps = iterator1.next().value;\n\n                if (selectedManger && !managerMatch) {\n                  //check whether the checkbox is still selected and manager is matched in previous loop\n                  oneManagerAtleastChecked = true;\n\n                  if (x.Manager.toLowerCase().includes(ps)) {\n                    managerMatch = true;\n                    console.log(\"true inside loop\");\n                  } else {\n                    managerMatch = false;\n                  }\n                } else if (!oneManagerAtleastChecked && i === ManagersChecked.size - 1) {\n                  managerMatch = true;\n                }\n              }\n            } else {\n              managerMatch = true;\n            } // console.log(managerMatch);\n            //pods Match\n\n\n            if (podsChecked.size > 0) {\n              const iterator1 = podsChecked.keys();\n              const iterator2 = podsChecked.values();\n              let onePodAtleastChecked = false;\n\n              for (let i = 0; i < podsChecked.size; i++) {\n                let selectedPod = iterator2.next().value;\n                let ps = iterator1.next().value;\n\n                if (selectedPod && !podsMatch) {\n                  onePodAtleastChecked = true; // let ps = iterator1.next().value;\n\n                  console.log(ps);\n                  console.log(x.Pod.toLowerCase());\n\n                  if (x.Pod.toLowerCase().includes(ps)) {\n                    podsMatch = true;\n                    console.log(\"true inside loop\");\n                  } else {\n                    podsMatch = false;\n                  }\n                } else if (!onePodAtleastChecked && i === podsChecked.size - 1) {\n                  podsMatch = true;\n                }\n              }\n            } else {\n              podsMatch = true;\n            } // console.log(podsMatch);\n            //projects match\n\n\n            if (projectsChecked.size > 0) {\n              const iterator1 = projectsChecked.keys();\n              const iterator2 = projectsChecked.values();\n              let oneProjectAtleastChecked = false;\n\n              for (let i = 0; i < projectsChecked.size; i++) {\n                let selectedProject = iterator2.next().value;\n                let ps = iterator1.next().value;\n\n                if (selectedProject && !projectsMatch) {\n                  oneProjectAtleastChecked = true;\n                  console.log(ps);\n                  console.log(x.current_working_project.toLowerCase());\n\n                  if (x.current_working_project.toLowerCase().includes(ps)) {\n                    projectsMatch = true;\n                    console.log(\"true inside loop\");\n                  } else {\n                    projectsMatch = false;\n                  }\n                } else if (!oneProjectAtleastChecked && i === projectsChecked.size - 1) {\n                  projectsMatch = true;\n                }\n              }\n            } else {\n              projectsMatch = true;\n            } // console.log(projectsMatch);\n\n\n            if (experienceMatch && nameMatch && primarySkillsMatch && managerMatch && podsMatch && projectsMatch) {\n              this.state.filteredEmployee.push(x);\n            }\n          })()\n        }, void 0, false)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Employees\",\n          children: [this.state.filteredEmployee.length > 0 ? console.log(this.state.filteredEmployee.length) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return (\n                /*#__PURE__*/\n                //no result found\n                _jsxDEV(\"div\", {\n                  className: \"list\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: NoResult\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 15\n                }, this)\n              );\n            })()\n          }, void 0, false), console.log(this.state.checkedItemsTag), this.state.filteredEmployee.slice(this.state.currentPage * this.state.maxItemsPerPage - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Employee-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost/${x.Profile_photo}`,\n                  height: \"200\",\n                  alt: \"profilephoto\",\n                  className: \"profilephoto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Employee-description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"Name\",\n                    children: x.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: x.role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Manager: \", x.Manager]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Experience: \", x.Experience, \" years\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"Details-Btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: '/EmployeeDetails/' + x.Emp_id,\n                    children: \"Show Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 24\n              }, this);\n            })()\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextBack\",\n        children: [this.state.currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('back'),\n          children: \"\\xAB Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 8\n        }, this) : null, this.state.filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('next'),\n          children: \"Next \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 8\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","EmployeeView","constructor","props","valueText","value","handleChange","e","newValue","console","log","setState","ExperienceMinMax","myChangeHandler","event","nam","target","name","val","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","skills","skillsFilterShow","projectsFilterShow","checkedItemsSkills","Map","checkedItemsManager","checkedItemsPod","checkedItemsProjects","skillsExpanded","projectsExpanded","filteredEmployee","currentPage","maxItemsPerPage","checkedItemsTag","CheckBoxhandleChange","bind","showMoreSkills","showMoreProjects","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","isChecked","checked","item","prevState","set","length","changePage","direction","render","expMinReq","expMaxReq","nameReq","skillsChecked","ManagersChecked","podsChecked","projectsChecked","skillsFilterShowCust","size","iteratorS1","keys","iteratorS2","values","i","next","ps","tagsCheckedObj","filterField","push","slice","map","toLowerCase","x","experienceMatch","primarySkillsMatch","projectsMatch","nameMatch","podsMatch","managerMatch","parseInt","Experience","includes","Emp_id","iterator1","iterator2","primary_skills","secndary_skills","oneManagerAtleastChecked","selectedManger","Manager","onePodAtleastChecked","selectedPod","Pod","oneProjectAtleastChecked","selectedProject","current_working_project","Profile_photo","role"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\n\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:9,\n      checkedItemsTag : []\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/lister/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/projects').then(res => res.json()),\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    })\n  }\n\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change\n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    if(nam === 'checkedItemsSkills')\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n  }\n\n\n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n  changePage(direction) {\n    console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n\n  render() {\n    let Employees = this.state.Employees;\n    // let experienceMin, experienceMax;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    let checkedItemsTag = this.state.checkedItemsTag;\n    this.state.filteredEmployee = [];\n    console.log((this.state.checkedItemsSkills));\n    console.log((ManagersChecked));\n    console.log((this.state.skillsApi));\n\n    if(skillsChecked.size()>0 ){\n    const iteratorS1 = skillsChecked.keys();\n    const iteratorS2 = skillsChecked.values();\n   for(let i=0; i<skillsChecked.size();i++){\n    if (iteratorS2.next().value) {\n      let ps = iteratorS1.next().value;\n      let tagsCheckedObj = {value: ps, filterField:\"skill\"};\n      checkedItemsTag.push(tagsCheckedObj);\n    }\n   }\n\n\n  }\n\n    return (\n      <>\n      <div className=\"filter-container\">\n        {/* different types of filters  */}\n        <div className=\"reqForm\">\n          <form >\n            <p className=\"filterName\">Enter name or Id:</p>\n            <input\n              type='text'\n              name='name'\n              onChange={this.myChangeHandler}\n              className=\"InputtextField\"\n            />\n\n            {/* Experience */}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n              />\n            </div>\n\n            {/*  skills */}\n            <p className=\"filterName\">Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                <a className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </a>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\">Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n    \n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)? \n                  <a className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </a> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n          </form>\n        </div>\n\n    {/* checking the req conditions for emp */}\n          {Employees.map(x => (\n            <>\n              {(\n                (() => {\n                  var experienceMatch = false;\n                  var primarySkillsMatch = false;\n                  var projectsMatch = false;\n                  var nameMatch = false;\n                  var podsMatch = false;\n                  var managerMatch = false;\n                  //experience checking: whether the emp has meet the req experience of customer\n                  if ((((parseInt(x.Experience)) >= expMinReq) && (parseInt(x.Experience) <= expMaxReq))) {\n                    experienceMatch = true;\n                  }\n\n                  //name checking: whether the emp has matched the name\n                  if (nameReq) {\n                    if (((x.name.toLowerCase()).includes(nameReq.toLowerCase())) || x.Emp_id.includes(nameReq)) {\n                      nameMatch = true;\n                      //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n                    } else {\n                      return <></>\n                    }\n                  } else {\n                    nameMatch = true;     //if customer not typed anything\n                  }\n\n                  // skills checking: whether the emp has req  skills\n\n                  if (skillsChecked.size > 0) {\n                    const iterator1 = skillsChecked.keys();\n                    const iterator2 = skillsChecked.values();\n\n                    // console.log(iterator1.next().value);\n                    // console.log(iterator2.next().value);\n                    for (let i = 0; i < skillsChecked.size; i++) {\n\n                      if (iterator2.next().value) {\n                        // console.log(iterator1.next().value);\n                        let ps = iterator1.next().value;\n                        // let tagsCheckedObj = {value: ps, filterField:\"skill\"};\n                        // checkedItemsTag.push(tagsCheckedObj);\n                        // console.log(tagsCheckedObj);\n                        // console.log(x.primary_skills.toLowerCase());\n\n                        if (((x.primary_skills.toLowerCase()).includes(ps)) || ((x.secndary_skills.toLowerCase()).includes(ps))) {\n\n                          primarySkillsMatch = true;\n                          // console.log(\"true\");\n                        } else {\n                          // console.log(\"false\");\n                          return (<></>);\n                        }\n\n                      } else {\n                        primarySkillsMatch = true;\n                        console.log(iterator1.next().value);  //don't uncomment this line if u want remove console.log\n                      }\n                    }\n                  } else {\n                    primarySkillsMatch = true;\n                  }\n\n                  //managers Match\n                  if (ManagersChecked.size > 0) {\n                    const iterator1 = ManagersChecked.keys();\n                    const iterator2 = ManagersChecked.values();\n                    let oneManagerAtleastChecked = false;\n                    for (let i = 0; i < ManagersChecked.size; i++) {\n                        let selectedManger = iterator2.next().value;\n                         let ps = iterator1.next().value;\n                      if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n                        oneManagerAtleastChecked = true;\n                        if (((x.Manager.toLowerCase()).includes(ps))) {\n                          managerMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          managerMatch = false;\n                        }\n\n                      } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {\n                        managerMatch = true;\n                      }\n                    }\n                  } else {\n                    managerMatch = true;\n                  }\n                  // console.log(managerMatch);\n\n\n                  //pods Match\n                  if (podsChecked.size > 0) {\n                    const iterator1 = podsChecked.keys();\n                    const iterator2 = podsChecked.values();\n                    let onePodAtleastChecked = false;\n                    for (let i = 0; i < podsChecked.size; i++) {\n                        let selectedPod = iterator2.next().value;\n                      let ps = iterator1.next().value;\n\n                      if (selectedPod && !podsMatch) {\n                        onePodAtleastChecked = true;\n                        // let ps = iterator1.next().value;\n                        console.log(ps);\n                        console.log(x.Pod.toLowerCase());\n\n                        if (((x.Pod.toLowerCase()).includes(ps))) {\n\n                          podsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          podsMatch = false;\n                        }\n\n                      } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) {\n                        podsMatch = true;\n                      }\n                    }\n                  } else {\n                    podsMatch = true;\n                  }\n                  // console.log(podsMatch);\n\n\n                  //projects match\n                  if (projectsChecked.size > 0) {\n                    const iterator1 = projectsChecked.keys();\n                    const iterator2 = projectsChecked.values();\n                    let oneProjectAtleastChecked = false;\n                    for (let i = 0; i < projectsChecked.size; i++) {\n                        let selectedProject = iterator2.next().value;\n                        let ps = iterator1.next().value;\n                      if (selectedProject && !projectsMatch) {\n                        oneProjectAtleastChecked = true;\n                        console.log(ps);\n                        console.log(x.current_working_project.toLowerCase());\n\n                        if (((x.current_working_project.toLowerCase()).includes(ps))) {\n\n                          projectsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          projectsMatch = false;\n                        }\n\n                      } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) {\n                        projectsMatch = true;   \n                      } \n                    }\n                  } else {\n                    projectsMatch = true;\n                  }\n                  // console.log(projectsMatch);\n\n\n\n\n                  if (experienceMatch && nameMatch && primarySkillsMatch && managerMatch && podsMatch && projectsMatch) {\n                    this.state.filteredEmployee.push(x);\n                  }\n                })()\n              )}\n            </>\n          ))\n          }\n    \n\n        {/* //displaying */}\n        <div className=\"Employees\">\n          {this.state.filteredEmployee.length>0 ? console.log(this.state.filteredEmployee.length):\n          <>\n          {(\n          (()=>{\n            return(   //no result found\n              <div className='list'>\n               <img src= {NoResult}></img>   \n              </div>\n              )})())\n          }\n          </>\n          }\n\n          {console.log(this.state.checkedItemsTag)}\n          {/* <div className=\"selectedTags\">\n            {\n              <>\n                {(\n                  (() => {\n                    console.log(this.state.checkedItemsSkills.size +\" tags\")\n                    let checkedItemsTag = [];\n                    if(this.state.checkedItemsSkills.size > 0){\n                      console.log(this.state.checkedItemsSkills.size+\" tags\")\n                      const iterator1 = this.state.checkedItemsSkills.keys();\n                      const iterator2 = this.state.checkedItemsSkills.values();\n                      \n                      for(let i=0; i<this.state.checkedItemsSkills.size; i++){\n                        if (iterator2.next().value) {\n                          checkedItemsTag.push(iterator1.next().value);\n                        }else{\n                          console.log(iterator1.next().value);\n                        }\n                        \n                      }\n                      console.log(checkedItemsTag);    \n                      }\n\n                      {checkedItemsTag.map(item => (\n                        <>\n                          {(\n                            (() => {\n                                return (\n                                    <div>{item}</div>\n                                )\n                            })()\n                          )}\n                        </>\n                      ))}\n                    })()\n                  )}\n              </>\n            }\n          </div> */}\n\n          {/* Filtered Employees displaying */}\n          {this.state.filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(x => (\n            <>\n              {(\n                (() => {\n                    return (\n                      (<div className=\"Employee-details\">\n                        <img src={`http://localhost/${x.Profile_photo}`}\n                          height='200' alt=\"profilephoto\"\n                          className=\"profilephoto\" />\n                        {/* {x.name} */}\n                        <div className=\"Employee-description\">\n                          <p className=\"Name\">{x.name}</p>\n                          {/* <p>{ x.Emp_id }</p> */}\n                          <p>{x.role}</p>\n                          <p>Manager: {x.Manager}</p>\n\n                          <p>Experience: {x.Experience} years</p>\n\n                        </div>\n                        <button className=\"Details-Btn\"><a href={'/EmployeeDetails/' + x.Emp_id}>Show Details</a></button>\n                      </div>)\n                    )\n                })()\n              )}\n            </>\n          ))\n          \n          } \n        </div>\n      </div>\n      <div className=\"nextBack\">\n      {this.state.currentPage > 1 ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; Back</button>\n      : null}\n      {this.state.filteredEmployee.length  > this.state.currentPage * this.state.maxItemsPerPage ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}>Next &raquo;</button>\n      : null}\n     </div>\n    </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}