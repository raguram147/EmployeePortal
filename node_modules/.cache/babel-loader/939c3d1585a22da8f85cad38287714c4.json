{"ast":null,"code":"var _jsxFileName = \"/home/raguram_s/lister-emp-portal/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Wheel from \"./Wheel\";\nimport Skills from \"./Skills\";\nimport he from \"he\";\nimport { Carousel } from \"react-bootstrap\";\nimport config from \"../config\";\nimport \"../components/styles/style.css\";\nimport { Grid, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n   padding:5%;\n    overflow:hidden;\n    font-family: Montserrat;\n    width:100%;\n    height: 100%;\n    background-color: #282828;\n    color: white;\n}`; // #ffebcc;\n\n_c = Container;\nconst Left = styled.div`\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\n_c2 = Left;\nconst Right = styled.div`\n  margin: 0;\n  padding: 0;\n  img {\n    padding-right: 0;\n    margin-right: -10px;\n    right: 0;\n  }\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\n_c3 = Right;\nconst Heading = styled.h1`\n  margin-bottom: 2%;\n  font-weight: 700;\n  font-size: 2rem;\n  text-align: center;\n`;\n_c4 = Heading;\nconst Row = styled.div`\n  text-align: left;\n  justify-between: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 100%;\n`;\n_c5 = Row;\nconst fetchURL = config.drupal_url + \"/Taxonomy/Projects\";\nconst fetchSkill = config.drupal_url + \"/Taxonomy/Skills\";\n\nconst Projects = ({\n  project\n}) => {\n  _s();\n\n  const theme = useTheme();\n  let matches = useMediaQuery(theme.breakpoints.down('xl'));\n  const [projectData, setProjectData] = useState([]);\n  const [skillData, setSkillData] = useState([]);\n  useEffect(() => {\n    const fetchFuntion = async () => {\n      let data, data1;\n      data = await fetch(fetchURL);\n      data1 = await fetch(fetchSkill);\n      let res = await data.json();\n      setProjectData(res);\n      res = await data1.json();\n      setSkillData(res);\n    };\n\n    fetchFuntion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      id: \"Categories\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Projects and Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 12,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              xs: 12,\n              sm: 12,\n              md: 12,\n              lg: 12,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                md: 6,\n                lg: 6,\n                children: /*#__PURE__*/_jsxDEV(Left, {\n                  id: \"top_left\",\n                  children: project && project.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: he.decode(x.project_description.replace(/<[^>]+>/g, \"\")).split(\"....,\").map((projectDesc, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: projectDesc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 31\n                    }, this))\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                md: 6,\n                lg: 6,\n                children: /*#__PURE__*/_jsxDEV(Right, {\n                  id: \"top_right\",\n                  style: {\n                    display: matches ? \"none\" : \"block\"\n                  },\n                  children: [\" \", projectData && /*#__PURE__*/_jsxDEV(Wheel, {\n                    id: \"projects\",\n                    card: projectData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              xs: 12,\n              sm: 12,\n              md: 12,\n              lg: 12,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                md: 6,\n                lg: 6,\n                children: /*#__PURE__*/_jsxDEV(Left, {\n                  id: \"bottom_left\",\n                  style: {\n                    display: matches ? \"none\" : \"block\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Skills, {\n                    id: \"skills\",\n                    skill: skillData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                md: 6,\n                lg: 6,\n                children: /*#__PURE__*/_jsxDEV(Right, {\n                  id: \"bottom_right\",\n                  children: project && project.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: x.skills_description.split(\"....,\").map((skillsDesc, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: skillsDesc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 31\n                    }, this))\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Acheivements\",\n      className: \"Achievments-container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Achievements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        variant: \"dark\",\n        className: \"Achievements\",\n        children: project && project[1].Achievements.split(\"....,\").map((x, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Achievement_text\",\n            children: [\"\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\", x.split(\"---\")[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            style: {\n              zIndex: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#e16428\",\n                zIndex: \"0\"\n              },\n              children: x.split(\"---\")[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Projects, \"xSnqhynjYkx+LYHf6ultNinqgoM=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c6 = Projects;\nexport default Projects;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Left\");\n$RefreshReg$(_c3, \"Right\");\n$RefreshReg$(_c4, \"Heading\");\n$RefreshReg$(_c5, \"Row\");\n$RefreshReg$(_c6, \"Projects\");","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/components/Projects.js"],"names":["React","useEffect","useState","styled","Wheel","Skills","he","Carousel","config","Grid","useMediaQuery","useTheme","Container","div","Left","Right","Heading","h1","Row","fetchURL","drupal_url","fetchSkill","Projects","project","theme","matches","breakpoints","down","projectData","setProjectData","skillData","setSkillData","fetchFuntion","data","data1","fetch","res","json","map","x","index","decode","project_description","replace","split","projectDesc","display","skills_description","skillsDesc","Achievements","zIndex","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Wheel from \"./Wheel\";\nimport Skills from \"./Skills\";\nimport he from \"he\";\nimport { Carousel } from \"react-bootstrap\";\nimport config from \"../config\";\nimport \"../components/styles/style.css\";\nimport { Grid,useMediaQuery,useTheme } from \"@material-ui/core\";\nconst Container = styled.div`\n   padding:5%;\n    overflow:hidden;\n    font-family: Montserrat;\n    width:100%;\n    height: 100%;\n    background-color: #282828;\n    color: white;\n}`;\n// #ffebcc;\nconst Left = styled.div`\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst Right = styled.div`\n  margin: 0;\n  padding: 0;\n  img {\n    padding-right: 0;\n    margin-right: -10px;\n    right: 0;\n  }\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\nconst Heading = styled.h1`\n  margin-bottom: 2%;\n  font-weight: 700;\n  font-size: 2rem;\n  text-align: center;\n`;\n\nconst Row = styled.div`\n  text-align: left;\n  justify-between: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 100%;\n`;\nconst fetchURL = config.drupal_url + \"/Taxonomy/Projects\";\nconst fetchSkill = config.drupal_url + \"/Taxonomy/Skills\";\n\nconst Projects = ({ project }) => {\n  const theme = useTheme();\n  let matches = useMediaQuery(theme.breakpoints.down('xl'));\n  const [projectData, setProjectData] = useState([]);\n  const [skillData, setSkillData] = useState([]);\n  useEffect(() => {\n    const fetchFuntion = async () => {\n      let data, data1;\n      data = await fetch(fetchURL);\n      data1 = await fetch(fetchSkill);\n      let res = await data.json();\n      setProjectData(res);\n      res = await data1.json();\n      setSkillData(res);\n    };\n    fetchFuntion();\n  }, []);\n\n  return (\n    <>\n      <Container id=\"Categories\">\n        <Heading>Projects and Skills</Heading>\n        <Grid container xs={12} sm={12} md={12} lg={12}>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Row>\n              <Grid container xs={12} sm={12} md={12} lg={12}>\n                <Grid item xs={12} sm={12} md={6} lg={6}>\n                  <Left id=\"top_left\">\n                    {project &&\n                      project.map((x, index) => (\n                        <div key={index}>\n                          {he\n                            .decode(\n                              x.project_description.replace(/<[^>]+>/g, \"\")\n                            )\n                            .split(\"....,\")\n                            .map((projectDesc, index) => (\n                              <p>{projectDesc}</p>\n                            ))}\n                        </div>\n                      ))}\n                  </Left>\n                </Grid>\n                <Grid item xs={12} sm={12} md={6} lg={6}>\n                  <Right id=\"top_right\" style={{display:matches?\"none\":\"block\"}}>\n                    {\" \"}\n                    {projectData && (\n                      <Wheel id=\"projects\" card={projectData}></Wheel>\n                    )}\n                  </Right>\n                </Grid>\n              </Grid>\n            </Row>\n          </Grid>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Row>\n              <Grid container xs={12} sm={12} md={12} lg={12} >\n                <Grid item xs={12} sm={12} md={6} lg={6}>\n                  <Left id=\"bottom_left\" style={{display:matches?\"none\":\"block\"}}>\n                    <Skills id=\"skills\" skill={skillData}></Skills>\n                  </Left>\n                </Grid>\n\n                <Grid item xs={12} sm={12} md={6} lg={6}>\n                  <Right id=\"bottom_right\">\n                    {project &&\n                      project.map((x, index) => (\n                        <div key={index}>\n                          {x.skills_description\n                            .split(\"....,\")\n                            .map((skillsDesc, index) => (\n                              <p>{skillsDesc}</p>\n                            ))}\n                        </div>\n                      ))}\n                  </Right>\n                </Grid>\n              </Grid>\n            </Row>\n          </Grid>\n        </Grid>\n      </Container>\n      <div id=\"Acheivements\" className=\"Achievments-container\">\n        <Heading>Achievements</Heading>\n\n        <Carousel variant=\"dark\" className=\"Achievements\">\n          {project &&\n            project[1].Achievements.split(\"....,\").map((x, index) => (\n              <Carousel.Item>\n                <div className=\"Achievement_text\">\n                  ​​​​​​​​{x.split(\"---\")[0]}\n                </div>\n                <Carousel.Caption style={{ zIndex: \"0\" }}>\n                  {/* <h3>Achievement {count++}</h3> */}\n                  <p style={{ color: \"#e16428\", zIndex: \"0\" }}>\n                    {x.split(\"---\")[1]}\n                  </p>\n                </Carousel.Caption>\n              </Carousel.Item>\n            ))}\n        </Carousel>\n      </div>\n    </>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}