{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment, useState } from \"react\";\nimport randomcolor from \"randomcolor\";\nimport { useParams } from \"react-router-dom\";\nimport \"../components/styles/orgChartStyles.css\"; // import useFetch from '../utility'\n\nimport empData from \"../EmpData.json\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  // const levelColor = randomcolor();\n  let params = useParams();\n  let BreadcrumbsArr = [];\n  let head = [];\n  window.sessionStorage.setItem(\"OrgLevel\", 1);\n\n  const ReportingPeople = EmpName => {\n    if (JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"))) {\n      // let ReportingArray = window.sessionStorage.getItem(EmpName);\n      // console.log(ReportingArray);\n      return JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"));\n    }\n\n    let ReportingPeopleArr = [];\n    let match = false;\n\n    for (let i = 0; i < empData.length; i++) {\n      let matching = false;\n\n      if (!match && empData[i].reports_to.includes(EmpName)) {\n        //checking for a match\n        ReportingPeopleArr.push(empData[i]);\n        match = true;\n        matching = true;\n      } else if (match && empData[i].reports_to.includes(EmpName)) {\n        //after having match all the reporting employee will be in group\n        ReportingPeopleArr.push(empData[i]);\n        matching = true;\n      }\n\n      if (match && !matching) {\n        //when the sequence of reporters broken then return the array\n        window.sessionStorage.setItem(EmpName + \" Reporting\", JSON.stringify(ReportingPeopleArr));\n        console.log(ReportingPeopleArr);\n        return ReportingPeopleArr;\n      }\n    }\n\n    return ReportingPeopleArr;\n  };\n\n  const ReportsTo = Emp => {\n    console.log(Emp[0].role); // let designation = Emp[0].role;\n    // let name = Emp[0].name; !Emp[0].role.includes(\"Chief Executive Officer\") ||\n\n    let reportsTo = Emp[0].reports_to;\n    let AllReportsToArr = [];\n\n    if (reportsTo) {\n      while (!reportsTo.includes(\"Srinivasan Gopal\")) {\n        let ReportsToArr = [];\n\n        if (JSON.parse(window.sessionStorage.getItem(reportsTo))) {\n          ReportsToArr = JSON.parse(window.sessionStorage.getItem(reportsTo));\n          AllReportsToArr.push(ReportsToArr[0]);\n        } else {\n          for (let i = 0; i < empData.length; i++) {\n            if (empData[i].name.includes(reportsTo)) {\n              ReportsToArr.push(empData[i]);\n              AllReportsToArr.push(empData[i]);\n              window.sessionStorage.setItem(empData[i].name, JSON.stringify(ReportsToArr));\n              window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(ReportsToArr));\n            }\n          }\n        }\n\n        console.log(ReportsToArr[0]); //  designation = ReportsToArr[0].role;\n\n        reportsTo = ReportsToArr[0].reports_to;\n      }\n    }\n\n    let CEO = [{\n      \"name\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0001\",\n      \"role\": \"Chief Executive Officer\",\n      \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\"\n    }];\n    AllReportsToArr.push(CEO[0]);\n    AllReportsToArr.reverse();\n    console.log(AllReportsToArr);\n    return AllReportsToArr;\n  }; //org chart level array initializations 2 cases for CEO and rem emp\n\n\n  if (params.Emp === \"Srinivasan Gopal\") {\n    //2 levels\n    head = [{\n      \"name\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0001\",\n      \"role\": \"Chief Executive Officer\",\n      \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\"\n    }];\n    const Presidents = ReportingPeople(params.Emp);\n    window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(head));\n    window.sessionStorage.setItem(head[0].name, JSON.stringify(head));\n\n    for (let i = 0; i < Presidents.length; i++) {\n      let EmpArr = [];\n      EmpArr.push(Presidents[i]);\n      window.sessionStorage.setItem(Presidents[i].name, JSON.stringify(EmpArr));\n    }\n\n    head = Presidents;\n    let Reporting = [];\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Reporting));\n  } else {\n    // 3 levels for non ceo\n    head = JSON.parse(window.sessionStorage.getItem(params.Emp)); // head.push(JSON.parse(params.Emp));\n\n    let arr = [];\n    arr.push(params.Emp);\n    console.log(params.Emp);\n    console.log(head);\n    let EmpReportsTo = head[0].reports_to;\n    console.log(EmpReportsTo);\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(ReportingPeople(params.Emp)));\n    BreadcrumbsArr = ReportsTo(head);\n\n    if (EmpReportsTo) {\n      if (JSON.parse(window.sessionStorage.getItem(EmpReportsTo))) {\n        let ReportsToArr = [];\n        ReportsToArr = JSON.parse(window.sessionStorage.getItem(EmpReportsTo));\n        window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(ReportsToArr));\n      } else {\n        let ReportsToArr = [];\n\n        for (let i = 0; i < empData.length; i++) {\n          if (empData[i].name.includes(head[0].reports_to)) {\n            ReportsToArr.push(empData[i]);\n            window.sessionStorage.setItem(empData[i].name, JSON.stringify(ReportsToArr));\n            window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(ReportsToArr));\n          }\n        }\n      }\n    } else {\n      let Ceo = [{\n        \"name\": \"Srinivasan Gopal\",\n        \"emp_id\": \"0001\",\n        \"role\": \"Chief Executive Officer\",\n        \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\"\n      }];\n      window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(Ceo));\n    }\n  }\n\n  console.log(window.sessionStorage.getItem(\"ReportsTo\"));\n  console.log(window.sessionStorage.getItem(\"Reporting\"));\n\n  const handleOnSelect = Emp => {\n    // the item selected\n    let EmpArr = [];\n    EmpArr.push(Emp);\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = Emp.name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr));\n    window.location.href = \"/OrgChart/\" + name;\n    console.log(Emp);\n  }; // const handleClick = (event) => {\n  //   event.preventDefault();\n  //   console.info('You clicked a breadcrumb.');\n  // }\n\n\n  const formatResult = item => {\n    return item;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"org-container\",\n    children: [params.Emp === \"Srinivasan Gopal\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      maxItems: 2,\n      \"aria-label\": \"breadcrumb\",\n      children: [BreadcrumbsArr.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        color: \"inherit\",\n        href: `/OrgChart/${item.name}`,\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        children: params.Emp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchWidget\",\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n        className: \"searchIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchAutocomplete\",\n        style: {\n          width: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n          items: empData,\n          onSelect: handleOnSelect,\n          autoFocus: true,\n          formatResult: formatResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"org-tree\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        data: head\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Chart;\nexport default Chart;\n\nconst Card = props => {\n  const levelColor = randomcolor();\n  console.log(props); //get the new emp details of desired emp (clicked) and show his org chart\n\n  const newChart = Emp => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = JSON.parse(Emp).name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr));\n    window.location.href = \"/OrgChart/\" + name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: JSON.parse(window.sessionStorage.getItem(\"ReportsTo\")).map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"OrgCard\",\n            onClick: () => newChart(JSON.stringify(item)),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: [console.log(item), console.log(props.data.length), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://dev-employeeportal.pantheonsite.io/${item.DP}`,\n                alt: \"Profile\",\n                style: {\n                  borderColor: levelColor\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"OrgCard-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-profile-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"OrgCard-body-h4\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empProfileNav\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/EmployeeDetails/\" + item.emp_id,\n                    children: /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n                      className: \"playIcon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 67\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"OrgCard-body-p\",\n                children: item.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: props.data.map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"OrgCard\",\n                  onClick: () => newChart(JSON.stringify(item)),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image\",\n                    children: [console.log(item), console.log(props.data.length), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `https://dev-employeeportal.pantheonsite.io/${item.DP}`,\n                      alt: \"Profile\",\n                      style: {\n                        borderColor: levelColor\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"OrgCard-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"name-profile-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"OrgCard-body-h4\",\n                        children: item.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"empProfileNav\",\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: \"/EmployeeDetails/\" + item.emp_id,\n                          children: /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n                            className: \"playIcon\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 275,\n                            columnNumber: 75\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 275,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"OrgCard-body-p\",\n                      children: item.role\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this), JSON.parse(window.sessionStorage.getItem(\"Reporting\")).length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: JSON.parse(window.sessionStorage.getItem(\"Reporting\")).map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"OrgCard\",\n                        onClick: () => newChart(JSON.stringify(item)),\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"image\",\n                          children: [console.log(item), console.log(props.data.length), /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: `https://dev-employeeportal.pantheonsite.io/${item.DP}`,\n                            alt: \"Profile\",\n                            style: {\n                              borderColor: levelColor\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 291,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"OrgCard-body\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"name-profile-container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              className: \"OrgCard-body-h4\",\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 296,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"empProfileNav\",\n                              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                href: \"/EmployeeDetails/\" + item.emp_id,\n                                children: /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n                                  className: \"playIcon\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 298,\n                                  columnNumber: 85\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 298,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 297,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 295,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"OrgCard-body-p\",\n                            children: item.role\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 31\n                    }, this)\n                  }, item.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this)\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Card;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Chart.js"],"names":["React","useEffect","Fragment","useState","randomcolor","useParams","empData","PlayCircleOutlineIcon","ReactSearchAutocomplete","SearchIcon","Breadcrumbs","Typography","Link","Chart","params","BreadcrumbsArr","head","window","sessionStorage","setItem","ReportingPeople","EmpName","JSON","parse","getItem","ReportingPeopleArr","match","i","length","matching","reports_to","includes","push","stringify","console","log","ReportsTo","Emp","role","reportsTo","AllReportsToArr","ReportsToArr","name","CEO","reverse","Presidents","EmpArr","Reporting","arr","EmpReportsTo","Ceo","handleOnSelect","removeItem","location","href","formatResult","item","map","width","Card","props","levelColor","newChart","data","DP","borderColor","emp_id"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useState } from \"react\";\nimport randomcolor from \"randomcolor\";\nimport {\n  useParams,\n} from \"react-router-dom\";\nimport \"../components/styles/orgChartStyles.css\"\n// import useFetch from '../utility'\nimport empData from \"../EmpData.json\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst Chart = () => {\n  // const levelColor = randomcolor();\n  let params = useParams();\n  let BreadcrumbsArr = [];\n\n  let head = [];\n  window.sessionStorage.setItem(\"OrgLevel\", 1);\n\n  const ReportingPeople = (EmpName) => {\n    if (JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"))) {\n      // let ReportingArray = window.sessionStorage.getItem(EmpName);\n      // console.log(ReportingArray);\n      return JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"));\n    }\n\n    let ReportingPeopleArr = [];\n    let match = false;\n    for (let i = 0; i < empData.length; i++) {\n      let matching = false;\n      if (!match && (empData[i].reports_to).includes(EmpName)) {  //checking for a match\n        ReportingPeopleArr.push(empData[i]);\n        match = true;\n        matching = true;\n      } else if (match && (empData[i].reports_to).includes(EmpName)) { //after having match all the reporting employee will be in group\n        ReportingPeopleArr.push(empData[i]);\n        matching = true;\n      }\n\n      if (match && !matching) {  //when the sequence of reporters broken then return the array\n        window.sessionStorage.setItem(EmpName + \" Reporting\", JSON.stringify(ReportingPeopleArr));\n        console.log(ReportingPeopleArr);\n        return ReportingPeopleArr;\n      }\n\n    }\n    return ReportingPeopleArr;\n\n  }\n\n  const ReportsTo = (Emp) => {\n\n    console.log(Emp[0].role);\n    // let designation = Emp[0].role;\n    // let name = Emp[0].name; !Emp[0].role.includes(\"Chief Executive Officer\") ||\n    let reportsTo = Emp[0].reports_to;\n   \n    let AllReportsToArr = [];\n\n    if(reportsTo){\n    while(  !reportsTo.includes(\"Srinivasan Gopal\")){\n      let ReportsToArr = [];\n      if (JSON.parse(window.sessionStorage.getItem(reportsTo))) {\n        ReportsToArr = JSON.parse(window.sessionStorage.getItem(reportsTo));\n        AllReportsToArr.push(ReportsToArr[0]);\n      }else{\n        for (let i = 0; i < empData.length; i++) {\n          if ((empData[i].name).includes(reportsTo)) {\n            ReportsToArr.push(empData[i]);\n            AllReportsToArr.push(empData[i]);\n            window.sessionStorage.setItem(empData[i].name, JSON.stringify(ReportsToArr));\n            window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify((ReportsToArr)));\n          }\n        }\n      }\n      console.log(ReportsToArr[0]);\n      //  designation = ReportsToArr[0].role;\n       reportsTo = ReportsToArr[0].reports_to;\n    }\n  }\n  let CEO = [\n    {\n      \"name\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0001\",\n      \"role\": \"Chief Executive Officer\",\n      \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\",\n    }];\n    AllReportsToArr.push(CEO[0]);\n    AllReportsToArr.reverse();\n    console.log(AllReportsToArr);\n    return AllReportsToArr;\n \n  }\n\n  //org chart level array initializations 2 cases for CEO and rem emp\n  if (params.Emp === \"Srinivasan Gopal\") {   //2 levels\n    head = [\n      {\n        \"name\": \"Srinivasan Gopal\",\n        \"emp_id\": \"0001\",\n        \"role\": \"Chief Executive Officer\",\n        \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\",\n      }];\n\n    const Presidents = ReportingPeople(params.Emp);\n    window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(head));\n    window.sessionStorage.setItem(head[0].name, JSON.stringify(head));\n\n    for (let i = 0; i < Presidents.length; i++) {\n      let EmpArr = [];\n      EmpArr.push((Presidents[i]));\n      window.sessionStorage.setItem((Presidents[i]).name, JSON.stringify(EmpArr))\n    }\n    head = Presidents;\n    let Reporting = [];\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Reporting));\n\n  } else {  // 3 levels for non ceo\n    head = JSON.parse(window.sessionStorage.getItem(params.Emp));\n    // head.push(JSON.parse(params.Emp));\n    let arr = [];\n    arr.push(params.Emp);\n    console.log(params.Emp);\n    console.log(head);\n    let EmpReportsTo = head[0].reports_to;\n    console.log(EmpReportsTo);\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(ReportingPeople(params.Emp)));\n\n    BreadcrumbsArr =  ReportsTo(head);\n    if (EmpReportsTo) {\n      if (JSON.parse(window.sessionStorage.getItem(EmpReportsTo))) {\n        let ReportsToArr = [];\n        ReportsToArr = JSON.parse(window.sessionStorage.getItem(EmpReportsTo));\n        window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(ReportsToArr));\n      }\n      else {\n        let ReportsToArr = [];\n        for (let i = 0; i < empData.length; i++) {\n          if ((empData[i].name).includes(head[0].reports_to)) {\n            ReportsToArr.push(empData[i]);\n            window.sessionStorage.setItem(empData[i].name, JSON.stringify(ReportsToArr));\n            window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify((ReportsToArr)));\n          }\n        }\n      }\n    } else {\n      let Ceo = [\n        {\n          \"name\": \"Srinivasan Gopal\",\n          \"emp_id\": \"0001\",\n          \"role\": \"Chief Executive Officer\",\n          \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\",\n        }];\n      window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(Ceo));\n    }\n\n\n  }\n  console.log(window.sessionStorage.getItem(\"ReportsTo\"));\n  console.log(window.sessionStorage.getItem(\"Reporting\"));\n\n\n  const handleOnSelect = (Emp) => {\n    // the item selected\n    let EmpArr = [];\n    EmpArr.push((Emp));\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = (Emp).name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr))\n    window.location.href = \"/OrgChart/\" + name;\n    console.log(Emp)\n  }\n\n  // const handleClick = (event) => {\n  //   event.preventDefault();\n  //   console.info('You clicked a breadcrumb.');\n  // }\n\n\n  const formatResult = (item) => {\n    return item;\n  }\n  return (\n    <div className=\"org-container\">\n      {params.Emp === \"Srinivasan Gopal\" ?\n       <></>:\n    <Breadcrumbs maxItems={2} aria-label=\"breadcrumb\">\n    {BreadcrumbsArr.map((item) => (\n      <Link color=\"inherit\" href= {`/OrgChart/${item.name}`} >\n        {item.name}\n      </Link>\n    ))}\n    <Typography color=\"textPrimary\">{params.Emp}</Typography>\n  </Breadcrumbs>}\n      <div className=\"searchWidget\">\n        <SearchIcon className=\"searchIcon\"></SearchIcon>\n        <div className=\"SearchAutocomplete\" style={{ width: 300 }}>\n          <ReactSearchAutocomplete\n            items={empData}       \n            onSelect={handleOnSelect}\n            autoFocus\n            formatResult={formatResult}\n          />\n        </div>\n        </div>\n      <div className=\"org-tree\">\n\n      <Card data={head} />\n      </div>\n    </div>\n\n  )\n}\n\nexport default Chart;\n\nconst Card = (props) => {\n  const levelColor = randomcolor();\n  console.log(props);\n\n  //get the new emp details of desired emp (clicked) and show his org chart\n  const newChart = (Emp) => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = JSON.parse(Emp).name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr))\n    window.location.href = \"/OrgChart/\" + name;\n  }\n\n  return (\n    <>\n      <ul>\n        {JSON.parse(window.sessionStorage.getItem(\"ReportsTo\")).map((item) => (\n\n          <Fragment key={item.name}>\n            <li>\n              <div className=\"OrgCard\" onClick={() => newChart(JSON.stringify(item))}>\n                <div className=\"image\">\n                  {console.log(item)}\n                  {console.log(props.data.length)}\n                  <img src={`https://dev-employeeportal.pantheonsite.io/${item.DP}`} alt=\"Profile\"\n                    style={{ borderColor: levelColor }}></img>\n                </div>\n                <div className=\"OrgCard-body\">\n                  <div className=\"name-profile-container\">\n                    <h4 className=\"OrgCard-body-h4\">{item.name}</h4>\n                    <p className=\"empProfileNav\">\n                      <a href={\"/EmployeeDetails/\" + item.emp_id}><PlayCircleOutlineIcon className=\"playIcon\"></PlayCircleOutlineIcon></a>\n                    </p>\n                  </div>\n                  <p className=\"OrgCard-body-p\">{item.role}</p>\n                </div>\n              </div>\n              <ul>\n\n                {props.data.map((item) => (\n                  <Fragment key={item.name}>\n                    <li>\n                      <div className=\"OrgCard\" onClick={() => newChart(JSON.stringify(item))}>\n                        <div className=\"image\">\n                          {console.log(item)}\n                          {console.log(props.data.length)}\n                          <img src={`https://dev-employeeportal.pantheonsite.io/${item.DP}`} alt=\"Profile\"\n                            style={{ borderColor: levelColor }}></img>\n                        </div>\n                        <div className=\"OrgCard-body\">\n                          <div className=\"name-profile-container\">\n                            <h4 className=\"OrgCard-body-h4\">{item.name}</h4>\n                            <p className=\"empProfileNav\">\n                              <a href={\"/EmployeeDetails/\" + item.emp_id}><PlayCircleOutlineIcon className=\"playIcon\"></PlayCircleOutlineIcon></a>\n                            </p>\n                          </div>\n                          <p className=\"OrgCard-body-p\">{item.role}</p>\n                        </div>\n                      </div>\n\n                      {JSON.parse(window.sessionStorage.getItem(\"Reporting\")).length > 0 ?\n                        <ul>\n                          {JSON.parse(window.sessionStorage.getItem(\"Reporting\")).map((item) => (\n                            <Fragment key={item.name}>\n                              <li>\n                                <div className=\"OrgCard\" onClick={() => newChart(JSON.stringify(item))}>\n                                  <div className=\"image\">\n                                    {console.log(item)}\n                                    {console.log(props.data.length)}\n                                    <img src={`https://dev-employeeportal.pantheonsite.io/${item.DP}`} alt=\"Profile\"\n                                      style={{ borderColor: levelColor }}></img>\n                                  </div>\n                                  <div className=\"OrgCard-body\">\n                                    <div className=\"name-profile-container\">\n                                      <h4 className=\"OrgCard-body-h4\">{item.name}</h4>\n                                      <p className=\"empProfileNav\">\n                                        <a href={\"/EmployeeDetails/\" + item.emp_id}><PlayCircleOutlineIcon className=\"playIcon\"></PlayCircleOutlineIcon></a>\n                                      </p>\n                                    </div>\n                                    <p className=\"OrgCard-body-p\">{item.role}</p>\n                                  </div>\n                                </div>\n                              </li>\n                            </Fragment>\n                          ))}\n                        </ul>\n                        : <></>}\n                    </li>\n                  </Fragment>\n                ))}\n              </ul>\n            </li>\n          </Fragment>\n        ))}\n      </ul>\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}