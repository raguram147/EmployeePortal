{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config'; // import Typography from '@material-ui/core/Typography';\n\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif';\nimport Chip from '@material-ui/core/Chip';\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Checkbox, TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueText = value => {\n      return `${value}`;\n    };\n\n    this.handleChange = (e, newValue) => {\n      console.log(newValue);\n      this.setState({\n        ExperienceMinMax: newValue\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleDelete = chipToDelete => () => {\n      console.log(chipToDelete);\n      let nam = chipToDelete.filterField;\n      var isChecked = false;\n      var item = chipToDelete.value;\n      ;\n      console.log(nam);\n      console.log(isChecked);\n\n      if (nam === 'skill') {\n        this.setState(prevState => ({\n          checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n        console.log(event);\n      } else if (nam === 'manager') {\n        this.setState(prevState => ({\n          checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'pod') {\n        this.setState(prevState => ({\n          checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'project') {\n        this.setState(prevState => ({\n          checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      }\n    };\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow: 10,\n      //number of skill filters to be shown\n      projectsFilterShow: 10,\n      //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage: 1,\n      maxItemsPerPage: 9,\n      checkedItemsTag: [],\n      skillsCheckBox: false\n    };\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/lister/Employees').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/skills').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/manager').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/pod').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/projects').then(res => res.json())]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    });\n  }\n\n  CheckBoxhandleChange(event) {\n    //skills,project,pod,manager checkeditems change\n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n\n    if (nam === 'checkedItemsSkills') {\n      this.setState(prevState => ({\n        checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n      })); // document.getElementById(item).checked = true;\n    } else if (nam === 'checkedItemsManager') this.setState(prevState => ({\n      checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n    }));else if (nam === 'checkedItemsPod') this.setState(prevState => ({\n      checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n    }));else if (nam === 'checkedItemsProjects') this.setState(prevState => ({\n      checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n    }));\n  }\n\n  showMoreSkills() {\n    this.state.skillsFilterShow === 10 ? this.setState({\n      skillsFilterShow: this.state.skillsApi.length,\n      skillsExpanded: true\n    }) : this.setState({\n      skillsFilterShow: 10,\n      skillsExpanded: false\n    });\n  }\n\n  showMoreProjects() {\n    this.state.projectsFilterShow === 10 ? this.setState({\n      projectsFilterShow: this.state.projectsApi.length,\n      projectsExpanded: true\n    }) : this.setState({\n      projectsFilterShow: 10,\n      projectsExpanded: false\n    });\n  }\n\n  changePage(direction) {\n    console.log(direction);\n\n    if (direction === 'back') {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    } else if (direction === 'next') {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  render() {\n    let Employees = this.state.Employees; // let experienceMin, experienceMax;\n\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let skillsFilterShowCust = this.state.skillsFilterShow;\n    let checkedItemsTagList = this.state.checkedItemsTag;\n    checkedItemsTagList = [];\n    this.state.filteredEmployee = [];\n    console.log(this.state.checkedItemsSkills);\n    console.log(ManagersChecked);\n    console.log(projectsChecked);\n    console.log(podsChecked);\n    console.log(this.state.skillsApi);\n    console.log(checkedItemsTagList);\n\n    if (skillsChecked.size > 0 || ManagersChecked.size > 0 || podsChecked.size > 0 || projectsChecked.size > 0) {\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        let ps = iteratorS1.next().value;\n\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = {\n            value: ps,\n            filterField: \"skill\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"manager\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"pod\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"project\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reqForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Enter name or Id\",\n              variant: \"outlined\",\n              style: {\n                marginTop: \"15px\",\n                padding: \"10.5px 8px\",\n                paddingLeft: 0\n              },\n              type: \"text\",\n              name: \"name\",\n              onChange: this.myChangeHandler,\n              className: \"InpcheckedItemsSkillsuttextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Experience-overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Experience: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", this.state.ExperienceMinMax[0], \" - \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"  \", this.state.ExperienceMinMax[1], \" years\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"experienceSlider\",\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                defaultValue: [0, 25],\n                value: this.ExperienceMinMax,\n                onChange: this.handleChange,\n                valueLabelDisplay: \"auto\",\n                \"aria-labelledby\": \"range-slider\",\n                getAriaValueText: this.valueText,\n                step: 1,\n                min: 0,\n                max: 45\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Skills :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"check_label\",\n                      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                        className: \"check_item\",\n                        style: {\n                          color: \"#ef6e25\"\n                        },\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase(),\n                        name: \"checkedItemsSkills\",\n                        checked: this.state.skillsCheckBox\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 27\n                      }, this), item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreSkills,\n                  children: this.state.skillsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Managers :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: this.state.MangersApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsManager\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Pods :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: this.state.PodsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsPod\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"projects :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.projectsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsProjects\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)), this.state.projectsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreProjects,\n                  children: this.state.projectsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 19\n                }, this) : console.log(\"less products\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this), Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: (() => {\n            var experienceMatch = false;\n            var primarySkillsMatch = false;\n            var projectsMatch = false;\n            var nameMatch = false;\n            var podsMatch = false;\n            var managerMatch = false; //experience checking: whether the emp has meet the req experience of customer\n\n            if (parseInt(x.Experience) >= expMinReq && parseInt(x.Experience) <= expMaxReq) {\n              experienceMatch = true;\n            } //name checking: whether the emp has matched the name\n\n\n            if (nameReq) {\n              if (x.name.toLowerCase().includes(nameReq.toLowerCase()) || x.Emp_id.includes(nameReq)) {\n                nameMatch = true; //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n              } else {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n              }\n            } else {\n              nameMatch = true; //if customer not typed anything\n            } // skills checking: whether the emp has req  skills\n\n\n            if (skillsChecked.size > 0) {\n              const iterator1 = skillsChecked.keys();\n              const iterator2 = skillsChecked.values();\n\n              for (let i = 0; i < skillsChecked.size; i++) {\n                if (iterator2.next().value) {\n                  // console.log(iterator1.next().value);\n                  let ps = iterator1.next().value;\n\n                  if (x.primary_skills.toLowerCase().includes(ps) || x.secndary_skills.toLowerCase().includes(ps)) {\n                    primarySkillsMatch = true; // console.log(\"true\");\n                  } else {\n                    // console.log(\"false\");\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n                  }\n                } else {\n                  primarySkillsMatch = true;\n                  console.log(iterator1.next().value); //don't uncomment this line if u want remove console.log\n                }\n              }\n            } else {\n              primarySkillsMatch = true;\n            } //managers Match\n\n\n            if (ManagersChecked.size > 0) {\n              const iterator1 = ManagersChecked.keys();\n              const iterator2 = ManagersChecked.values();\n              let oneManagerAtleastChecked = false;\n\n              for (let i = 0; i < ManagersChecked.size; i++) {\n                let selectedManger = iterator2.next().value;\n                let ps = iterator1.next().value;\n\n                if (selectedManger && !managerMatch) {\n                  //check whether the checkbox is still selected and manager is matched in previous loop\n                  oneManagerAtleastChecked = true;\n\n                  if (x.Manager.toLowerCase().includes(ps)) {\n                    managerMatch = true;\n                    console.log(\"true inside loop\");\n                  } else {\n                    managerMatch = false;\n                  }\n                } else if (!oneManagerAtleastChecked && i === ManagersChecked.size - 1) {\n                  managerMatch = true;\n                }\n              }\n            } else {\n              managerMatch = true;\n            } // console.log(managerMatch);\n            //pods Match\n\n\n            if (podsChecked.size > 0) {\n              const iterator1 = podsChecked.keys();\n              const iterator2 = podsChecked.values();\n              let onePodAtleastChecked = false;\n\n              for (let i = 0; i < podsChecked.size; i++) {\n                let selectedPod = iterator2.next().value;\n                let ps = iterator1.next().value;\n\n                if (selectedPod && !podsMatch) {\n                  onePodAtleastChecked = true; // let ps = iterator1.next().value;\n\n                  console.log(ps);\n                  console.log(x.Pod.toLowerCase());\n\n                  if (x.Pod.toLowerCase().includes(ps)) {\n                    podsMatch = true;\n                    console.log(\"true inside loop\");\n                  } else {\n                    podsMatch = false;\n                  }\n                } else if (!onePodAtleastChecked && i === podsChecked.size - 1) {\n                  podsMatch = true;\n                }\n              }\n            } else {\n              podsMatch = true;\n            } // console.log(podsMatch);\n            //projects match\n\n\n            if (projectsChecked.size > 0) {\n              const iterator1 = projectsChecked.keys();\n              const iterator2 = projectsChecked.values();\n              let oneProjectAtleastChecked = false;\n\n              for (let i = 0; i < projectsChecked.size; i++) {\n                let selectedProject = iterator2.next().value;\n                let ps = iterator1.next().value;\n\n                if (selectedProject && !projectsMatch) {\n                  oneProjectAtleastChecked = true;\n                  console.log(ps);\n                  console.log(x.current_working_project.toLowerCase());\n\n                  if (x.current_working_project.toLowerCase().includes(ps)) {\n                    projectsMatch = true;\n                    console.log(\"true inside loop\");\n                  } else {\n                    projectsMatch = false;\n                  }\n                } else if (!oneProjectAtleastChecked && i === projectsChecked.size - 1) {\n                  projectsMatch = true;\n                }\n              }\n            } else {\n              projectsMatch = true;\n            } // console.log(projectsMatch);\n\n\n            if (experienceMatch && nameMatch && primarySkillsMatch && managerMatch && podsMatch && projectsMatch) {\n              this.state.filteredEmployee.push(x);\n            }\n          })()\n        }, void 0, false)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Employees\",\n          children: [this.state.filteredEmployee.length > 0 ? console.log(this.state.filteredEmployee.length) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return (\n                /*#__PURE__*/\n                //no result found\n                _jsxDEV(\"div\", {\n                  className: \"list\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: NoResult\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 15\n                }, this)\n              );\n            })()\n          }, void 0, false), console.log(this.state.checkedItemsTag), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectedTags\",\n            children: checkedItemsTagList.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: (() => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: x.value // icon={icon}\n                    ,\n                    onDelete: this.handleDelete(x),\n                    className: \"tags\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false);\n              })()\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 11\n          }, this), this.state.filteredEmployee.slice(this.state.currentPage * this.state.maxItemsPerPage - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Employee-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"header\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"avatar\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `http://localhost/${employee.Profile_photo}`,\n                      height: \"200\",\n                      alt: \"profilephoto\",\n                      className: \"profilephoto\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Employee-description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"Name\",\n                    style: {\n                      marginBottom: \"1rem\"\n                    },\n                    children: employee.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: employee.role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      textAlign: \"left\",\n                      fontSize: \"0.7rem\",\n                      marginBottom: \"5px\"\n                    },\n                    children: [\"Manager: \", employee.Manager]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      textAlign: \"left\",\n                      fontSize: \"0.7rem\"\n                    },\n                    children: [\"Experience: \", employee.Experience, \" years\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                    name: \"half-rating-read\",\n                    size: \"small\",\n                    defaultValue: 2.5,\n                    precision: 0.5,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"button\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                        href: \"/EmployeeDetails/\" + employee.Emp_id,\n                        children: \"View Profile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 650,\n                        columnNumber: 33\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 649,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 25\n              }, this) // <div className=\"Employee-details\">\n              //     <header>\n              //       <div className=\"avatar\">\n              //         <img\n              //           src={`http://localhost/${employee.Profile_photo}`}\n              //           height=\"200\"\n              //           alt=\"profilephoto\"\n              //           className=\"profilephoto\"\n              //         ></img>\n              //       </div>\n              //     </header>\n              //   <img src={`http://localhost/${x.Profile_photo}`}\n              //     height='200' alt=\"profilephoto\"\n              //     className=\"profilephoto\" />\n              //   {x.name}\n              //   <div className=\"Employee-description\">\n              //     <p className=\"Name\">{x.name}</p>\n              //     <p>{ x.Emp_id }</p>\n              //     <p>{x.role}</p>\n              //     <p>Manager: {x.Manager}</p>\n              //     <p>Experience: {x.Experience} years</p>\n              //   </div>\n              //   <button className=\"Details-Btn\"><a href={'/EmployeeDetails/' + x.Emp_id}>Show Details</a></button>\n              // </div> \n              ;\n            })()\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextBack\",\n        children: [this.state.currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('back'),\n          children: \"\\xAB Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 8\n        }, this) : null, this.state.filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('next'),\n          children: \"Next \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 8\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","Chip","Rating","Checkbox","TextField","event","EmployeeView","constructor","props","valueText","value","handleChange","e","newValue","console","log","setState","ExperienceMinMax","myChangeHandler","nam","target","name","val","handleDelete","chipToDelete","filterField","isChecked","item","prevState","checkedItemsSkills","set","document","getElementById","checked","checkedItemsManager","checkedItemsPod","checkedItemsProjects","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","skills","skillsFilterShow","projectsFilterShow","Map","skillsExpanded","projectsExpanded","filteredEmployee","currentPage","maxItemsPerPage","checkedItemsTag","skillsCheckBox","CheckBoxhandleChange","bind","showMoreSkills","showMoreProjects","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","length","changePage","direction","render","expMinReq","expMaxReq","nameReq","skillsChecked","ManagersChecked","podsChecked","projectsChecked","skillsFilterShowCust","checkedItemsTagList","size","iteratorS1","keys","iteratorS2","values","i","ps","next","tagsCheckedObj","push","iteratorM1","iteratorM2","iteratorP1","iteratorP2","iteratorPr1","iteratorPr2","marginTop","padding","paddingLeft","slice","map","color","toLowerCase","x","experienceMatch","primarySkillsMatch","projectsMatch","nameMatch","podsMatch","managerMatch","parseInt","Experience","includes","Emp_id","iterator1","iterator2","primary_skills","secndary_skills","oneManagerAtleastChecked","selectedManger","Manager","onePodAtleastChecked","selectedPod","Pod","oneProjectAtleastChecked","selectedProject","current_working_project","employee","Profile_photo","marginBottom","role","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\nimport Chip from '@material-ui/core/Chip';\nimport Rating from \"@material-ui/lab/Rating\";\nimport { Checkbox, TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\n\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:9,\n      checkedItemsTag : [],\n      skillsCheckBox: false\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/lister/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/projects').then(res => res.json()),\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    })\n  }\n\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change\n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'checkedItemsSkills'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      // document.getElementById(item).checked = true;\n    }\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n  }\n\n\n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n  changePage(direction) {\n    console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n  handleDelete = (chipToDelete) => () => {\n    console.log(chipToDelete);\n\n    let nam = chipToDelete.filterField;\n    var isChecked = false;\n    var item = chipToDelete.value;;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'skill'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n      console.log(event);\n    }\n    else if(nam === 'manager'){\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'pod'){\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'project'){\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n  };\n\n\n  render() {\n    let Employees = this.state.Employees;\n    // let experienceMin, experienceMax;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    let checkedItemsTagList = this.state.checkedItemsTag;\n    checkedItemsTagList=[];\n    this.state.filteredEmployee = [];\n    console.log((this.state.checkedItemsSkills));\n    console.log((ManagersChecked));\n    console.log((projectsChecked));\n    console.log((podsChecked));\n    console.log((this.state.skillsApi));\n    console.log(checkedItemsTagList);\n    if(skillsChecked.size >0 || ManagersChecked.size >0  ||  podsChecked.size >0  || projectsChecked.size>0){\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n     \n      for (let i = 0; i < skillsChecked.size ; i++) {\n        let ps = iteratorS1.next().value;\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = { value: ps, filterField: \"skill\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n         \n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"manager\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"pod\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"project\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n  }\n\n    return (\n      <>\n      <div className=\"filter-container\">\n        {/* different types of filters  */}\n        <div className=\"reqForm\">\n          <form >\n            {/* <p className=\"filterName\">Enter name or Id:</p> */}\n\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Enter name or Id\"\n                variant=\"outlined\"\n                style={{ marginTop: \"15px\", padding: \"10.5px 8px\", paddingLeft: 0 }}\n                type=\"text\"\n                name=\"name\"\n                onChange={this.myChangeHandler}\n                className=\"InpcheckedItemsSkillsuttextField\"\n              />\n\n            {/* <input\n              type='text'\n              name='name'\n              onChange={this.myChangeHandler}\n              className=\"InputtextField\"\n            /> */}\n\n            {/* Experience */}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n              />\n            </div>\n\n            {/*  skills */}\n            <p className=\"filterName\">Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n\n                        <label className=\"check_label\">\n                          <Checkbox\n                            className=\"check_item\"\n                            style={{ color: \"#ef6e25\" }}\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            name='checkedItemsSkills'\n                            checked= {this.state.skillsCheckBox}\n                          />\n                          {item.name}\n                        </label>\n\n                        {/* <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label> */}\n                      </td>\n                    </tr>\n                  ))\n                }\n                <a className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </a>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\">Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n    \n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)? \n                  <a className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </a> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n          </form>\n        </div>\n\n    {/* checking the req conditions for emp */}\n          {Employees.map(x => (\n            <>\n              {(\n                (() => {\n                  var experienceMatch = false;\n                  var primarySkillsMatch = false;\n                  var projectsMatch = false;\n                  var nameMatch = false;\n                  var podsMatch = false;\n                  var managerMatch = false;\n                  //experience checking: whether the emp has meet the req experience of customer\n                  if ((((parseInt(x.Experience)) >= expMinReq) && (parseInt(x.Experience) <= expMaxReq))) {\n                    experienceMatch = true;\n                  }\n\n                  //name checking: whether the emp has matched the name\n                  if (nameReq) {\n                    if (((x.name.toLowerCase()).includes(nameReq.toLowerCase())) || x.Emp_id.includes(nameReq)) {\n                      nameMatch = true;\n                      //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n                    } else {\n                      return <></>\n                    }\n                  } else {\n                    nameMatch = true;     //if customer not typed anything\n                  }\n\n                  // skills checking: whether the emp has req  skills\n\n                  if (skillsChecked.size > 0) {\n                    const iterator1 = skillsChecked.keys();\n                    const iterator2 = skillsChecked.values();\n                    for (let i = 0; i < skillsChecked.size; i++) {\n                      if (iterator2.next().value) {\n                        // console.log(iterator1.next().value);\n                        let ps = iterator1.next().value;\n                        if (((x.primary_skills.toLowerCase()).includes(ps)) || ((x.secndary_skills.toLowerCase()).includes(ps))) {\n\n                          primarySkillsMatch = true;\n                          // console.log(\"true\");\n                        } else {\n                          // console.log(\"false\");\n                          return (<></>);\n                        }\n\n                      } else {\n                        primarySkillsMatch = true;\n                        console.log(iterator1.next().value);  //don't uncomment this line if u want remove console.log\n                      }\n                    }\n                  } else {\n                    primarySkillsMatch = true;\n                  }\n\n                  //managers Match\n                  if (ManagersChecked.size > 0) {\n                    const iterator1 = ManagersChecked.keys();\n                    const iterator2 = ManagersChecked.values();\n                    let oneManagerAtleastChecked = false;\n                    for (let i = 0; i < ManagersChecked.size; i++) {\n                        let selectedManger = iterator2.next().value;\n                         let ps = iterator1.next().value;\n                      if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n                        oneManagerAtleastChecked = true;\n                        if (((x.Manager.toLowerCase()).includes(ps))) {\n                          managerMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          managerMatch = false;\n                        }\n\n                      } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {\n                        managerMatch = true;\n                      }\n                    }\n                  } else {\n                    managerMatch = true;\n                  }\n                  // console.log(managerMatch);\n\n\n                  //pods Match\n                  if (podsChecked.size > 0) {\n                    const iterator1 = podsChecked.keys();\n                    const iterator2 = podsChecked.values();\n                    let onePodAtleastChecked = false;\n                    for (let i = 0; i < podsChecked.size; i++) {\n                        let selectedPod = iterator2.next().value;\n                      let ps = iterator1.next().value;\n\n                      if (selectedPod && !podsMatch) {\n                        onePodAtleastChecked = true;\n                        // let ps = iterator1.next().value;\n                        console.log(ps);\n                        console.log(x.Pod.toLowerCase());\n\n                        if (((x.Pod.toLowerCase()).includes(ps))) {\n\n                          podsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          podsMatch = false;\n                        }\n\n                      } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) {\n                        podsMatch = true;\n                      }\n                    }\n                  } else {\n                    podsMatch = true;\n                  }\n                  // console.log(podsMatch);\n\n\n                  //projects match\n                  if (projectsChecked.size > 0) {\n                    const iterator1 = projectsChecked.keys();\n                    const iterator2 = projectsChecked.values();\n                    let oneProjectAtleastChecked = false;\n                    for (let i = 0; i < projectsChecked.size; i++) {\n                        let selectedProject = iterator2.next().value;\n                        let ps = iterator1.next().value;\n                      if (selectedProject && !projectsMatch) {\n                        oneProjectAtleastChecked = true;\n                        console.log(ps);\n                        console.log(x.current_working_project.toLowerCase());\n\n                        if (((x.current_working_project.toLowerCase()).includes(ps))) {\n\n                          projectsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          projectsMatch = false;\n                        }\n\n                      } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) {\n                        projectsMatch = true;   \n                      } \n                    }\n                  } else {\n                    projectsMatch = true;\n                  }\n                  // console.log(projectsMatch);\n\n\n\n\n                  if (experienceMatch && nameMatch && primarySkillsMatch && managerMatch && podsMatch && projectsMatch) {\n                    this.state.filteredEmployee.push(x);\n                  }\n                })()\n              )}\n            </>\n          ))\n          }\n    \n\n        {/* //displaying */}\n        <div className=\"Employees\">\n          {this.state.filteredEmployee.length>0 ? console.log(this.state.filteredEmployee.length):\n          <>\n          {(\n          (()=>{\n            return(   //no result found\n              <div className='list'>\n               <img src= {NoResult}></img>   \n              </div>\n              )})())\n          }\n          </>\n          }\n\n          {console.log(this.state.checkedItemsTag)}\n          <div className=\"selectedTags\">\n            \n          {checkedItemsTagList.map(x => ( \n            <>\n              {(\n                (() => {\n                    return (\n                      (\n                        <>\n                        <Chip\n              label={x.value}\n              // icon={icon}\n              onDelete={this.handleDelete(x)}\n              className=\"tags\"\n            />\n                        </>\n                     )\n                    )\n                })()\n              )}\n            </>\n          ))\n          }\n          </div>\n\n          {/* Filtered Employees displaying */}\n          {this.state.filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => (\n            <>\n              {(\n                (() => {\n                    return (\n                      (\n                         \n                        <div className=\"Employee-details\">\n                          <header>\n                            <div className=\"avatar\">\n                              <img\n                                src={`http://localhost/${employee.Profile_photo}`}\n                                height=\"200\"\n                                alt=\"profilephoto\"\n                                className=\"profilephoto\"\n                              ></img>\n                            </div>\n                          </header>\n                          {/* {employee.name} */}\n                          <div className=\"Employee-description\">\n                            <p className=\"Name\" style={{ marginBottom: \"1rem\" }}>\n                              {employee.name}\n                            </p>\n                            {/* <p>{ employee.Emp_id }</p> */}\n                            <p>{employee.role}</p>\n                            <p\n                              style={{\n                                textAlign: \"left\",\n                                fontSize: \"0.7rem\",\n                                marginBottom: \"5px\",\n                              }}\n                            >\n                              Manager: {employee.Manager}\n                            </p>\n\n                            <p style={{ textAlign: \"left\", fontSize: \"0.7rem\" }}>\n                              Experience: {employee.Experience} years\n                            </p>\n                            <Rating\n                              name=\"half-rating-read\"\n                              size=\"small\"\n                              defaultValue={2.5}\n                              precision={0.5}\n                              readOnly\n                            />\n\n                            <button class=\"button\">\n                              <span>\n                                <a href={\"/EmployeeDetails/\" + employee.Emp_id}>View Profile</a>{\" \"}\n                              </span>\n                            </button>\n                          </div>\n                      </div>\n                      \n                      \n                      // <div className=\"Employee-details\">\n                      //     <header>\n                      //       <div className=\"avatar\">\n                      //         <img\n                      //           src={`http://localhost/${employee.Profile_photo}`}\n                      //           height=\"200\"\n                      //           alt=\"profilephoto\"\n                      //           className=\"profilephoto\"\n                      //         ></img>\n                      //       </div>\n                      //     </header>\n                      //   <img src={`http://localhost/${x.Profile_photo}`}\n                      //     height='200' alt=\"profilephoto\"\n                      //     className=\"profilephoto\" />\n                      //   {x.name}\n                      //   <div className=\"Employee-description\">\n                      //     <p className=\"Name\">{x.name}</p>\n                      //     <p>{ x.Emp_id }</p>\n                      //     <p>{x.role}</p>\n                      //     <p>Manager: {x.Manager}</p>\n\n                      //     <p>Experience: {x.Experience} years</p>\n\n                      //   </div>\n                      //   <button className=\"Details-Btn\"><a href={'/EmployeeDetails/' + x.Emp_id}>Show Details</a></button>\n                      // </div> \n                      \n                      )\n                    )\n                })()\n              )}\n            </>\n          ))\n          \n          } \n        </div>\n      </div>\n      <div className=\"nextBack\">\n      {this.state.currentPage > 1 ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; Back</button>\n      : null}\n      {this.state.filteredEmployee.length  > this.state.currentPage * this.state.maxItemsPerPage ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}>Next &raquo;</button>\n      : null}\n     </div>\n    </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}