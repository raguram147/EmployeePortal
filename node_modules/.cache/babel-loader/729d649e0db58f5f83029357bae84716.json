{"ast":null,"code":"var _jsxFileName = \"/home/raguram_s/lister-emp-portal/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Wheel from \"./Wheel\";\nimport Skills from \"./Skills\";\nimport he from \"he\";\nimport { Carousel } from \"react-bootstrap\";\nimport config from \"../config\";\nimport \"../components/styles/style.css\";\nimport { Grid, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n   padding:5%;\n    overflow:hidden;\n    font-family: Montserrat;\n    width:100%;\n    height: 100%;\n    background-color: #282828;\n    color: white;\n}`; // #ffebcc;\n\n_c = Container;\nconst Left = styled.div`\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\n_c2 = Left;\nconst Right = styled.div`\n  margin: 0;\n  padding: 0;\n  img {\n    padding-right: 0;\n    margin-right: -10px;\n    right: 0;\n  }\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\n_c3 = Right;\nconst Heading = styled.h1`\n  margin-bottom: 2%;\n  font-weight: 700;\n  font-size: 2rem;\n  text-align: center;\n`;\n_c4 = Heading;\nconst Row = styled.div`\n  text-align: left;\n  justify-between: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n  @media (min-width: 960px) and (max-width: 1100px) {\n    margin-bottom: 10%;\n  }\n`;\n_c5 = Row;\nconst fetchURL = config.drupal_url + \"/Taxonomy/Projects\";\nconst fetchSkill = config.drupal_url + \"/Taxonomy/Skills\";\n\nconst Projects = ({\n  project\n}) => {\n  _s();\n\n  const theme = useTheme();\n  let matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [projectData, setProjectData] = useState([]);\n  const [skillData, setSkillData] = useState([]);\n  useEffect(() => {\n    const fetchFuntion = async () => {\n      let data, data1;\n      data = await fetch(fetchURL);\n      data1 = await fetch(fetchSkill);\n      let res = await data.json();\n      setProjectData(res);\n      res = await data1.json();\n      setSkillData(res);\n    };\n\n    fetchFuntion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          id: \"Categories\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Projects and Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 12,\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  lg: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    md: 6,\n                    lg: 6,\n                    children: /*#__PURE__*/_jsxDEV(Left, {\n                      id: \"top_left\",\n                      children: project && project.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: he.decode(x.project_description.replace(/<[^>]+>/g, \"\")).split(\"....,\").map((projectDesc, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: projectDesc\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 35\n                        }, this))\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    md: 6,\n                    lg: 6,\n                    children: /*#__PURE__*/_jsxDEV(Right, {\n                      id: \"top_right\",\n                      style: {\n                        display: matches ? \"none\" : \"block\"\n                      },\n                      children: [\" \", projectData && /*#__PURE__*/_jsxDEV(Wheel, {\n                        id: \"projects\",\n                        card: projectData\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              md: 12,\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  xs: 12,\n                  sm: 12,\n                  md: 12,\n                  lg: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    md: 6,\n                    lg: 6,\n                    children: /*#__PURE__*/_jsxDEV(Left, {\n                      id: \"bottom_left\",\n                      style: {\n                        display: matches ? \"none\" : \"block\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Skills, {\n                        id: \"skills\",\n                        skill: skillData\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 12,\n                    md: 6,\n                    lg: 6,\n                    children: /*#__PURE__*/_jsxDEV(Right, {\n                      id: \"bottom_right\",\n                      children: project && project.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: x.skills_description.split(\"....,\").map((skillsDesc, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: skillsDesc\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 35\n                        }, this))\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 12,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Acheivements\",\n          className: \"Achievments-container\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Achievements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n            variant: \"dark\",\n            className: \"Achievements\",\n            children: project && project[1].Achievements.split(\"....,\").map((x, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Achievement_text\",\n                children: [\"\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\", x.split(\"---\")[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n                style: {\n                  zIndex: \"0\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"#e16428\",\n                    zIndex: \"0\"\n                  },\n                  children: x.split(\"---\")[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Projects, \"xSnqhynjYkx+LYHf6ultNinqgoM=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c6 = Projects;\nexport default Projects;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Left\");\n$RefreshReg$(_c3, \"Right\");\n$RefreshReg$(_c4, \"Heading\");\n$RefreshReg$(_c5, \"Row\");\n$RefreshReg$(_c6, \"Projects\");","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/components/Projects.js"],"names":["React","useEffect","useState","styled","Wheel","Skills","he","Carousel","config","Grid","useMediaQuery","useTheme","Container","div","Left","Right","Heading","h1","Row","fetchURL","drupal_url","fetchSkill","Projects","project","theme","matches","breakpoints","down","projectData","setProjectData","skillData","setSkillData","fetchFuntion","data","data1","fetch","res","json","map","x","index","decode","project_description","replace","split","projectDesc","display","skills_description","skillsDesc","Achievements","zIndex","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Wheel from \"./Wheel\";\nimport Skills from \"./Skills\";\nimport he from \"he\";\nimport { Carousel } from \"react-bootstrap\";\nimport config from \"../config\";\nimport \"../components/styles/style.css\";\nimport { Grid, useMediaQuery, useTheme } from \"@material-ui/core\";\nconst Container = styled.div`\n   padding:5%;\n    overflow:hidden;\n    font-family: Montserrat;\n    width:100%;\n    height: 100%;\n    background-color: #282828;\n    color: white;\n}`;\n// #ffebcc;\nconst Left = styled.div`\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst Right = styled.div`\n  margin: 0;\n  padding: 0;\n  img {\n    padding-right: 0;\n    margin-right: -10px;\n    right: 0;\n  }\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.5rem;\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\nconst Heading = styled.h1`\n  margin-bottom: 2%;\n  font-weight: 700;\n  font-size: 2rem;\n  text-align: center;\n`;\n\nconst Row = styled.div`\n  text-align: left;\n  justify-between: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n  @media (min-width: 960px) and (max-width: 1100px) {\n    margin-bottom: 10%;\n  }\n`;\nconst fetchURL = config.drupal_url + \"/Taxonomy/Projects\";\nconst fetchSkill = config.drupal_url + \"/Taxonomy/Skills\";\n\nconst Projects = ({ project }) => {\n  const theme = useTheme();\n  let matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [projectData, setProjectData] = useState([]);\n  const [skillData, setSkillData] = useState([]);\n  useEffect(() => {\n    const fetchFuntion = async () => {\n      let data, data1;\n      data = await fetch(fetchURL);\n      data1 = await fetch(fetchSkill);\n      let res = await data.json();\n      setProjectData(res);\n      res = await data1.json();\n      setSkillData(res);\n    };\n    fetchFuntion();\n  }, []);\n\n  return (\n    <>\n      <Grid container direction=\"column\">\n        <Grid item xs={12} sm={12} md={12} lg={12} >\n          <Container id=\"Categories\">\n            <Heading>Projects and Skills</Heading>\n            <Grid container xs={12} sm={12} md={12} lg={12}>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Row>\n                  <Grid container xs={12} sm={12} md={12} lg={12}>\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                      <Left id=\"top_left\">\n                        {project &&\n                          project.map((x, index) => (\n                            <div key={index}>\n                              {he\n                                .decode(\n                                  x.project_description.replace(/<[^>]+>/g, \"\")\n                                )\n                                .split(\"....,\")\n                                .map((projectDesc, index) => (\n                                  <p>{projectDesc}</p>\n                                ))}\n                            </div>\n                          ))}\n                      </Left>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                      <Right\n                        id=\"top_right\"\n                        style={{ display: matches ? \"none\" : \"block\" }}\n                      >\n                        {\" \"}\n                        {projectData && (\n                          <Wheel id=\"projects\" card={projectData}></Wheel>\n                        )}\n                      </Right>\n                    </Grid>\n                  </Grid>\n                </Row>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12}>\n                <Row>\n                  <Grid container xs={12} sm={12} md={12} lg={12}>\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                      <Left\n                        id=\"bottom_left\"\n                        style={{ display: matches ? \"none\" : \"block\" }}\n                      >\n                        <Skills id=\"skills\" skill={skillData}></Skills>\n                      </Left>\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                      <Right id=\"bottom_right\">\n                        {project &&\n                          project.map((x, index) => (\n                            <div key={index}>\n                              {x.skills_description\n                                .split(\"....,\")\n                                .map((skillsDesc, index) => (\n                                  <p>{skillsDesc}</p>\n                                ))}\n                            </div>\n                          ))}\n                      </Right>\n                    </Grid>\n                  </Grid>\n                </Row>\n              </Grid>\n            </Grid>\n          </Container>\n        </Grid>\n        <Grid item xs={12} sm={12} md={12} lg={12}>\n          {\" \"}\n          <div id=\"Acheivements\" className=\"Achievments-container\">\n            <Heading>Achievements</Heading>\n\n            <Carousel variant=\"dark\" className=\"Achievements\">\n              {project &&\n                project[1].Achievements.split(\"....,\").map((x, index) => (\n                  <Carousel.Item>\n                    <div className=\"Achievement_text\">\n                      ​​​​​​​​{x.split(\"---\")[0]}\n                    </div>\n                    <Carousel.Caption style={{ zIndex: \"0\" }}>\n                      {/* <h3>Achievement {count++}</h3> */}\n                      <p style={{ color: \"#e16428\", zIndex: \"0\" }}>\n                        {x.split(\"---\")[1]}\n                      </p>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                ))}\n            </Carousel>\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}