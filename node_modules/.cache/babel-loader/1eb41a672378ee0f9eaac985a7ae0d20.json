{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/style.css';\nimport config from '../config'; // import Typography from '@material-ui/core/Typography';\n\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif';\nimport Chip from '@material-ui/core/Chip';\nimport empGroup from '../assets/group-orange.png';\nimport { TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport { EmployeeCard } from './EmployeeCard';\n/*\n  state variables and api data: 20-68 lines\n  onchange functions 70-164\n  req Data initializations: 170-235\n  filters (Dynamic checkboxes,slider,input) html: 240-400\n  filtering employees based on filter logic\n  displaying tags,emp cards,next/back buttons: 550-670\n*/\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueText = value => {\n      return `${value}`;\n    };\n\n    this.handleChange = (e, newValue) => {\n      console.log(newValue);\n      this.setState({\n        ExperienceMinMax: newValue\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleDelete = chipToDelete => () => {\n      console.log(chipToDelete);\n      let nam = chipToDelete.filterField;\n      var isChecked = false;\n      var item = chipToDelete.value;\n      ;\n      console.log(nam);\n      console.log(isChecked);\n\n      if (nam === 'skill') {\n        this.setState(prevState => ({\n          checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n        console.log(event.target);\n      } else if (nam === 'manager') {\n        this.setState(prevState => ({\n          checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'pod') {\n        this.setState(prevState => ({\n          checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'project') {\n        this.setState(prevState => ({\n          checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      }\n    };\n\n    this.state = {\n      Employees: [],\n      //api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow: 10,\n      //number of skill filters to be shown\n      projectsFilterShow: 10,\n      //number of projects filters to be shown\n      managersFilterShow: 10,\n      podsFilterShow: 10,\n      skillsExpanded: false,\n      projectsExpanded: false,\n      managersExpanded: false,\n      podsExpanded: false,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      filteredEmployee: [],\n      currentPage: 1,\n      maxItemsPerPage: 9,\n      checkedItemsTag: [],\n      skillsCheckBox: false\n    };\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n    this.showMoreManagers = this.showMoreManagers.bind(this);\n    this.showMorePods = this.showMorePods.bind(this);\n  } //fetching data from api\n\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/Employees').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/skills').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/manager').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/pod').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/projects').then(res => res.json())]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    });\n  } //Experience slider on change calls the fxn and changes the values\n\n\n  CheckBoxhandleChange(event) {\n    //skills,project,pod,manager checkeditems change \n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n\n    if (nam === 'checkedItemsSkills') {\n      this.setState(prevState => ({\n        checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n      })); // document.getElementById(item).checked = true;\n    } else if (nam === 'checkedItemsManager') this.setState(prevState => ({\n      checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n    }));else if (nam === 'checkedItemsPod') this.setState(prevState => ({\n      checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n    }));else if (nam === 'checkedItemsProjects') this.setState(prevState => ({\n      checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n    }));\n  } //show more skill filter option \n\n\n  showMoreSkills() {\n    this.state.skillsFilterShow === 10 ? this.setState({\n      skillsFilterShow: this.state.skillsApi.length,\n      skillsExpanded: true\n    }) : this.setState({\n      skillsFilterShow: 10,\n      skillsExpanded: false\n    });\n  } //show more filter filter option \n\n\n  showMoreProjects() {\n    this.state.projectsFilterShow === 10 ? this.setState({\n      projectsFilterShow: this.state.projectsApi.length,\n      projectsExpanded: true\n    }) : this.setState({\n      projectsFilterShow: 10,\n      projectsExpanded: false\n    });\n  } //show more filter filter option this.state.managersExpanded\n\n\n  showMoreManagers() {\n    this.state.managersFilterShow === 10 ? this.setState({\n      managersFilterShow: this.state.MangersApi.length,\n      managersExpanded: true\n    }) : this.setState({\n      managersFilterShow: 10,\n      managersExpanded: false\n    });\n  } //show more filter filter option this.state.managersExpanded\n\n\n  showMorePods() {\n    this.state.podsFilterShow === 10 ? this.setState({\n      podsFilterShow: this.state.PodsApi.length,\n      podsExpanded: true\n    }) : this.setState({\n      podsFilterShow: 10,\n      podsExpanded: false\n    });\n  } //next or back to view other emp cards if exists\n\n\n  changePage(direction) {\n    console.log(direction);\n\n    if (direction === 'back') {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    } else if (direction === 'next') {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  AllCheckedItems() {\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let checkedItemsTagList = []; //storing all the checked items in array to display as tags\n\n    if (skillsChecked.size > 0 || ManagersChecked.size > 0 || podsChecked.size > 0 || projectsChecked.size > 0) {\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        let ps = iteratorS1.next().value;\n\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = {\n            value: ps,\n            filterField: \"skill\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"manager\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"pod\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"project\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n    }\n\n    return checkedItemsTagList;\n  } //if u click cancel on the selected tags the checkboxes should be unchecked auto\n\n\n  //checking the empdetails matches\n  //experience match employee's\n  CheckExperience(employeeExperience, expMinReq, expMaxReq) {\n    //experience checking: whether the emp has meet the req experience of customer\n    if (parseInt(employeeExperience) >= expMinReq && parseInt(employeeExperience) <= expMaxReq) {\n      return true;\n    }\n\n    return false;\n  } //name checking: whether the emp has matched the name\n\n\n  checkNameId(empName, empId, NameIdReq) {\n    if (NameIdReq) {\n      if (empName.toLowerCase().includes(NameIdReq.toLowerCase()) || empId.includes(NameIdReq)) {\n        return true; //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true; //if customer not typed anything\n    }\n  } //checking skills match\n\n\n  checkSkillsMatch(skillsChecked, empPrimarySkills, empSecondarySkills) {\n    if (skillsChecked.size > 0) {\n      //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n\n        if (selectedSkill) {\n          if (!(empPrimarySkills.toLowerCase().includes(skillName) || empSecondarySkills.toLowerCase().includes(skillName))) {\n            return false; //if one is not in the profile then return false\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return true;\n    }\n  } //managers Match checking\n\n\n  checkManagerMatch(ManagersChecked, EmpManager) {\n    let managerMatch = false;\n\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let selectedManger = iterator2.next().value;\n        let selectedMangerName = iterator1.next().value;\n\n        if (selectedManger && !managerMatch) {\n          //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n\n          if (EmpManager.toLowerCase().includes(selectedMangerName)) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n        } else if (!oneManagerAtleastChecked && i === ManagersChecked.size - 1) {\n          //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n\n      if (managerMatch) return true;else return false;\n    } else {\n      return true;\n    }\n  } //check pods Match\n\n\n  checkPodsMatch(podsChecked, empPod) {\n    let podsMatch = false;\n\n    if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) {\n          //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n\n          if (empPod.toLowerCase().includes(selectedPodName)) {\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n        } else if (!onePodAtleastChecked && i === podsChecked.size - 1) {\n          //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n\n      if (podsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  } //projects match\n\n\n  checkProjectMatch(projectsChecked, empProject) {\n    let projectsMatch = false;\n\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let selectedProject = iterator2.next().value;\n        let selectedProjectName = iterator1.next().value;\n\n        if (selectedProject && !projectsMatch) {\n          //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n\n          if (empProject.toLowerCase().includes(selectedProjectName)) {\n            projectsMatch = true; // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n        } else if (!oneProjectAtleastChecked && i === projectsChecked.size - 1) {\n          //if all the previous checked projects are unchecked\n          projectsMatch = true;\n        }\n      }\n\n      if (projectsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  filteringTheEmp() {\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let filteredEmployee = [];\n    Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: (() => {\n        if (this.CheckExperience(x.Experience, expMinReq, expMaxReq) && this.checkNameId(x.name, x.Emp_id, nameReq) && this.checkPodsMatch(podsChecked, x.Pod) && this.checkProjectMatch(projectsChecked, x.current_working_project) && this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills) && this.checkManagerMatch(ManagersChecked, x.Manager)) {\n          filteredEmployee.push(x);\n        }\n      })()\n    }, void 0, false));\n    return filteredEmployee;\n  }\n\n  render() {\n    //initialisig the state variables for manipulations \n    let skillsFilterShowCust = this.state.skillsFilterShow;\n    let podsFilterShowCust = this.state.podsFilterShow;\n    let managersFilterShowCust = this.state.managersFilterShow;\n    let projectsFilterShowCust = this.state.projectsFilterShow;\n    let filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems(); //getting all the checked items and storing to make tags\n\n    console.log(checkedItemsTagList);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        id: \"filterPage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reqForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Enter name or Id\",\n              variant: \"outlined\",\n              style: {\n                marginTop: \"15px\",\n                padding: \"10.5px 8px\",\n                paddingLeft: 0\n              },\n              type: \"text\",\n              name: \"name\",\n              onChange: this.myChangeHandler,\n              className: \"InpcheckedItemsSkillsuttextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Experience-overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Experience: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", this.state.ExperienceMinMax[0], \" - \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"  \", this.state.ExperienceMinMax[1], \" years\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"experienceSlider\",\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                defaultValue: [0, 25],\n                value: this.ExperienceMinMax,\n                onChange: this.handleChange,\n                valueLabelDisplay: \"auto\",\n                \"aria-labelledby\": \"range-slider\",\n                getAriaValueText: this.valueText,\n                step: 1,\n                min: 0,\n                max: 45,\n                style: {\n                  color: \"#ff8c4b\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Skills :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        name: \"checkedItemsSkills\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 483,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreSkills,\n                  children: this.state.skillsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Managers :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.MangersApi.slice(0, managersFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsManager\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase(),\n                        className: \"checkboxes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 21\n                }, this)), this.state.MangersApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreManagers,\n                  children: this.state.managersExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this) : console.log(\"less managers\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Pods :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.PodsApi.slice(0, podsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsPod\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this)), this.state.PodsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"showMore\",\n                  onClick: this.showMorePods,\n                  children: this.state.podsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this) : console.log(\"less pods\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"projects :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.projectsApi.slice(0, projectsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsProjects\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 585,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 21\n                }, this)), this.state.projectsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreProjects,\n                  children: this.state.projectsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 19\n                }, this) : console.log(\"less products\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Employees\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tagsAndEmpCountContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectedTags\",\n              children: checkedItemsTagList.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: (() => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: x.value // icon={icon}\n                      ,\n                      onDelete: this.handleDelete(x),\n                      className: \"tags\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false);\n                })()\n              }, void 0, false))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filtered-emp-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"no of emp\",\n                src: empGroup,\n                style: {\n                  height: \"30%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: filteredEmployee.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), filteredEmployee.length > 0 ? console.log(filteredEmployee.length) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return (\n                /*#__PURE__*/\n                //no result found\n                _jsxDEV(\"div\", {\n                  className: \"NoResult\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"No result found\",\n                    src: NoResult\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 15\n                }, this)\n              );\n            })()\n          }, void 0, false), filteredEmployee.slice(this.state.currentPage * this.state.maxItemsPerPage - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return /*#__PURE__*/_jsxDEV(EmployeeCard, {\n                employee: employee\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 23\n              }, this);\n            })()\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextBack\",\n        children: [this.state.currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('back'),\n          children: \"\\xAB Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 8\n        }, this) : null, filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('next'),\n          children: \"Next \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 8\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","Chip","empGroup","TextField","event","EmployeeCard","EmployeeView","constructor","props","valueText","value","handleChange","e","newValue","console","log","setState","ExperienceMinMax","myChangeHandler","nam","target","name","val","handleDelete","chipToDelete","filterField","isChecked","item","prevState","checkedItemsSkills","set","document","getElementById","checked","checkedItemsManager","checkedItemsPod","checkedItemsProjects","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","skills","skillsFilterShow","projectsFilterShow","managersFilterShow","podsFilterShow","skillsExpanded","projectsExpanded","managersExpanded","podsExpanded","Map","filteredEmployee","currentPage","maxItemsPerPage","checkedItemsTag","skillsCheckBox","CheckBoxhandleChange","bind","showMoreSkills","showMoreProjects","showMoreManagers","showMorePods","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","length","changePage","direction","AllCheckedItems","skillsChecked","ManagersChecked","podsChecked","projectsChecked","checkedItemsTagList","size","iteratorS1","keys","iteratorS2","values","i","ps","next","tagsCheckedObj","push","iteratorM1","iteratorM2","iteratorP1","iteratorP2","iteratorPr1","iteratorPr2","CheckExperience","employeeExperience","expMinReq","expMaxReq","parseInt","checkNameId","empName","empId","NameIdReq","toLowerCase","includes","checkSkillsMatch","empPrimarySkills","empSecondarySkills","iterator1","iterator2","selectedSkill","skillName","checkManagerMatch","EmpManager","managerMatch","oneManagerAtleastChecked","selectedManger","selectedMangerName","checkPodsMatch","empPod","podsMatch","onePodAtleastChecked","selectedPod","selectedPodName","checkProjectMatch","empProject","projectsMatch","oneProjectAtleastChecked","selectedProject","selectedProjectName","filteringTheEmp","nameReq","map","x","Experience","Emp_id","Pod","current_working_project","primary_skills","secndary_skills","Manager","render","skillsFilterShowCust","podsFilterShowCust","managersFilterShowCust","projectsFilterShowCust","marginTop","padding","paddingLeft","color","slice","height","employee"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/style.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\nimport Chip from '@material-ui/core/Chip';\nimport empGroup from '../assets/group-orange.png'\nimport {  TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport { EmployeeCard } from './EmployeeCard';\n\n/*\n  state variables and api data: 20-68 lines\n  onchange functions 70-164\n  req Data initializations: 170-235\n  filters (Dynamic checkboxes,slider,input) html: 240-400\n  filtering employees based on filter logic\n  displaying tags,emp cards,next/back buttons: 550-670\n*/\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],//api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      managersFilterShow:10,\n      podsFilterShow:10,\n      skillsExpanded: false,\n      projectsExpanded: false,\n      managersExpanded: false,\n      podsExpanded:false,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:9,\n      checkedItemsTag : [],\n      skillsCheckBox: false\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n    this.showMoreManagers = this.showMoreManagers.bind(this);\n    this.showMorePods = this.showMorePods.bind(this);\n  }\n  //fetching data from api\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/projects').then(res => res.json()),\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    })\n  }\n\n  //Experience slider on change calls the fxn and changes the values\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  //all types of input text field changes will call the fxn and changes the value\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change \n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'checkedItemsSkills'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      // document.getElementById(item).checked = true;\n    }\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n  }\n\n  //show more skill filter option \n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  //show more filter filter option \n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n   //show more filter filter option this.state.managersExpanded\n   showMoreManagers(){\n    this.state.managersFilterShow === 10 ? (\n      this.setState({ managersFilterShow: this.state.MangersApi.length, managersExpanded: true })\n    ) : (\n      this.setState({ managersFilterShow: 10, managersExpanded: false })\n    )\n  }\n\n  //show more filter filter option this.state.managersExpanded\n  showMorePods() {\n    this.state.podsFilterShow === 10 ? (\n      this.setState({ podsFilterShow: this.state.PodsApi.length, podsExpanded: true })\n    ) : (\n      this.setState({ podsFilterShow: 10, podsExpanded: false })\n    )\n  }\n\n  //next or back to view other emp cards if exists\n  changePage(direction) {\n    console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n  AllCheckedItems(){\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let checkedItemsTagList=[];\n    //storing all the checked items in array to display as tags\n    if(skillsChecked.size >0 || ManagersChecked.size >0  ||  podsChecked.size >0  || projectsChecked.size>0){\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n     \n      for (let i = 0; i < skillsChecked.size ; i++) {\n        let ps = iteratorS1.next().value;\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = { value: ps, filterField: \"skill\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n         \n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"manager\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"pod\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"project\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n  }\n  return checkedItemsTagList;\n\n  }\n\n  //if u click cancel on the selected tags the checkboxes should be unchecked auto\n  handleDelete = (chipToDelete) => () => {\n    console.log(chipToDelete);\n\n    let nam = chipToDelete.filterField;\n    var isChecked = false;\n    var item = chipToDelete.value;;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'skill'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n      console.log(event.target);\n    }\n    else if(nam === 'manager'){\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'pod'){\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'project'){\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n  };\n\n  //checking the empdetails matches\n  //experience match employee's\n  CheckExperience(employeeExperience,expMinReq, expMaxReq){\n     //experience checking: whether the emp has meet the req experience of customer\n    if ((((parseInt(employeeExperience)) >= expMinReq) && (parseInt(employeeExperience) <= expMaxReq))) {\n      return true;\n    }\n    return false;\n  }\n\n    //name checking: whether the emp has matched the name\n  checkNameId(empName,empId,NameIdReq){\n    if (NameIdReq) {\n      if (((empName.toLowerCase()).includes(NameIdReq.toLowerCase())) || empId.includes(NameIdReq)) {\n       return true;\n        //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true;     //if customer not typed anything\n    }\n\n  }\n\n  //checking skills match\n  checkSkillsMatch(skillsChecked,empPrimarySkills,empSecondarySkills){\n    if (skillsChecked.size > 0) {  //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n      for (let i = 0; i < skillsChecked.size; i++) {  //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n        if (selectedSkill) {\n          if ( !(((empPrimarySkills.toLowerCase()).includes(skillName)) || ((empSecondarySkills.toLowerCase()).includes(skillName))) ) {\n            return false;  //if one is not in the profile then return false\n          }\n        }\n      }\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  //managers Match checking\n  checkManagerMatch(ManagersChecked,EmpManager){\n    let managerMatch = false;\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n      for (let i = 0; i < ManagersChecked.size; i++) {\n          let selectedManger = iterator2.next().value;\n           let selectedMangerName = iterator1.next().value;\n        if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n          if (((EmpManager.toLowerCase()).includes(selectedMangerName))) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n\n        } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {  //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n      if(managerMatch)\n        return true;\n      else\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  //check pods Match\n  checkPodsMatch(podsChecked,empPod){\n    let podsMatch = false;\n     if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n      for (let i = 0; i < podsChecked.size; i++) {\n          let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n          if (((empPod.toLowerCase()).includes(selectedPodName))) {\n\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n\n        } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) { //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n       if (podsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }  \n    } else {\n      return true;\n    }\n  }\n\n //projects match\n  checkProjectMatch(projectsChecked,empProject){\n    let projectsMatch = false;\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n      for (let i = 0; i < projectsChecked.size; i++) {\n          let selectedProject = iterator2.next().value;\n          let selectedProjectName = iterator1.next().value;\n        if (selectedProject && !projectsMatch) { //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n          if (((empProject.toLowerCase()).includes(selectedProjectName))) {\n            projectsMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n\n        } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) { //if all the previous checked projects are unchecked\n          projectsMatch = true;   \n        } \n      }\n      if (projectsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }\n    } else {\n      return true;\n    }\n  }\n\n  filteringTheEmp(){\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let filteredEmployee= [];\n    Employees.map(x => (\n      <>{((() => {\n        if (this.CheckExperience(x.Experience, expMinReq, expMaxReq) \n          && this.checkNameId(x.name, x.Emp_id, nameReq)\n          && this.checkPodsMatch(podsChecked, x.Pod)\n          && this.checkProjectMatch(projectsChecked, x.current_working_project) \n          && this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills) \n          && this.checkManagerMatch(ManagersChecked, x.Manager) \n          ) {\n          filteredEmployee.push(x);\n        }\n      })())}\n      </>\n    ))\n    return filteredEmployee;\n  }\n\n\n  render() {\n    //initialisig the state variables for manipulations \n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    let podsFilterShowCust =this.state.podsFilterShow;\n    let managersFilterShowCust =this.state.managersFilterShow;\n    let projectsFilterShowCust =this.state.projectsFilterShow;\n    let filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems();  //getting all the checked items and storing to make tags\n    console.log(checkedItemsTagList);\n\n    return (\n      <>\n      <div className=\"filter-container\" id=\"filterPage\">\n        {/* different types of filters  */}\n        <div className=\"reqForm\">\n          <form >\n            {/* name or id input filed*/}\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Enter name or Id\"\n                variant=\"outlined\"\n                style={{ marginTop: \"15px\", padding: \"10.5px 8px\", paddingLeft: 0 }}\n                type=\"text\"\n                name=\"name\"\n                onChange={this.myChangeHandler}\n                className=\"InpcheckedItemsSkillsuttextField\"\n              />\n\n            {/* Experience slider*/}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n                style={{color:\"#ff8c4b\"}}\n              />\n            </div>\n\n            {/*  skills checkboxes*/}\n            <p className=\"filterName\">Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                <p className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </p>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\">Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.slice(0, managersFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            className=\"checkboxes\"\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                  {(this.state.MangersApi.length > 10)? \n                  <p className=\"showMore\"\n                    onClick={this.showMoreManagers}>\n                    {this.state.managersExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less managers\")}\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.slice(0, podsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                  }\n                  {(this.state.PodsApi.length > 10) ?\n                    <p className=\"showMore\"\n                      onClick={this.showMorePods}>\n                      {this.state.podsExpanded ? (\n                        <span>show less</span>\n                      ) : (\n                        <span>show more</span>\n                      )}\n                    </p>\n                    : console.log(\"less pods\")\n                  }\n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.slice(0, projectsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)? \n                  <p className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n          </form>\n        </div>\n\n        {/* //displaying */}\n        <div className=\"Employees\">\n{/* selected filters as tags */}\n          {/* {console.log(this.state.checkedItemsTag)} */}\n              <div className=\"tagsAndEmpCountContainer\">\n                <div className=\"selectedTags\">\n                {checkedItemsTagList.map(x => (\n                  <>\n                    {(\n                      (() => {\n                        return (\n                          (\n                            <>\n                              <Chip\n                                label={x.value}\n                                // icon={icon}\n                                onDelete={this.handleDelete(x)}\n                                className=\"tags\"\n                              />\n                            </>\n                          )\n                        )\n                      })()\n                    )}\n                  </>\n                ))\n                }\n                </div>\n                <div className=\"filtered-emp-count\">\n                  <img alt=\"no of emp\" src={empGroup} style={{ height: \"30%\" }}></img>\n                <p>{filteredEmployee.length}</p>\n                </div>\n              </div>\n          {/* <div>\n            <p>{filteredEmployee.length}</p>\n          </div> */}\n          {filteredEmployee.length>0 ? console.log(filteredEmployee.length):\n          <>\n          {(\n          (()=>{\n            return(   //no result found\n              <div className='NoResult'>\n               <img alt= \"No result found\" src= {NoResult}></img>   \n              </div>\n              )})())\n          }\n          </>\n          }\n\n          {/* Filtered Employees displaying */}\n          {filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => (\n            <>\n              {(\n                (() => {\n                    return (\n                      ( \n                      <EmployeeCard employee = {employee}></EmployeeCard>\n                      )\n                    )\n                })()\n              )}\n            </>\n          ))\n          \n          } \n        </div>\n      </div>\n      {/* next page or back button for viewing the cards */}\n      <div className=\"nextBack\">\n      {this.state.currentPage > 1 ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; Back</button>\n      : null}\n      {filteredEmployee.length  > this.state.currentPage * this.state.maxItemsPerPage ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}>Next &raquo;</button>\n      : null}\n     </div>\n    </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}