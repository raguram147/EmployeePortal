{"ast":null,"code":"var _jsxFileName = \"/home/raguram_s/lister-emp-portal/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport randomcolor from \"randomcolor\";\nimport { useParams } from \"react-router-dom\";\nimport \"../components/styles/style.css\"; // import useFetch from '../utility'\n// import empData from \"../EmpData.json\";\n// import PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport Lottie from \"react-lottie\";\nimport Orgtree from \"../lottie/org-tree.json\";\nimport config from '../config';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  empData\n}) => {\n  _s();\n\n  // const levelColor = randomcolor();\n  // console.log(empData);\n  let params = useParams();\n  let BreadcrumbsArr = [];\n  let head = [];\n  window.sessionStorage.setItem(\"OrgLevel\", 1);\n\n  const ReportingPeople = EmpName => {\n    if (JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"))) {\n      // let ReportingArray = window.sessionStorage.getItem(EmpName);\n      // console.log(ReportingArray);\n      return JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"));\n    }\n\n    let ReportingPeopleArr = [];\n    let match = false;\n\n    for (let i = 0; i < empData.length; i++) {\n      let matching = false;\n\n      if (!match && empData[i].reports_to.includes(EmpName)) {\n        //checking for a match\n        ReportingPeopleArr.push(empData[i]);\n        match = true;\n        matching = true;\n      } else if (match && empData[i].reports_to.includes(EmpName)) {\n        //after having match all the reporting employee will be in group\n        ReportingPeopleArr.push(empData[i]);\n        matching = true;\n      }\n\n      if (match && !matching) {\n        //when the sequence of reporters broken then return the array\n        window.sessionStorage.setItem(EmpName + \" Reporting\", JSON.stringify(ReportingPeopleArr)); // console.log(ReportingPeopleArr);\n\n        return ReportingPeopleArr;\n      }\n    }\n\n    return ReportingPeopleArr;\n  };\n\n  const ReportsTo = Emp => {\n    // console.log(Emp[0].role);\n    // let designation = Emp[0].role;\n    // let name = Emp[0].name; !Emp[0].role.includes(\"Chief Executive Officer\") ||\n    let reportsTo = Emp[0].reports_to;\n    let AllReportsToArr = [];\n\n    if (reportsTo) {\n      while (!reportsTo.includes(\"Srinivasan Gopal\")) {\n        let ReportsToArr = [];\n\n        if (JSON.parse(window.sessionStorage.getItem(reportsTo))) {\n          ReportsToArr = JSON.parse(window.sessionStorage.getItem(reportsTo));\n          AllReportsToArr.push(ReportsToArr[0]);\n        } else {\n          for (let i = 0; i < empData.length; i++) {\n            if (empData[i].name.includes(reportsTo)) {\n              ReportsToArr.push(empData[i]);\n              AllReportsToArr.push(empData[i]);\n              window.sessionStorage.setItem(empData[i].name, JSON.stringify(ReportsToArr));\n              window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(ReportsToArr));\n            }\n          }\n        } // console.log(ReportsToArr[0]);\n        //  designation = ReportsToArr[0].role;\n\n\n        reportsTo = ReportsToArr[0].reports_to;\n      }\n    }\n\n    let CEO = [{\n      name: \"Srinivasan Gopal\",\n      emp_id: \"0001\",\n      role: \"Chief Executive Officer\",\n      DP: \"/sites/default/files/default_images/DefaultDp_0.png\"\n    }];\n    AllReportsToArr.push(CEO[0]);\n    AllReportsToArr.reverse(); // console.log(AllReportsToArr);\n\n    return AllReportsToArr;\n  };\n\n  const EmpDetails = EmpName => {\n    let ReportsToArr = [];\n\n    for (let i = 0; i < empData.length; i++) {\n      if (empData[i].name.includes(EmpName)) {\n        ReportsToArr.push(empData[i]); // console.log(ReportsToArr);\n\n        return ReportsToArr;\n      }\n    }\n\n    let CEO = [{\n      name: \"Srinivasan Gopal\",\n      emp_id: \"0001\",\n      role: \"Chief Executive Officer\",\n      DP: \"/sites/default/files/default_images/DefaultDp_0.png\"\n    }];\n    return CEO;\n  }; //org chart level array initializations 2 cases for CEO and rem emp\n\n\n  if (params.Emp === \"Srinivasan Gopal\") {\n    //2 levels\n    head = [{\n      name: \"Srinivasan Gopal\",\n      emp_id: \"0001\",\n      role: \"Chief Executive Officer\",\n      DP: \"/sites/default/files/default_images/DefaultDp_0.png\"\n    }];\n    const Presidents = ReportingPeople(params.Emp);\n    window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(head));\n    window.sessionStorage.setItem(head[0].name, JSON.stringify(head));\n\n    for (let i = 0; i < Presidents.length; i++) {\n      let EmpArr = [];\n      EmpArr.push(Presidents[i]);\n      window.sessionStorage.setItem(Presidents[i].name, JSON.stringify(EmpArr));\n    }\n\n    head = Presidents;\n    let Reporting = [];\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Reporting));\n  } else {\n    // 3 levels for non ceo\n    if (JSON.parse(window.sessionStorage.getItem(params.Emp))) {\n      head = JSON.parse(window.sessionStorage.getItem(params.Emp)); // console.log(head);\n    } else {\n      head = EmpDetails(params.Emp);\n      window.sessionStorage.setItem(params.Emp, JSON.stringify(head)); // console.log(head);\n    } // head.push(JSON.parse(params.Emp));\n    // let arr = [];\n    // arr.push(params.Emp);\n    // console.log(params.Emp);\n    // console.log(head);\n\n\n    let EmpReportsTo = head[0].reports_to; // console.log(EmpReportsTo);\n\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(ReportingPeople(params.Emp)));\n    BreadcrumbsArr = ReportsTo(head);\n\n    if (EmpReportsTo) {\n      if (JSON.parse(window.sessionStorage.getItem(EmpReportsTo))) {\n        // if reports to data is stored in SS then no loop\n        let ReportsToArr = [];\n        ReportsToArr = JSON.parse(window.sessionStorage.getItem(EmpReportsTo));\n        window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(ReportsToArr));\n      } else {\n        let EmpReportsToDetails = EmpDetails(EmpReportsTo);\n        window.sessionStorage.setItem(EmpReportsTo, JSON.stringify(EmpReportsToDetails));\n        window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(EmpReportsToDetails));\n      }\n    } else {\n      let Ceo = [{\n        name: \"Srinivasan Gopal\",\n        emp_id: \"0001\",\n        role: \"Chief Executive Officer\",\n        DP: \"/sites/default/files/default_images/DefaultDp_0.png\"\n      }];\n      window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(Ceo));\n    }\n  } // console.log(window.sessionStorage.getItem(\"ReportsTo\"));\n  // console.log(window.sessionStorage.getItem(\"Reporting\"));\n\n\n  const handleOnSelect = Emp => {\n    // the item selected\n    let EmpArr = [];\n    EmpArr.push(Emp);\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = Emp.name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr));\n    window.location.href = \"/org-chart/\" + name; // console.log(Emp);\n  };\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: Orgtree,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n\n  const formatResult = item => {\n    return item;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"org-container\",\n    children: [params.Emp === \"Srinivasan Gopal\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      maxItems: 2,\n      \"aria-label\": \"breadcrumb\",\n      children: [BreadcrumbsArr.map((item, index) => /*#__PURE__*/_jsxDEV(Link, {\n        color: \"inherit\",\n        href: `/org-chart/${item.name}`,\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: \"#2c5c6d\",\n          fontWeight: \"700\"\n        },\n        children: params.Emp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchWidget\",\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n        className: \"searchIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchAutocomplete\",\n        children: /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n          items: empData,\n          onSelect: handleOnSelect,\n          autoFocus: true,\n          formatResult: formatResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"org-tree\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        data: head\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Lottie, {\n      options: defaultOptions,\n      style: {\n        margin: \"0\",\n        left: \"0\",\n        bottom: \"0%\",\n        top: \"90%\",\n        position: \"absolute\",\n        height: \"35%\",\n        width: \"25%\",\n        cursor: \"default\",\n        zIndex: \"0\",\n        paddingBottom: \"2%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Chart;\nexport default Chart;\n\nconst Card = props => {\n  const levelColor = randomcolor(); // console.log(props);\n  //get the new emp details of desired emp (clicked) and show his org chart\n\n  const newChart = Emp => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = JSON.parse(Emp).name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr));\n    window.location.href = \"/org-chart/\" + name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: JSON.parse(window.sessionStorage.getItem(\"ReportsTo\")).map((item, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"OrgCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              onClick: () => newChart(JSON.stringify(item)),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${config.drupal_url}/${item.DP}`,\n                alt: \"Profile\",\n                style: {\n                  borderColor: levelColor\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"OrgCard-body\",\n              onClick: () => newChart(JSON.stringify(item)),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-profile-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  title: item.name,\n                  className: \"OrgCard-body-h4\",\n                  children: item.name.length > 22 ? item.name.split(\" \")[0] : item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empProfileNav\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/employee-details/\" + item.emp_id,\n                    className: \"playBut\",\n                    children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n                      className: \"playIcon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                title: item.role,\n                className: \"OrgCard-body-p\",\n                children: item.role.length > 28 ? item.role.split(\" \").length === 2 ? item.role.split(\" \")[0].substring(0, 1) + item.role.split(\" \")[1].substring(0, 1) : item.role.split(\" \")[0].substring(0, 1) + item.role.split(\" \")[1].substring(0, 1) + item.role.split(\" \")[2].substring(0, 1) : item.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: props.data.map((item, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"OrgCard\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image\",\n                    onClick: () => newChart(JSON.stringify(item)),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `${config.drupal_url}/${item.DP}`,\n                      alt: \"Profile\",\n                      style: {\n                        borderColor: levelColor\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"OrgCard-body\",\n                    id: \"selected-node\",\n                    onClick: () => newChart(JSON.stringify(item)),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"name-profile-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        title: item.name,\n                        className: \"OrgCard-body-h4\",\n                        children: item.name.length > 22 ? item.name.split(\" \")[0] : item.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"empProfileNav\",\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: \"/employee-details/\" + item.emp_id,\n                          className: \"playBut\",\n                          children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n                            className: \"playIcon\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 365,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 364,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      title: item.role,\n                      className: \"OrgCard-body-p\",\n                      children: item.role.length > 28 ? item.role.split(\" \").length === 2 ? item.role.split(\" \")[0].substring(0, 1) + item.role.split(\" \")[1].substring(0, 1) : item.role.split(\" \")[0].substring(0, 1) + item.role.split(\" \")[1].substring(0, 1) + item.role.split(\" \")[2].substring(0, 1) : item.role\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this), JSON.parse(window.sessionStorage.getItem(\"Reporting\")).length > 0 ? JSON.parse(window.sessionStorage.getItem(\"Reporting\")).length === 1 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: JSON.parse(window.sessionStorage.getItem(\"Reporting\")).map((item, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"OrgCard\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"image\",\n                          onClick: () => newChart(JSON.stringify(item)),\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: `${config.drupal_url}/${item.DP}`,\n                            alt: \"Profile\",\n                            style: {\n                              borderColor: levelColor\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 392,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 387,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"OrgCard-body\",\n                          onClick: () => newChart(JSON.stringify(item)),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"name-profile-container\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                              title: item.name,\n                              className: \"OrgCard-body-h4\",\n                              children: item.name.length > 22 ? item.name.split(\" \")[0] : item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 402,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"empProfileNav\",\n                              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                href: \"/employee-details/\" + item.emp_id,\n                                className: \"playBut\",\n                                children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n                                  className: \"playIcon\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 407,\n                                  columnNumber: 45\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 406,\n                                columnNumber: 43\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 405,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 401,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            title: item.role,\n                            className: \"OrgCard-body-p\",\n                            children: item.role.length > 28 ? item.role.split(\" \").length === 2 ? item.role.split(\" \")[0].substring(0) + item.role.split(\" \")[1].substring(0) : item.role.split(\" \")[0].substring(0) + item.role.split(\" \")[1].substring(0) + item.role.split(\" \")[2].substring(0) : item.role\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 411,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 398,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 35\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 33\n                    }, this)\n                  }, item.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"selected-team\",\n                    children: JSON.parse(window.sessionStorage.getItem(\"Reporting\")).map((item, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"\",\n                        id: \"team-card\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"OrgCard\",\n                          onClick: () => newChart(JSON.stringify(item)),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"image\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: `${config.drupal_url}/${item.DP}`,\n                              alt: \"Profile\",\n                              style: {\n                                borderColor: levelColor\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 439,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 436,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"OrgCard-body\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"name-profile-container\",\n                              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                                title: item.name,\n                                className: \"OrgCard-body-h4\",\n                                children: item.name.length > 22 ? item.name.split(\" \")[0] : item.name\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 447,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                className: \"empProfileNav\",\n                                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                                  href: \"/employee-details/\" + item.emp_id,\n                                  className: \"playBut\",\n                                  children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n                                    className: \"playIcon\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 452,\n                                    columnNumber: 25\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 451,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 450,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 446,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              title: item.role,\n                              className: \"OrgCard-body-p\",\n                              children: item.role.length > 28 ? item.role.split(\" \").length === 2 ? item.role.split(\" \")[0].substring(0, 1) + item.role.split(\" \")[1].substring(0, 1) : item.role.split(\" \")[0].substring(0, 1) + item.role.split(\" \")[1].substring(0, 1) + item.role.split(\" \")[2].substring(0, 1) : item.role\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 456,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 445,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 430,\n                          columnNumber: 37\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 429,\n                        columnNumber: 35\n                      }, this)\n                    }, item.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Card;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/components/Chart.js"],"names":["React","Fragment","randomcolor","useParams","PlayArrowIcon","ReactSearchAutocomplete","SearchIcon","Breadcrumbs","Typography","Link","Lottie","Orgtree","config","Chart","empData","params","BreadcrumbsArr","head","window","sessionStorage","setItem","ReportingPeople","EmpName","JSON","parse","getItem","ReportingPeopleArr","match","i","length","matching","reports_to","includes","push","stringify","ReportsTo","Emp","reportsTo","AllReportsToArr","ReportsToArr","name","CEO","emp_id","role","DP","reverse","EmpDetails","Presidents","EmpArr","Reporting","EmpReportsTo","EmpReportsToDetails","Ceo","handleOnSelect","removeItem","location","href","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","formatResult","item","map","index","color","fontWeight","margin","left","bottom","top","position","height","width","cursor","zIndex","paddingBottom","Card","props","levelColor","newChart","drupal_url","borderColor","split","substring","data"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport randomcolor from \"randomcolor\";\nimport { useParams } from \"react-router-dom\";\nimport \"../components/styles/style.css\";\n// import useFetch from '../utility'\n// import empData from \"../EmpData.json\";\n// import PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport Lottie from \"react-lottie\";\nimport Orgtree from \"../lottie/org-tree.json\";\nimport config from '../config';\n\nconst Chart = ({ empData }) => {\n  // const levelColor = randomcolor();\n  // console.log(empData);\n  let params = useParams();\n  let BreadcrumbsArr = [];\n\n  let head = [];\n  window.sessionStorage.setItem(\"OrgLevel\", 1);\n\n  const ReportingPeople = (EmpName) => {\n    if (JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"))) {\n      // let ReportingArray = window.sessionStorage.getItem(EmpName);\n      // console.log(ReportingArray);\n      return JSON.parse(window.sessionStorage.getItem(EmpName + \" Reporting\"));\n    }\n\n    let ReportingPeopleArr = [];\n    let match = false;\n    for (let i = 0; i < empData.length; i++) {\n      let matching = false;\n      if (!match && empData[i].reports_to.includes(EmpName)) {\n        //checking for a match\n        ReportingPeopleArr.push(empData[i]);\n        match = true;\n        matching = true;\n      } else if (match && empData[i].reports_to.includes(EmpName)) {\n        //after having match all the reporting employee will be in group\n        ReportingPeopleArr.push(empData[i]);\n        matching = true;\n      }\n\n      if (match && !matching) {\n        //when the sequence of reporters broken then return the array\n        window.sessionStorage.setItem(\n          EmpName + \" Reporting\",\n          JSON.stringify(ReportingPeopleArr)\n        );\n        // console.log(ReportingPeopleArr);\n        return ReportingPeopleArr;\n      }\n    }\n    return ReportingPeopleArr;\n  };\n\n  const ReportsTo = (Emp) => {\n    // console.log(Emp[0].role);\n    // let designation = Emp[0].role;\n    // let name = Emp[0].name; !Emp[0].role.includes(\"Chief Executive Officer\") ||\n    let reportsTo = Emp[0].reports_to;\n\n    let AllReportsToArr = [];\n\n    if (reportsTo) {\n      while (!reportsTo.includes(\"Srinivasan Gopal\")) {\n        let ReportsToArr = [];\n        if (JSON.parse(window.sessionStorage.getItem(reportsTo))) {\n          ReportsToArr = JSON.parse(window.sessionStorage.getItem(reportsTo));\n          AllReportsToArr.push(ReportsToArr[0]);\n        } else {\n          for (let i = 0; i < empData.length; i++) {\n            if (empData[i].name.includes(reportsTo)) {\n              ReportsToArr.push(empData[i]);\n              AllReportsToArr.push(empData[i]);\n              window.sessionStorage.setItem(\n                empData[i].name,\n                JSON.stringify(ReportsToArr)\n              );\n              window.sessionStorage.setItem(\n                \"ReportsTo\",\n                JSON.stringify(ReportsToArr)\n              );\n            }\n          }\n        }\n        // console.log(ReportsToArr[0]);\n        //  designation = ReportsToArr[0].role;\n        reportsTo = ReportsToArr[0].reports_to;\n      }\n    }\n    let CEO = [\n      {\n        name: \"Srinivasan Gopal\",\n        emp_id: \"0001\",\n        role: \"Chief Executive Officer\",\n        DP: \"/sites/default/files/default_images/DefaultDp_0.png\",\n      },\n    ];\n    AllReportsToArr.push(CEO[0]);\n    AllReportsToArr.reverse();\n    // console.log(AllReportsToArr);\n    return AllReportsToArr;\n  };\n  const EmpDetails = (EmpName) => {\n    let ReportsToArr = [];\n    for (let i = 0; i < empData.length; i++) {\n      if (empData[i].name.includes(EmpName)) {\n        ReportsToArr.push(empData[i]);\n        // console.log(ReportsToArr);\n        return ReportsToArr;\n      }\n    }\n    let CEO = [\n      {\n        name: \"Srinivasan Gopal\",\n        emp_id: \"0001\",\n        role: \"Chief Executive Officer\",\n        DP: \"/sites/default/files/default_images/DefaultDp_0.png\",\n      },\n    ];\n\n    return CEO;\n  };\n  //org chart level array initializations 2 cases for CEO and rem emp\n  if (params.Emp === \"Srinivasan Gopal\") {\n    //2 levels\n    head = [\n      {\n        name: \"Srinivasan Gopal\",\n        emp_id: \"0001\",\n        role: \"Chief Executive Officer\",\n        DP: \"/sites/default/files/default_images/DefaultDp_0.png\",\n      },\n    ];\n\n    const Presidents = ReportingPeople(params.Emp);\n    window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(head));\n    window.sessionStorage.setItem(head[0].name, JSON.stringify(head));\n\n    for (let i = 0; i < Presidents.length; i++) {\n      let EmpArr = [];\n      EmpArr.push(Presidents[i]);\n      window.sessionStorage.setItem(Presidents[i].name, JSON.stringify(EmpArr));\n    }\n    head = Presidents;\n    let Reporting = [];\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Reporting));\n  } else {\n    // 3 levels for non ceo\n    if (JSON.parse(window.sessionStorage.getItem(params.Emp))) {\n      head = JSON.parse(window.sessionStorage.getItem(params.Emp));\n      // console.log(head);\n    } else {\n      head = EmpDetails(params.Emp);\n      window.sessionStorage.setItem(params.Emp, JSON.stringify(head));\n      // console.log(head);\n    }\n\n    // head.push(JSON.parse(params.Emp));\n    // let arr = [];\n    // arr.push(params.Emp);\n    // console.log(params.Emp);\n    // console.log(head);\n    let EmpReportsTo = head[0].reports_to;\n    // console.log(EmpReportsTo);\n    window.sessionStorage.setItem(\n      \"Reporting\",\n      JSON.stringify(ReportingPeople(params.Emp))\n    );\n\n    BreadcrumbsArr = ReportsTo(head);\n    if (EmpReportsTo) {\n      if (JSON.parse(window.sessionStorage.getItem(EmpReportsTo))) {\n        // if reports to data is stored in SS then no loop\n        let ReportsToArr = [];\n        ReportsToArr = JSON.parse(window.sessionStorage.getItem(EmpReportsTo));\n        window.sessionStorage.setItem(\n          \"ReportsTo\",\n          JSON.stringify(ReportsToArr)\n        );\n      } else {\n        let EmpReportsToDetails = EmpDetails(EmpReportsTo);\n        window.sessionStorage.setItem(\n          EmpReportsTo,\n          JSON.stringify(EmpReportsToDetails)\n        );\n        window.sessionStorage.setItem(\n          \"ReportsTo\",\n          JSON.stringify(EmpReportsToDetails)\n        );\n      }\n    } else {\n      let Ceo = [\n        {\n          name: \"Srinivasan Gopal\",\n          emp_id: \"0001\",\n          role: \"Chief Executive Officer\",\n          DP: \"/sites/default/files/default_images/DefaultDp_0.png\",\n        },\n      ];\n      window.sessionStorage.setItem(\"ReportsTo\", JSON.stringify(Ceo));\n    }\n  }\n  // console.log(window.sessionStorage.getItem(\"ReportsTo\"));\n  // console.log(window.sessionStorage.getItem(\"Reporting\"));\n\n  const handleOnSelect = (Emp) => {\n    // the item selected\n    let EmpArr = [];\n    EmpArr.push(Emp);\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = Emp.name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr));\n    window.location.href = \"/org-chart/\" + name;\n    // console.log(Emp);\n  };\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: Orgtree,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const formatResult = (item) => {\n    return item;\n  };\n  return (\n    <div className=\"org-container\">\n      {params.Emp === \"Srinivasan Gopal\" ? (\n        <></>\n      ) : (\n        <Breadcrumbs maxItems={2} aria-label=\"breadcrumb\">\n          {BreadcrumbsArr.map((item,index) => (\n            <Link color=\"inherit\" href={`/org-chart/${item.name}`} key={index}>\n              {item.name}\n            </Link>\n          ))}\n          <Typography  style={{ color: \"#2c5c6d\", fontWeight:\"700\" }} >{params.Emp}</Typography>\n        </Breadcrumbs>\n      )}\n      <div className=\"searchWidget\">\n        <SearchIcon className=\"searchIcon\"></SearchIcon>\n        <div className=\"SearchAutocomplete\" >\n          <ReactSearchAutocomplete\n            items={empData}\n            onSelect={handleOnSelect}\n            autoFocus\n            formatResult={formatResult}\n          />\n        </div>\n      </div>\n      <div className=\"org-tree\">\n        <Card data={head} />\n      </div>\n      <Lottie\n        options={defaultOptions}\n        style={{\n          margin: \"0\",\n          left: \"0\",\n          bottom: \"0%\",\n          top: \"90%\",\n          position: \"absolute\",\n          height: \"35%\",\n          width: \"25%\",\n          cursor: \"default\",\n          zIndex: \"0\",\n          paddingBottom: \"2%\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n\nconst Card = (props) => {\n  const levelColor = randomcolor();\n  // console.log(props);\n  \n  //get the new emp details of desired emp (clicked) and show his org chart\n  const newChart = (Emp) => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.removeItem(\"ReportsTo\");\n    let name = JSON.parse(Emp).name;\n    window.sessionStorage.setItem(name, JSON.stringify(EmpArr));\n    window.location.href = \"/org-chart/\" + name;\n  };\n\n  return (\n    <>\n      <ul>\n        {JSON.parse(window.sessionStorage.getItem(\"ReportsTo\")).map((item,index) => (\n          <Fragment key={item.name}>\n            <li key={index}>\n              <div\n                className=\"OrgCard\"\n               \n              >\n                <div className=\"image\"  onClick={() => newChart(JSON.stringify(item))}>\n                  {/* {console.log(item)} */}\n                  {/* {console.log(props.data.length)} */}\n                  <img\n                    src={`${config.drupal_url}/${item.DP}`}\n                    alt=\"Profile\"\n                    style={{ borderColor: levelColor }}\n                  ></img>\n                </div>\n                <div className=\"OrgCard-body\"  onClick={() => newChart(JSON.stringify(item))}>\n                  <div className=\"name-profile-container\">\n                    <h4 title={item.name} className=\"OrgCard-body-h4\">{item.name.length>22?item.name.split(\" \")[0]:item.name}</h4>\n                    <p className=\"empProfileNav\">\n                      {/* {console.log(item.name.length)} */}\n                      {/* {console.log(item.name.split(\" \")[0])} */}\n                    <a href={\"/employee-details/\" + item.emp_id} className='playBut'>\n                        <PlayArrowIcon className=\"playIcon\"></PlayArrowIcon>\n                      </a>\n                    </p>\n                  </div>\n                         {/* <!-- Generator: Adobe Illustrator 19.0.0, SVG Export Plug-In  --> */}\n                        {/* <svg version=\"1.1\"\n                          xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xlinkHref=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n                          x=\"0px\" y=\"0px\" width=\"24px\" height=\"24px\" viewBox=\"0 0 213.7 213.7\" enable-background=\"new 0 0 213.7 213.7\"\n                          xmlSpace=\"preserve\">\n\n                          <polygon class='triangle' id=\"XMLID_18_\" fill=\"none\" stroke-width=\"7\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"\n      73.5,62.5 148.5,105.8 73.5,149.1 \"/>\n\n                          <circle class='circle' id=\"XMLID_17_\" fill=\"none\" stroke-width=\"7\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" cx=\"106.8\" cy=\"106.8\" r=\"103.3\" />\n                        </svg> */}\n                  <p title={item.role} className=\"OrgCard-body-p\">{item.role.length>28?(item.role.split(\" \").length===2?item.role.split(\" \")[0].substring(0,1)+item.role.split(\" \")[1].substring(0,1):item.role.split(\" \")[0].substring(0,1)+item.role.split(\" \")[1].substring(0,1)+item.role.split(\" \")[2].substring(0,1)):item.role}</p>\n                </div>\n              </div>\n              <ul>\n                {props.data.map((item,index) => (\n                  <Fragment key={item.name}>\n                    <li key={index}>\n                      <div\n                        className=\"OrgCard\"\n                      \n                      >\n                        <div className=\"image\"   onClick={() => newChart(JSON.stringify(item))}>\n                          {/* {console.log(item)} */}\n                          {/* {console.log(props.data.length)} */}\n                          <img\n                            src={`${config.drupal_url}/${item.DP}`}\n                            alt=\"Profile\"\n                            style={{ borderColor: levelColor }}\n                          ></img>\n                        </div>\n                        <div className=\"OrgCard-body\" id=\"selected-node\"   onClick={() => newChart(JSON.stringify(item))}>\n                          <div className=\"name-profile-container\">\n                            <h4 title={item.name} className=\"OrgCard-body-h4\">{item.name.length>22?item.name.split(\" \")[0]:item.name}</h4>\n                            <p className=\"empProfileNav\">\n                              <a href={\"/employee-details/\" + item.emp_id} className='playBut'>\n                                <PlayArrowIcon className=\"playIcon\"></PlayArrowIcon>\n                              </a>\n                            </p>\n                          </div>\n                          <p title={item.role} className=\"OrgCard-body-p\">{item.role.length>28?(item.role.split(\" \").length===2?item.role.split(\" \")[0].substring(0,1)+item.role.split(\" \")[1].substring(0,1):item.role.split(\" \")[0].substring(0,1)+item.role.split(\" \")[1].substring(0,1)+item.role.split(\" \")[2].substring(0,1)):item.role}</p>\n                        </div>\n                      </div>\n                    {/* more than 1 childsin 3 rd level flat top border */}\n                      {JSON.parse(window.sessionStorage.getItem(\"Reporting\"))\n                        .length > 0 ? (\n                        JSON.parse(window.sessionStorage.getItem(\"Reporting\"))\n                          .length === 1 ? (\n                          <ul>\n                            {JSON.parse(\n                              window.sessionStorage.getItem(\"Reporting\")\n                            ).map((item,index) => (\n                              <Fragment key={item.name}>\n                                <li key={index}>\n                                  <div\n                                    className=\"OrgCard\"\n                                  \n                                  >\n                                    <div className=\"image\"   onClick={() =>\n                                      newChart(JSON.stringify(item))\n                                    }>\n                                      {/* {console.log(item)} */}\n                                      {/* {console.log(props.data.length)} */}\n                                      <img\n                                        src={`${config.drupal_url}/${item.DP}`}\n                                        alt=\"Profile\"\n                                        style={{ borderColor: levelColor }}\n                                      ></img>\n                                    </div>\n                                    <div className=\"OrgCard-body\"   onClick={() =>\n                                      newChart(JSON.stringify(item))\n                                    }>\n                                      <div className=\"name-profile-container\">\n                                        <h4 title={item.name} className=\"OrgCard-body-h4\">\n                                        {item.name.length>22?item.name.split(\" \")[0]:item.name}\n                                        </h4>\n                                        <p className=\"empProfileNav\">\n                                          <a href={\"/employee-details/\" + item.emp_id} className='playBut'>\n                                            <PlayArrowIcon className=\"playIcon\"></PlayArrowIcon>\n                                          </a>\n                                        </p>\n                                      </div>\n                                      <p title={item.role} className=\"OrgCard-body-p\">\n                                        {item.role.length>28?(item.role.split(\" \").length===2?item.role.split(\" \")[0].substring(0)+item.role.split(\" \")[1].substring(0):item.role.split(\" \")[0].substring(0)+item.role.split(\" \")[1].substring(0)+item.role.split(\" \")[2].substring(0)):item.role}\n                                      </p>\n                                    </div>\n                                  </div>\n                                </li>\n                              </Fragment>\n                            ))}\n                          </ul>\n                        ) : (\n                          <ul>\n                            {/* <div className=\"level-separater\"> */}\n                            <div className=\"selected-team\">\n                              {JSON.parse(\n                                window.sessionStorage.getItem(\"Reporting\")\n                              ).map((item,index) => (\n                                <Fragment key={item.name}>\n                                  {/* <li> */}\n                                  <div className=\"\" id=\"team-card\" key={index}>\n                                    <div\n                                      className=\"OrgCard\"\n                                      onClick={() =>\n                                        newChart(JSON.stringify(item))\n                                      }\n                                    >\n                                      <div className=\"image\">\n                                        {/* {console.log(item)} */}\n                                        {/* {console.log(props.data.length)} */}\n                                        <img\n                                          src={`${config.drupal_url}/${item.DP}`}\n                                          alt=\"Profile\"\n                                          style={{ borderColor: levelColor }}\n                                        ></img>\n                                      </div>\n                                      <div className=\"OrgCard-body\">\n                                        <div className=\"name-profile-container\">\n                                          <h4 title={item.name} className=\"OrgCard-body-h4\">\n                                          {item.name.length>22?item.name.split(\" \")[0]:item.name}\n                                          </h4>\n                                          <p className=\"empProfileNav\">\n                                          <a href={\"/employee-details/\" + item.emp_id} className='playBut'>\n                        <PlayArrowIcon className=\"playIcon\"></PlayArrowIcon>\n                      </a>\n                                          </p>\n                                        </div>\n                                        <p title={item.role} className=\"OrgCard-body-p\">\n                                          {item.role.length>28?(item.role.split(\" \").length===2?item.role.split(\" \")[0].substring(0,1)+item.role.split(\" \")[1].substring(0,1):item.role.split(\" \")[0].substring(0,1)+item.role.split(\" \")[1].substring(0,1)+item.role.split(\" \")[2].substring(0,1)):item.role}\n                                        </p>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </Fragment>\n                              ))}\n                            </div>\n                            {/* </div> */}\n                          </ul>\n                        )\n                      ) : (\n                        <></>\n                      )}\n                    </li>\n                  </Fragment>\n                ))}\n              </ul>\n            </li>\n          </Fragment>\n        ))}\n      </ul>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}