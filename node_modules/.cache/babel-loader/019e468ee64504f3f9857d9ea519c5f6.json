{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport randomcolor from \"randomcolor\";\nimport { useParams } from \"react-router-dom\";\nimport \"../components/styles/orgChartStyles.css\";\nimport empData from \"../EmpData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const levelColor = randomcolor();\n  let params = useParams();\n  let OrgChartArray = [];\n  let head = [];\n\n  const ReportingPeople = EmpName => {\n    if (JSON.parse(window.sessionStorage.getItem(EmpName))) {\n      // let ReportingArray = window.sessionStorage.getItem(EmpName);\n      // console.log(ReportingArray);\n      return JSON.parse(window.sessionStorage.getItem(EmpName));\n    }\n\n    let ReportingPeopleArr = [];\n    let match = false;\n\n    for (let i = 0; i < empData.length; i++) {\n      let matching = false;\n\n      if (!match && empData[i].reports_to.includes(EmpName)) {\n        //checking for a match\n        ReportingPeopleArr.push(empData[i]);\n        match = true;\n        matching = true;\n      } else if (match && empData[i].reports_to.includes(EmpName)) {\n        //after having match all the reporting employee will be in group\n        ReportingPeopleArr.push(empData[i]);\n        matching = true;\n      }\n\n      if (match && !matching) {\n        //when the sequence of reporters broken then return the array\n        window.sessionStorage.setItem(EmpName, JSON.stringify(ReportingPeopleArr)); // console.log(JSON.parse(window.sessionStorage.getItem(EmpName)));\n\n        console.log(ReportingPeopleArr);\n        return ReportingPeopleArr;\n      }\n    }\n\n    return ReportingPeopleArr;\n  };\n\n  if (params.Emp === \"default\") {\n    head = [{\n      \"name\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0001\",\n      \"role\": \"Chief Executive Officer\",\n      \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\"\n    }];\n    const Presidents = [{\n      \"name\": \"Vasan Sampath\",\n      \"reports_to\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0011\",\n      \"DP\": \"/sites/default/files/2021-07/chris-gayle_0.png\",\n      \"role\": \"President\"\n    }, {\n      \"name\": \"Mukund Devarajan\",\n      \"reports_to\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0012\",\n      \"DP\": \"/sites/default/files/2021-07/rishabh-rajendra-pant_0.png\",\n      \"role\": \"Senior Vice President\"\n    }, {\n      \"name\": \"Vijay Ramanan\",\n      \"reports_to\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0013\",\n      \"DP\": \"/sites/default/files/2021-07/rohit-sharma.png\",\n      \"role\": \"Senior Vice President\"\n    }];\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Presidents));\n  } else {\n    head = JSON.parse(window.sessionStorage.getItem(\"emp\"));\n    let EmpName = head[0].name;\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(ReportingPeople(EmpName)));\n  }\n\n  console.log(params.Emp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"org-tree\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      data: head\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Chart, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Chart;\nexport default Chart;\n\nconst Card = props => {\n  const levelColor = randomcolor();\n  console.log(props);\n\n  const newChart = Emp => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.setItem(\"emp\", JSON.stringify(EmpArr));\n    console.log(JSON.parse(window.sessionStorage.getItem(\"emp\")));\n    console.log(JSON.parse(Emp).name.length);\n    window.location.href = \"/OrgChart/\" + JSON.parse(Emp).name.length; // console.log(JSON.parse(EmpArr));\n    // setnewRender(true)\n    //  return  <Chart data={JSON.parse(Emp)} ></Chart>\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.data ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.data.map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"OrgCard\",\n            onClick: () => newChart(JSON.stringify(item)),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: [console.log(item), console.log(props.data.length), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://dev-employeeportal.pantheonsite.io/${item.DP}`,\n                alt: \"Profile\",\n                style: {\n                  borderColor: levelColor\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"OrgCard-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"OrgCard-body-h4\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"OrgCard-body-p\",\n                children: item.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), props.data.length === 1 ? /*#__PURE__*/_jsxDEV(Card, {\n            data: JSON.parse(window.sessionStorage.getItem(\"Reporting\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_c2 = Card;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Chart.js"],"names":["React","Fragment","useState","randomcolor","useParams","empData","Chart","levelColor","params","OrgChartArray","head","ReportingPeople","EmpName","JSON","parse","window","sessionStorage","getItem","ReportingPeopleArr","match","i","length","matching","reports_to","includes","push","setItem","stringify","console","log","Emp","Presidents","name","Card","props","newChart","EmpArr","location","href","data","map","item","DP","borderColor","role"],"mappings":"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","sourcesContent":["import React, { Fragment , useState} from \"react\";\nimport randomcolor from \"randomcolor\";\nimport {\n    useParams,\n  } from \"react-router-dom\";\nimport \"../components/styles/orgChartStyles.css\"\nimport empData from \"../EmpData.json\"\n\nconst Chart = () => {\n    const levelColor = randomcolor();\n    let params = useParams();\n    let OrgChartArray = [];\n    let head =[];\n\n    const ReportingPeople = (EmpName) => {\n      if(JSON.parse(window.sessionStorage.getItem(EmpName))){\n        // let ReportingArray = window.sessionStorage.getItem(EmpName);\n        // console.log(ReportingArray);\n        return JSON.parse(window.sessionStorage.getItem(EmpName));\n      }\n  \n      let ReportingPeopleArr = [];\n      let match = false;\n      for(let i=0; i<empData.length; i++){\n        let matching =false;\n        if(!match && (empData[i].reports_to).includes(EmpName) ){  //checking for a match\n          ReportingPeopleArr.push(empData[i]);\n          match = true;\n          matching = true;\n        }else if(match && (empData[i].reports_to).includes(EmpName) ){ //after having match all the reporting employee will be in group\n          ReportingPeopleArr.push(empData[i]);\n          matching = true;\n        }\n  \n        if(match && !matching){  //when the sequence of reporters broken then return the array\n          window.sessionStorage.setItem(EmpName, JSON.stringify(ReportingPeopleArr));\n          // console.log(JSON.parse(window.sessionStorage.getItem(EmpName)));\n          console.log(ReportingPeopleArr);\n          return ReportingPeopleArr;\n        }\n  \n      }\n      return ReportingPeopleArr;\n\n    }\n    if(params.Emp === \"default\"){\n         head = [\n            {\n            \"name\": \"Srinivasan Gopal\",\n            \"emp_id\": \"0001\",\n            \"role\": \"Chief Executive Officer\",\n            \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\",\n        }];\n\n        const Presidents = [\n            {\n                \"name\": \"Vasan Sampath\",\n                \"reports_to\": \"Srinivasan Gopal\",\n                \"emp_id\": \"0011\",\n                \"DP\": \"/sites/default/files/2021-07/chris-gayle_0.png\",\n                \"role\": \"President\"\n                },\n                {\n                \"name\": \"Mukund Devarajan\",\n                \"reports_to\": \"Srinivasan Gopal\",\n                \"emp_id\": \"0012\",\n                \"DP\": \"/sites/default/files/2021-07/rishabh-rajendra-pant_0.png\",\n                \"role\": \"Senior Vice President\"\n                },\n                {\n                \"name\": \"Vijay Ramanan\",\n                \"reports_to\": \"Srinivasan Gopal\",\n                \"emp_id\": \"0013\",\n                \"DP\": \"/sites/default/files/2021-07/rohit-sharma.png\",\n                \"role\": \"Senior Vice President\"\n                }\n        ]\n        window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Presidents));\n\n    }else{\n      head = JSON.parse(window.sessionStorage.getItem(\"emp\"));\n      let EmpName = head[0].name;\n      window.sessionStorage.setItem(\"Reporting\", JSON.stringify(ReportingPeople(EmpName)));\n    \n    }\n    console.log( params.Emp);\n    return (\n      <div className=\"org-tree\">\n  \n      <Card data={head} />\n   </div>\n   \n    )\n}\n\nexport default Chart;\n\nconst Card = (props) => {\n  const levelColor = randomcolor();\n  console.log(props);\n\n  const newChart  = (Emp) => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.setItem(\"emp\", JSON.stringify(EmpArr))\n    console.log(JSON.parse(window.sessionStorage.getItem(\"emp\")));\n    console.log(JSON.parse(Emp).name.length);\n    window.location.href = \"/OrgChart/\" + JSON.parse(Emp).name.length;\n    // console.log(JSON.parse(EmpArr));\n    // setnewRender(true)\n  //  return  <Chart data={JSON.parse(Emp)} ></Chart>\n  }\n\n  return (\n    <>\n      {props.data ? \n    <ul>\n    \n      {props.data.map((item) => (\n        <Fragment key={item.name}>\n          <li>\n            <div className=\"OrgCard\"  onClick={() => newChart(JSON.stringify(item))}>\n              <div className=\"image\">\n                {console.log(item)}\n                {console.log(props.data.length)}\n                <img src={`https://dev-employeeportal.pantheonsite.io/${item.DP}`}   alt=\"Profile\"\n                  style={{ borderColor: levelColor }}></img>\n              </div>\n              <div className=\"OrgCard-body\">\n                <h4 className=\"OrgCard-body-h4\">{item.name}</h4>\n                <p className=\"OrgCard-body-p\">{item.role}</p>\n              </div>\n              <div></div>\n            </div>\n            {props.data.length === 1 ? <Card data={JSON.parse(window.sessionStorage.getItem(\"Reporting\"))} /> : <></>}\n          </li>\n        </Fragment>\n      ))}\n    </ul>\n    :<></>}\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}