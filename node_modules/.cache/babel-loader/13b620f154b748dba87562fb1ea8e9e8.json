{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Wheel from \"./Wheel\";\nimport Skills from \"./Skills\";\nimport he from \"he\";\nimport { Carousel } from 'react-bootstrap';\nimport config from '../config';\nimport '../components/styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n   padding:5%;\n    overflow:hidden;\n    font-family: Montserrat;\n    width:100%\n    height: 250vh;\n    background-color: #282828;\n    color: white;\n}`; // #ffebcc;\n\n_c = Container;\nconst Left = styled.div`\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.3rem;\n  }\n`;\n_c2 = Left;\nconst Right = styled.div`\n  display: -webkit-box;\n  margin: 0;\n  padding: 0;\n  img {\n    padding-right: 0;\n    margin-right: -10px;\n    right: 0;\n  }\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    position: relative;\n    font-size: 1.3rem;\n    left: 25%;\n  }\n`;\n_c3 = Right;\nconst Heading = styled.h1`\n\n  margin-bottom:2%;\n  font-weight: 700;\n  font-size: 2rem;\n  text-align:center;\n`;\n_c4 = Heading;\nconst Row = styled.div`\n  text-align: left;\n  justify-between: space-between;\n  display: flex;\n  align-items: center;\n  width:85%;\n  max-width: 100%;\n\n  @media screen and (max-width: 670) {\n    width: 100%;\n  }\n  @media screen and (min-width: 1100) {\n    max-width: 100%;\n    width: 100%;\n  }\n`;\n_c5 = Row;\nconst fetchURL = config.drupal_url + '/Taxonomy/Projects';\nconst fetchSkill = config.drupal_url + '/Taxonomy/Skills';\n\nconst Projects = ({\n  project\n}) => {\n  _s();\n\n  // let count = 1;\n  const [projectData, setProjectData] = useState([]);\n  const [skillData, setSkillData] = useState([]);\n  useEffect(() => {\n    const fetchFuntion = async () => {\n      let data, data1;\n      data = await fetch(fetchURL);\n      data1 = await fetch(fetchSkill);\n      let res = await data.json();\n      setProjectData(res);\n      res = await data1.json();\n      setSkillData(res);\n    };\n\n    fetchFuntion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      id: \"Categories\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Projects and Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Left, {\n          id: \"top_left\",\n          children: project && project.map((x, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: he.decode(x.project_description.replace(/<[^>]+>/g, \"\")).split(\"....,\").map((projectDesc, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: projectDesc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Right, {\n          id: \"top_right\",\n          children: [\" \", projectData && /*#__PURE__*/_jsxDEV(Wheel, {\n            id: \"projects\",\n            card: projectData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Left, {\n          id: \"bottom_left\",\n          children: /*#__PURE__*/_jsxDEV(Skills, {\n            id: \"skills\",\n            skill: skillData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Right, {\n          id: \"bottom_right\",\n          children: project && project.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: x.skills_description.split(\"....,\").map((skillsDesc, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: skillsDesc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Acheivements\",\n      className: \"Achievments-container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Achievements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        variant: \"dark\",\n        className: \"Achievements\",\n        children: project && project[1].Achievements.split(\"....,\").map((x, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Achievement_text\",\n            children: [\"\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\\u200B\", x.split(\"---\")[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            style: {\n              zIndex: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#e16428',\n                zIndex: \"0\"\n              },\n              children: x.split(\"---\")[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Projects, \"UCMziykSLaqDbIJ7p+dBxrnf2eI=\");\n\n_c6 = Projects;\nexport default Projects;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Left\");\n$RefreshReg$(_c3, \"Right\");\n$RefreshReg$(_c4, \"Heading\");\n$RefreshReg$(_c5, \"Row\");\n$RefreshReg$(_c6, \"Projects\");","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Projects.js"],"names":["React","useEffect","useState","styled","Wheel","Skills","he","Carousel","config","Container","div","Left","Right","Heading","h1","Row","fetchURL","drupal_url","fetchSkill","Projects","project","projectData","setProjectData","skillData","setSkillData","fetchFuntion","data","data1","fetch","res","json","map","x","index","decode","project_description","replace","split","projectDesc","skills_description","skillsDesc","Achievements","zIndex","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Wheel from \"./Wheel\";\nimport Skills from \"./Skills\";\nimport he from \"he\";\nimport { Carousel } from 'react-bootstrap';\nimport config from '../config';\nimport '../components/styles/style.css';\nconst Container = styled.div`\n   padding:5%;\n    overflow:hidden;\n    font-family: Montserrat;\n    width:100%\n    height: 250vh;\n    background-color: #282828;\n    color: white;\n}`;\n// #ffebcc;\nconst Left = styled.div`\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    font-size: 1.3rem;\n  }\n`;\n\nconst Right = styled.div`\n  display: -webkit-box;\n  margin: 0;\n  padding: 0;\n  img {\n    padding-right: 0;\n    margin-right: -10px;\n    right: 0;\n  }\n  h1 {\n    color: #939191;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  p {\n    position: relative;\n    font-size: 1.3rem;\n    left: 25%;\n  }\n`;\nconst Heading = styled.h1`\n\n  margin-bottom:2%;\n  font-weight: 700;\n  font-size: 2rem;\n  text-align:center;\n`;\n\nconst Row = styled.div`\n  text-align: left;\n  justify-between: space-between;\n  display: flex;\n  align-items: center;\n  width:85%;\n  max-width: 100%;\n\n  @media screen and (max-width: 670) {\n    width: 100%;\n  }\n  @media screen and (min-width: 1100) {\n    max-width: 100%;\n    width: 100%;\n  }\n`;\nconst fetchURL = config.drupal_url+'/Taxonomy/Projects';\nconst fetchSkill= config.drupal_url+'/Taxonomy/Skills';\n\nconst Projects = ({ project }) => {\n  // let count = 1;\n  const [projectData, setProjectData] = useState([]);\n  const [skillData, setSkillData] = useState([]);\n  useEffect(() => {\n    const fetchFuntion = async () => {\n      let data,data1\n      data = await fetch(fetchURL);\n      data1= await fetch(fetchSkill);\n        let res = await data.json();\n        setProjectData(res);\n         res = await data1.json();\n        setSkillData(res);\n    };\n    fetchFuntion();\n  }, []);\n\n  return (\n    <>\n      <Container id=\"Categories\">\n        <Heading>Projects and Skills</Heading>\n        <Row>\n          <Left id=\"top_left\">\n            {project &&\n              project.map((x, index) => (\n                <p key={index}>\n                  {he.decode(x.project_description.replace(/<[^>]+>/g, \"\")).split(\"....,\").map((projectDesc, index) => (\n                    <p>{projectDesc}</p>\n                   \n                  ))}\n                </p>\n              ))}\n          </Left>\n          <Right id=\"top_right\">\n            {\" \"}\n            {projectData && <Wheel id=\"projects\" card={projectData}></Wheel>}\n          </Right>\n        </Row>\n        <Row>\n          <Left id=\"bottom_left\">\n            <Skills id=\"skills\" skill={skillData}></Skills>\n          </Left>\n          <Right id=\"bottom_right\">\n            {project &&\n              project.map((x, index) => (\n                <div key={index}>{x.skills_description.split(\"....,\").map((skillsDesc, index) => (\n                  <p>{skillsDesc}</p>\n                 \n                ))}\n                </div>\n              ))}\n          </Right>\n        </Row>\n      </Container>\n      <div id=\"Acheivements\" className=\"Achievments-container\">\n      <Heading>Achievements</Heading>\n\n\n        <Carousel variant=\"dark\"  className=\"Achievements\">\n        {project && project[1].Achievements.split(\"....,\").map((x, index) => (\n          <Carousel.Item>\n           \n            <div className=\"Achievement_text\">\n            ​​​​​​​​{(x.split(\"---\"))[0]}\n            </div>\n            <Carousel.Caption style={{ zIndex:\"0\" }}>\n              {/* <h3>Achievement {count++}</h3> */}\n              <p style={{ color: '#e16428', zIndex:\"0\" }}>{(x.split(\"---\"))[1]}</p>\n            </Carousel.Caption>\n          </Carousel.Item>\n              ))}\n         </Carousel>\n      </div>\n    </>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}