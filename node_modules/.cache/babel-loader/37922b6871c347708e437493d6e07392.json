{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/utility.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport config from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function utility() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"utility\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\nexport const EmployeeApi = () => {\n  _s();\n\n  const fetchURL = config.drupal_url + '/Employees';\n  const [items, setItems] = useState();\n  useEffect(() => {\n    const getItems = () => fetch(fetchURL).then(res => res.json());\n\n    getItems().then(data => setItems(data));\n  }, [fetchURL, setItems]);\n  return items;\n};\n\n_s(EmployeeApi, \"H7xGRC8bQBn4QeoZ9iIz2rALY5A=\");\n\n_c = EmployeeApi;\nexport const UserApi = () => {\n  _s2();\n\n  const fetchURL = config.drupal_url + '/users';\n  const [items, setItems] = useState(null);\n  useEffect(() => {\n    const getItems = () => fetch(fetchURL).then(res => res.json());\n\n    getItems().then(data => setItems(data));\n  }, [fetchURL]);\n  console.log(items);\n\n  if (items) {\n    window.sessionStorage.setItem(\"user\", items[0]);\n    window.sessionStorage.setItem(\"userName\", items[0].name);\n    window.sessionStorage.setItem(\"userLoginId\", items[0].uid);\n  }\n\n  return items;\n};\n\n_s2(UserApi, \"x+Cx8sed8V0E5BJyEWTTQ3NrzAs=\");\n\n_c2 = UserApi;\nexport const useFetch = () => {\n  _s3();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDetails = useCallback(async (url, resultData) => {\n    setLoading(true);\n\n    try {\n      const result = await fetch(url, {\n        method: \"GET\"\n      });\n\n      if (!result.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      let data = await result.json();\n\n      if (data != null) {\n        setLoading(false);\n        setError(null);\n      } else if (data.length === 0) {\n        throw new Error(\"Centers Not Available!\");\n      }\n\n      resultData(data);\n    } catch (error) {\n      setError(error.message + \"\");\n      setLoading(false);\n    }\n  }, []);\n  return [loading, fetchDetails, error];\n};\n\n_s3(useFetch, \"TiU+wJgUFouyXtOSwTSglQWfWno=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmployeeApi\");\n$RefreshReg$(_c2, \"UserApi\");","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/utility.js"],"names":["React","useEffect","useState","config","utility","EmployeeApi","fetchURL","drupal_url","items","setItems","getItems","fetch","then","res","json","data","UserApi","console","log","window","sessionStorage","setItem","name","uid","useFetch","loading","setLoading","error","setError","fetchDetails","useCallback","url","resultData","result","method","ok","Error","length","message"],"mappings":"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","sourcesContent":["import React,{useEffect,useState}  from \"react\";\nimport config from './config';\n\n\n\nexport default function utility() {\n    return (\n        <div>\n            utility\n        </div>\n    )\n}\n\nexport const EmployeeApi = () =>{\n    const fetchURL = config.drupal_url+'/Employees';\n    const [items, setItems] = useState();\n  \n    useEffect(() => {\n      const getItems = () => fetch(fetchURL).then(res => res.json());\n       getItems().then(data => setItems(data));\n    }, [fetchURL,setItems]);\n\n    return items;\n}\n\nexport const UserApi = () =>{\n    const fetchURL = config.drupal_url+'/users';\n    const [items, setItems] = useState(null);\n  \n    useEffect(() => {\n      const getItems = () => fetch(fetchURL).then(res => res.json());\n       getItems().then(data => setItems(data));\n    }, [fetchURL]);\n    \n    console.log(items);\n    if(items){\n     window.sessionStorage.setItem(\"user\", items[0]);\n     window.sessionStorage.setItem(\"userName\", items[0].name);\n     window.sessionStorage.setItem(\"userLoginId\", items[0].uid);\n    }\n\n    return items;\n}\n\nexport const useFetch = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    const fetchDetails = useCallback(async (url, resultData) => {\n    setLoading(true);\n    try {\n    const result = await fetch(url, {\n    method: \"GET\",\n    });\n    if (!result.ok) {\n    throw new Error(\"Request failed!\");\n    }\n    \n    let data = await result.json();\n    if (data != null) {\n    setLoading(false);\n    setError(null);\n    } else if (data.length === 0) {\n    throw new Error(\"Centers Not Available!\");\n    }\n    resultData(data);\n    } catch (error) {\n    setError(error.message + \"\");\n    setLoading(false);\n    }\n    }, []);\n    return [loading, fetchDetails, error];\n   };"]},"metadata":{},"sourceType":"module"}