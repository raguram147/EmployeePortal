{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config'; // import Typography from '@material-ui/core/Typography';\n\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueText = value => {\n      return `${value}`;\n    };\n\n    this.handleChange = (e, newValue) => {\n      console.log(newValue);\n      this.setState({\n        ExperienceMinMax: newValue\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow: 10,\n      //number of skill filters to be shown\n      projectsFilterShow: 10,\n      //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage: 1,\n      maxItemsPerPage: 6\n    };\n    this.SkillhandleChange = this.SkillhandleChange.bind(this);\n    this.ManagerHandleChange = this.ManagerHandleChange.bind(this);\n    this.PodsHandleChange = this.PodsHandleChange.bind(this);\n    this.ProjectsHandleChange = this.ProjectsHandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/lister/Employees').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/skills').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/manager').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/pod').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/projects').then(res => res.json())]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    });\n  }\n\n  SkillhandleChange(event) {\n    //skills checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({\n      checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n    }));\n  }\n\n  ManagerHandleChange(event) {\n    //managers checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({\n      checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n    }));\n  }\n\n  PodsHandleChange(event) {\n    //pods checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({\n      checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n    }));\n  }\n\n  ProjectsHandleChange(event) {\n    //project checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({\n      checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n    }));\n  }\n\n  showMoreSkills() {\n    this.state.skillsFilterShow === 10 ? this.setState({\n      skillsFilterShow: this.state.skillsApi.length,\n      skillsExpanded: true\n    }) : this.setState({\n      skillsFilterShow: 10,\n      skillsExpanded: false\n    });\n  }\n\n  showMoreProjects() {\n    this.state.projectsFilterShow === 10 ? this.setState({\n      projectsFilterShow: this.state.projectsApi.length,\n      projectsExpanded: true\n    }) : this.setState({\n      projectsFilterShow: 10,\n      projectsExpanded: false\n    });\n  }\n\n  changePage(direction) {\n    if (direction == 'back') {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    } else if (direction == 'next') {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  render() {\n    let Employees = this.state.Employees; // let experienceMin, experienceMax;\n\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let primaryskillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let skillsFilterShowCust = this.state.skillsFilterShow;\n    this.state.filteredEmployee = [];\n    console.log(this.state.checkedItemsSkills);\n    console.log(ManagersChecked);\n    console.log(this.state.skillsApi);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reqForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Enter name or Id:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: this.myChangeHandler,\n            className: \"InputtextField\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Experience-overview\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Experience: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", this.state.ExperienceMinMax[0], \" - \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"  \", this.state.ExperienceMinMax[1], \" years\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"experienceSlider\",\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              defaultValue: [0, 25],\n              value: this.ExperienceMinMax,\n              onChange: this.handleChange,\n              valueLabelDisplay: \"auto\",\n              \"aria-labelledby\": \"range-slider\",\n              getAriaValueText: this.valueText,\n              step: 1,\n              min: 0,\n              max: 45\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Skills :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"CheckboxesTable\",\n              children: [this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      value: item.name.toLowerCase(),\n                      onChange: this.SkillhandleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 27\n                    }, this), \" \", item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"showMore\",\n                onClick: this.showMoreSkills,\n                children: this.state.skillsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"show less\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"show more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Managers :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"CheckboxesTable\",\n              children: this.state.MangersApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      value: item.name.toLowerCase(),\n                      onChange: this.ManagerHandleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this), \" \", item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Pods :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"CheckboxesTable\",\n              children: this.state.PodsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      value: item.name.toLowerCase(),\n                      onChange: this.PodsHandleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 27\n                    }, this), \" \", item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"projects :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"CheckboxesTable\",\n              children: [this.state.projectsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      value: item.name.toLowerCase(),\n                      onChange: this.ProjectsHandleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 27\n                    }, this), \" \", item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)), this.state.projectsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"showMore\",\n                onClick: this.showMoreProjects,\n                children: this.state.projectsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"show less\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"show more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this) : console.log(\"less products\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: (() => {\n          var experienceMatch = false;\n          var primarySkillsMatch = false;\n          var projectsMatch = false;\n          var nameMatch = false;\n          var podsMatch = false;\n          var managerMatch = false; //experience checking: whether the emp has meet the req experience of customer\n\n          if (parseInt(x.Experience) >= expMinReq && parseInt(x.Experience) <= expMaxReq) {\n            experienceMatch = true;\n          } //name checking: whether the emp has matched the name\n\n\n          if (nameReq) {\n            if (x.name.toLowerCase().includes(nameReq.toLowerCase()) || x.Emp_id.includes(nameReq)) {\n              nameMatch = true; //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n            }\n          } else {\n            nameMatch = true; //if customer not typed anything\n          } // skills checking: whether the emp has req  skills\n\n\n          if (primaryskillsChecked.size > 0) {\n            const iterator1 = primaryskillsChecked.keys();\n            const iterator2 = primaryskillsChecked.values(); // console.log(iterator1.next().value);\n            // console.log(iterator2.next().value);\n\n            for (let i = 0; i < primaryskillsChecked.size; i++) {\n              if (iterator2.next().value) {\n                // console.log(iterator1.next().value);\n                let ps = iterator1.next().value; // console.log(ps);\n                // console.log(x.primary_skills.toLowerCase());\n\n                if (x.primary_skills.toLowerCase().includes(ps) || x.secndary_skills.toLowerCase().includes(ps)) {\n                  primarySkillsMatch = true; // console.log(\"true\");\n                } else {\n                  // console.log(\"false\");\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n                }\n              } else {\n                primarySkillsMatch = true;\n                console.log(iterator1.next().value); //don't uncomment this line if u want remove console.log\n              }\n            }\n          } else {\n            primarySkillsMatch = true;\n          } //managers Match\n\n\n          if (ManagersChecked.size > 0) {\n            const iterator1 = ManagersChecked.keys();\n            const iterator2 = ManagersChecked.values();\n            let oneManagerAtleastChecked = false;\n\n            for (let i = 0; i < ManagersChecked.size; i++) {\n              //   let selectedManger = iterator2.next().value;\n              if (iterator2.next().value && !managerMatch) {\n                oneManagerAtleastChecked = true;\n                let ps = iterator1.next().value; // console.log(ps);\n                // console.log(x.Manager.toLowerCase());\n\n                if (x.Manager.toLowerCase().includes(ps)) {\n                  managerMatch = true;\n                  console.log(\"true inside loop\");\n                } else {\n                  managerMatch = false;\n                }\n              } else if (!oneManagerAtleastChecked && i === ManagersChecked.size - 1) {\n                managerMatch = true;\n                console.log(iterator1.next().value); //don't comment this line if u want remove console.log\n              } else {\n                console.log(iterator1.next().value); //don't comment this line if u want remove console.log\n              }\n            }\n          } else {\n            managerMatch = true;\n          }\n\n          console.log(managerMatch); //pods Match\n\n          if (podsChecked.size > 0) {\n            const iterator1 = podsChecked.keys();\n            const iterator2 = podsChecked.values();\n            let onePodAtleastChecked = false;\n\n            for (let i = 0; i < podsChecked.size; i++) {\n              //   let selectedManger = iterator2.next().value;\n              if (iterator2.next().value && !podsMatch) {\n                onePodAtleastChecked = true;\n                let ps = iterator1.next().value;\n                console.log(ps);\n                console.log(x.Pod.toLowerCase());\n\n                if (x.Pod.toLowerCase().includes(ps)) {\n                  podsMatch = true;\n                  console.log(\"true inside loop\");\n                } else {\n                  podsMatch = false;\n                }\n              } else if (!onePodAtleastChecked && i === podsChecked.size - 1) {\n                podsMatch = true;\n                console.log(iterator1.next().value); //don't comment this line if u want remove console.log\n              } else {\n                console.log(iterator1.next().value); //don't comment this line if u want remove console.log\n              }\n            }\n          } else {\n            podsMatch = true;\n          }\n\n          console.log(podsMatch); //projects match\n\n          if (projectsChecked.size > 0) {\n            const iterator1 = projectsChecked.keys();\n            const iterator2 = projectsChecked.values();\n            let oneProjectAtleastChecked = false;\n\n            for (let i = 0; i < projectsChecked.size; i++) {\n              //   let selectedManger = iterator2.next().value;\n              if (iterator2.next().value && !projectsMatch) {\n                oneProjectAtleastChecked = true;\n                let ps = iterator1.next().value;\n                console.log(ps);\n                console.log(x.current_working_project.toLowerCase());\n\n                if (x.current_working_project.toLowerCase().includes(ps)) {\n                  projectsMatch = true;\n                  console.log(\"true inside loop\");\n                } else {\n                  projectsMatch = false;\n                }\n              } else if (!oneProjectAtleastChecked && i === projectsChecked.size - 1) {\n                projectsMatch = true;\n                console.log(iterator1.next().value); //don't comment this line if u want remove console.log\n              } else {\n                console.log(iterator1.next().value); //don't comment this line if u want remove console.log\n              }\n            }\n          } else {\n            projectsMatch = true;\n          }\n\n          console.log(projectsMatch);\n\n          if (experienceMatch && nameMatch && primarySkillsMatch && managerMatch && podsMatch && projectsMatch) {\n            this.state.filteredEmployee.push(x);\n          }\n        })()\n      }, void 0, false)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Employees\",\n        children: [this.state.filteredEmployee.length > 0 ? console.log(this.state.filteredEmployee.length) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: (() => {\n            //no result found\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: NoResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this);\n          })()\n        }, void 0, false), this.state.filteredEmployee.slice(this.state.currentPage * this.state.maxItemsPerPage - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: (() => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Employee-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost/${x.Profile_photo}`,\n                height: \"200\",\n                alt: \"profilephoto\",\n                className: \"profilephoto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Employee-description\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"Name\",\n                  children: x.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: x.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Manager: \", x.Manager]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Experience: \", x.Experience, \" years\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"Details-Btn\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: '/EmployeeDetails/' + x.Emp_id,\n                  children: \"Show Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 24\n            }, this);\n          })()\n        }, void 0, false))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.changePage('back'),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 8\n        }, this) : null, this.state.filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.changePage('next'),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 8\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","EmployeeView","constructor","props","valueText","value","handleChange","e","newValue","console","log","setState","ExperienceMinMax","myChangeHandler","event","nam","target","name","val","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","skills","skillsFilterShow","projectsFilterShow","checkedItemsSkills","Map","checkedItemsManager","checkedItemsPod","checkedItemsProjects","skillsExpanded","projectsExpanded","filteredEmployee","currentPage","maxItemsPerPage","SkillhandleChange","bind","ManagerHandleChange","PodsHandleChange","ProjectsHandleChange","showMoreSkills","showMoreProjects","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","isChecked","checked","item","prevState","set","length","changePage","direction","render","expMinReq","expMaxReq","nameReq","primaryskillsChecked","ManagersChecked","podsChecked","projectsChecked","skillsFilterShowCust","slice","map","toLowerCase","x","experienceMatch","primarySkillsMatch","projectsMatch","nameMatch","podsMatch","managerMatch","parseInt","Experience","includes","Emp_id","size","iterator1","keys","iterator2","values","i","next","ps","primary_skills","secndary_skills","oneManagerAtleastChecked","Manager","onePodAtleastChecked","Pod","oneProjectAtleastChecked","current_working_project","push","Profile_photo","role"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\n\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:6\n    }\n\n    this.SkillhandleChange = this.SkillhandleChange.bind(this);\n    this.ManagerHandleChange = this.ManagerHandleChange.bind(this);\n    this.PodsHandleChange = this.PodsHandleChange.bind(this);\n    this.ProjectsHandleChange = this.ProjectsHandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/lister/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/lister/Taxonomy/projects').then(res => res.json()),\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    })\n  }\n\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  SkillhandleChange(event) {   //skills checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n  }\n\n  ManagerHandleChange(event) {   //managers checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n  }\n\n  PodsHandleChange(event) {   //pods checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n  }\n\n  ProjectsHandleChange(event) {   //project checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n  }\n\n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n  changePage(direction) {\n    if (direction == 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction == 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n\n  render() {\n    let Employees = this.state.Employees;\n    // let experienceMin, experienceMax;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let primaryskillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    this.state.filteredEmployee = [];\n    console.log((this.state.checkedItemsSkills));\n    console.log((ManagersChecked));\n    console.log((this.state.skillsApi));\n\n\n    return (\n      <div className=\"filter-container\">\n        {/* different types of filters  */}\n        <div className=\"reqForm\">\n          <form >\n            <p className=\"filterName\">Enter name or Id:</p>\n            <input\n              type='text'\n              name='name'\n              onChange={this.myChangeHandler}\n              className=\"InputtextField\"\n            />\n\n            {/* Experience */}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n              />\n            </div>\n\n            {/*  skills */}\n            <p className=\"filterName\">Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.SkillhandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                <a className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </a>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\">Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.ManagerHandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.PodsHandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n    \n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.ProjectsHandleChange}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)? \n                  <a className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </a> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n          </form>\n        </div>\n\n    \n          {Employees.map(x => (\n            <>\n              {(\n                (() => {\n                  var experienceMatch = false;\n                  var primarySkillsMatch = false;\n                  var projectsMatch = false;\n                  var nameMatch = false;\n                  var podsMatch = false;\n                  var managerMatch = false;\n                  //experience checking: whether the emp has meet the req experience of customer\n                  if ((((parseInt(x.Experience)) >= expMinReq) && (parseInt(x.Experience) <= expMaxReq))) {\n                    experienceMatch = true;\n                  }\n\n                  //name checking: whether the emp has matched the name\n                  if (nameReq) {\n                    if (((x.name.toLowerCase()).includes(nameReq.toLowerCase())) || x.Emp_id.includes(nameReq)) {\n                      nameMatch = true;\n                      //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n                    } else {\n                      return <></>\n                    }\n                  } else {\n                    nameMatch = true;     //if customer not typed anything\n                  }\n\n                  // skills checking: whether the emp has req  skills\n\n                  if (primaryskillsChecked.size > 0) {\n                    const iterator1 = primaryskillsChecked.keys();\n                    const iterator2 = primaryskillsChecked.values();\n\n                    // console.log(iterator1.next().value);\n                    // console.log(iterator2.next().value);\n                    for (let i = 0; i < primaryskillsChecked.size; i++) {\n\n                      if (iterator2.next().value) {\n                        // console.log(iterator1.next().value);\n                        let ps = iterator1.next().value;\n                        // console.log(ps);\n                        // console.log(x.primary_skills.toLowerCase());\n\n                        if (((x.primary_skills.toLowerCase()).includes(ps)) || ((x.secndary_skills.toLowerCase()).includes(ps))) {\n\n                          primarySkillsMatch = true;\n                          // console.log(\"true\");\n                        } else {\n                          // console.log(\"false\");\n                          return (<></>);\n                        }\n\n                      } else {\n                        primarySkillsMatch = true;\n                        console.log(iterator1.next().value);  //don't uncomment this line if u want remove console.log\n                      }\n                    }\n                  } else {\n                    primarySkillsMatch = true;\n                  }\n\n                  //managers Match\n                  if (ManagersChecked.size > 0) {\n                    const iterator1 = ManagersChecked.keys();\n                    const iterator2 = ManagersChecked.values();\n                    let oneManagerAtleastChecked = false;\n                    for (let i = 0; i < ManagersChecked.size; i++) {\n                      //   let selectedManger = iterator2.next().value;\n                      if (iterator2.next().value && !managerMatch) {\n                        oneManagerAtleastChecked = true;\n                        let ps = iterator1.next().value;\n                        // console.log(ps);\n                        // console.log(x.Manager.toLowerCase());\n\n                        if (((x.Manager.toLowerCase()).includes(ps))) {\n\n                          managerMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          managerMatch = false;\n                        }\n\n                      } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {\n                        managerMatch = true;\n                        console.log(iterator1.next().value);  //don't comment this line if u want remove console.log\n                      } else {\n                        console.log(iterator1.next().value);//don't comment this line if u want remove console.log\n                      }\n                    }\n                  } else {\n                    managerMatch = true;\n                  }\n                  console.log(managerMatch);\n\n\n                  //pods Match\n                  if (podsChecked.size > 0) {\n                    const iterator1 = podsChecked.keys();\n                    const iterator2 = podsChecked.values();\n                    let onePodAtleastChecked = false;\n                    for (let i = 0; i < podsChecked.size; i++) {\n                      //   let selectedManger = iterator2.next().value;\n                      if (iterator2.next().value && !podsMatch) {\n                        onePodAtleastChecked = true;\n                        let ps = iterator1.next().value;\n                        console.log(ps);\n                        console.log(x.Pod.toLowerCase());\n\n                        if (((x.Pod.toLowerCase()).includes(ps))) {\n\n                          podsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          podsMatch = false;\n                        }\n\n                      } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) {\n                        podsMatch = true;\n                        console.log(iterator1.next().value);  //don't comment this line if u want remove console.log\n                      } else {\n                        console.log(iterator1.next().value);//don't comment this line if u want remove console.log\n                      }\n                    }\n                  } else {\n                    podsMatch = true;\n                  }\n                  console.log(podsMatch);\n\n\n                  //projects match\n                  if (projectsChecked.size > 0) {\n                    const iterator1 = projectsChecked.keys();\n                    const iterator2 = projectsChecked.values();\n                    let oneProjectAtleastChecked = false;\n                    for (let i = 0; i < projectsChecked.size; i++) {\n                      //   let selectedManger = iterator2.next().value;\n                      if (iterator2.next().value && !projectsMatch) {\n                        oneProjectAtleastChecked = true;\n                        let ps = iterator1.next().value;\n                        console.log(ps);\n                        console.log(x.current_working_project.toLowerCase());\n\n                        if (((x.current_working_project.toLowerCase()).includes(ps))) {\n\n                          projectsMatch = true;\n                          console.log(\"true inside loop\");\n                        } else {\n                          projectsMatch = false;\n                        }\n\n                      } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) {\n                        projectsMatch = true;\n                        console.log(iterator1.next().value);  //don't comment this line if u want remove console.log\n                      } else {\n                        console.log(iterator1.next().value);//don't comment this line if u want remove console.log\n                      }\n                    }\n                  } else {\n                    projectsMatch = true;\n                  }\n                  console.log(projectsMatch);\n\n\n\n\n                  if (experienceMatch && nameMatch && primarySkillsMatch && managerMatch && podsMatch && projectsMatch) {\n                    this.state.filteredEmployee.push(x);\n                  }\n                })()\n              )}\n            </>\n          ))\n          }\n    \n\n        {/* //displaying */}\n        <div className=\"Employees\">\n          {this.state.filteredEmployee.length>0 ? console.log(this.state.filteredEmployee.length):\n          <>\n          {(\n          (()=>{\n            //no result found\n            return(\n              <div className='list'>\n               <img src= {NoResult}></img>   \n              </div>\n              )})())\n          }\n          </>\n          }\n\n          {this.state.filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(x => (\n            <>\n              {(\n                (() => {\n                    return (\n                      (<div className=\"Employee-details\">\n                        <img src={`http://localhost/${x.Profile_photo}`}\n                          height='200' alt=\"profilephoto\"\n                          className=\"profilephoto\" />\n                        {/* {x.name} */}\n                        <div className=\"Employee-description\">\n                          <p className=\"Name\">{x.name}</p>\n                          {/* <p>{ x.Emp_id }</p> */}\n                          <p>{x.role}</p>\n                          <p>Manager: {x.Manager}</p>\n\n                          <p>Experience: {x.Experience} years</p>\n\n                        </div>\n                        <button className=\"Details-Btn\"><a href={'/EmployeeDetails/' + x.Emp_id}>Show Details</a></button>\n                      </div>)\n                    )\n                })()\n              )}\n            </>\n          ))\n          \n          } \n        </div>\n        <div>\n      {this.state.currentPage > 1 ?\n       <button onClick={() => this.changePage('back')}>Back</button>\n      : null}\n      {this.state.filteredEmployee.length  > this.state.currentPage * this.state.maxItemsPerPage ?\n       <button onClick={() => this.changePage('next')}>Next</button>\n      : null}\n     </div>\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}