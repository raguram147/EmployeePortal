{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config'; // import Checkbox from 'react';\n// import Link from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      skills: [],\n      name: '',\n      Experience: null,\n      PrimarySkill: '',\n      ExperienceManuallyMax: null,\n      ExperienceManuallyMin: null,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map()\n    };\n    this.handleChange = this.handleChange.bind(this); // this.handleSubmit = this.handleSubmit.bind(this);  \n  }\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/lister/Employees').then(res => res.json()), fetch(config.drupal_url + '/lister/Taxonomy/skills').then(res => res.json())]).then(([urlOneData, urlTwoData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData\n      });\n    });\n  }\n\n  handleChange(event) {\n    //skills checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({\n      checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n    }));\n  } // handleSubmit(event) {\n  //   console.log(this.state);\n  //   event.preventDefault();\n  // }\n\n\n  render() {\n    this.state.skillsApi.map(x => this.state.skills.push(x.name));\n    let Employees = this.state.Employees;\n    let experienceMin, experienceMax;\n    let expReq = this.state.Experience;\n    let nameReq = this.state.name;\n    let PrimarySkillReq = this.state.PrimarySkill;\n    let ExperienceManuallyMaxReq = this.state.ExperienceManuallyMax;\n    let ExperienceManuallyMinReq = this.state.ExperienceManuallyMin;\n    let primaryskillsChecked = this.state.checkedItemsSkills; // this.state.skills.filter(onlyUnique);removeusingSet(array)\n\n    console.log(this.state.checkedItemsSkills);\n\n    if (ExperienceManuallyMaxReq || ExperienceManuallyMinReq) {\n      //checking whether customer entered the custom experience or not\n      experienceMin = ExperienceManuallyMinReq;\n      experienceMax = ExperienceManuallyMaxReq;\n\n      if (!ExperienceManuallyMaxReq) {\n        experienceMax = 100;\n      } else if (!ExperienceManuallyMinReq) {\n        experienceMin = 0;\n      }\n    } else {\n      if (!expReq) {\n        experienceMin = 0;\n        experienceMax = 100;\n        console.log(expReq);\n      } else {\n        var exp = expReq.split(\"-\");\n        experienceMin = exp[0];\n        experienceMax = exp[1];\n      }\n    }\n\n    console.log(experienceMax);\n    console.log(experienceMin);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reqForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Enter name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: this.myChangeHandler,\n            className: \"InputtextField\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Experience :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"Experience\",\n            onChange: this.myChangeHandler,\n            value: \"0-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" 0 - 4 years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"Experience\",\n            onChange: this.myChangeHandler,\n            value: \"5-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" 5 - 7 years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"Experience\",\n            onChange: this.myChangeHandler,\n            value: \"8-10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" 8-10 years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"Experience\",\n            onChange: this.myChangeHandler,\n            value: \"11-15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"11-15 years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ExperienceManuallyMin\",\n            onChange: this.myChangeHandler,\n            className: \"experienceManuallyBox\",\n            placeholder: \"Min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ExperienceManuallyMax\",\n            onChange: this.myChangeHandler,\n            className: \"experienceManuallyBox\",\n            placeholder: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Skills :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"PrimarySkillsTableCB\",\n              children: this.state.skillsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      value: item.name.toLowerCase(),\n                      onChange: this.handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, this), \" \", item.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Employees\",\n        children: Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: (() => {\n            var experienceMatch = false;\n            var primarySkillsMatch = false;\n            var secondarySkillsMatch = false;\n            var nameMatch = false;\n            var idMatch = false;\n            var managerMatch = false; //experience checking: whether the emp has meet the req experience of customer\n\n            if (parseInt(x.Experience) >= experienceMin && parseInt(x.Experience) <= experienceMax) {\n              experienceMatch = true;\n            } //name checking: whether the emp has matched the name\n\n\n            if (nameReq) {\n              if (x.name.toLowerCase().includes(nameReq.toLowerCase())) {\n                nameMatch = true;\n              }\n            } else {\n              nameMatch = true; //if customer not typed anything\n            } //Primary skills checking: whether the emp has req primary skills\n\n\n            if (PrimarySkillReq) {\n              if (x.primary_skills.toLowerCase().includes(PrimarySkillReq.toLowerCase())) {\n                primarySkillsMatch = true;\n              }\n            } else {\n              primarySkillsMatch = true;\n            } // skills checking: whether the emp has req  skills\n\n\n            if (primaryskillsChecked.size > 0) {\n              const iterator1 = primaryskillsChecked.keys();\n              const iterator2 = primaryskillsChecked.values(); // console.log(iterator1.next().value);\n              // console.log(iterator2.next().value);\n\n              for (let i = 0; i < primaryskillsChecked.size; i++) {\n                if (iterator2.next().value) {\n                  // console.log(iterator1.next().value);\n                  let ps = iterator1.next().value;\n                  console.log(ps);\n                  console.log(x.primary_skills.toLowerCase());\n\n                  if (x.primary_skills.toLowerCase().includes(ps) || x.secndary_skills.toLowerCase().includes(ps)) {\n                    nameMatch = true;\n                    console.log(\"true\");\n                  } else {\n                    console.log(\"false\");\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n                  }\n                } else {\n                  console.log(iterator1.next().value); //don't uncomment this line if u want remove console.log\n                }\n              }\n            } else {\n              nameMatch = true;\n            }\n\n            if (experienceMatch && nameMatch && primarySkillsMatch) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Employee-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost/${x.Profile_photo}`,\n                  height: \"200\",\n                  alt: \"profilephoto\",\n                  className: \"profilephoto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Employee-description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"Name\",\n                    children: x.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: x.role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Manager: \", x.Manager]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Experience: \", x.Experience, \" years\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"Details-Btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: '/EmployeeDetails/' + x.Emp_id,\n                    children: \"Show Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 24\n              }, this);\n            }\n          })() // (( ((x.Experience) >= experienceMin) && ((x.Experience) <= experienceMax)) && ((nameReq === '') ? true : ((x.name.toLowerCase()).includes(nameReq)))\n          //   && ((PrimarySkillReq === '') ? true : ((x.primary_skills.toLowerCase()).includes(PrimarySkillReq)))) ?\n          // : (<></>)\n\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js"],"names":["React","Component","config","EmployeeView","constructor","props","myChangeHandler","event","nam","target","name","val","value","setState","state","Employees","skillsApi","skills","Experience","PrimarySkill","ExperienceManuallyMax","ExperienceManuallyMin","checkedItemsSkills","Map","checkedItemsManager","checkedItemsPod","handleChange","bind","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","isChecked","checked","item","prevState","set","render","map","x","push","experienceMin","experienceMax","expReq","nameReq","PrimarySkillReq","ExperienceManuallyMaxReq","ExperienceManuallyMinReq","primaryskillsChecked","console","log","exp","split","toLowerCase","experienceMatch","primarySkillsMatch","secondarySkillsMatch","nameMatch","idMatch","managerMatch","parseInt","includes","primary_skills","size","iterator1","keys","iterator2","values","i","next","ps","secndary_skills","Profile_photo","role","Manager","Emp_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config';\n// import Checkbox from 'react';\n// import Link from \"react\";\n\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],\n      skillsApi: [],\n      skills: [],\n      name: '',\n      Experience: null,\n      PrimarySkill: '',\n      ExperienceManuallyMax: null,\n      ExperienceManuallyMin: null,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map()\n    }\n\n    this.handleChange = this.handleChange.bind(this);  \n    // this.handleSubmit = this.handleSubmit.bind(this);  \n  }\n\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url+'/lister/Employees').then(res => res.json()),\n      fetch(config.drupal_url+'/lister/Taxonomy/skills').then(res => res.json())\n    ]).then(([urlOneData, urlTwoData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData\n      });\n    })\n  }\n\n\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  handleChange(event) {   //skills checkeditems change\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n  }\n\n  // handleSubmit(event) {\n  //   console.log(this.state);\n  //   event.preventDefault();\n  // }\n\n\n\n  render() {\n    this.state.skillsApi.map(x => this.state.skills.push(x.name))\n    let Employees = this.state.Employees;\n    let experienceMin, experienceMax;\n    let expReq = this.state.Experience;\n    let nameReq = this.state.name;\n    let PrimarySkillReq = this.state.PrimarySkill;\n    let ExperienceManuallyMaxReq = this.state.ExperienceManuallyMax;\n    let ExperienceManuallyMinReq = this.state.ExperienceManuallyMin;\n    let primaryskillsChecked = this.state.checkedItemsSkills;\n    // this.state.skills.filter(onlyUnique);removeusingSet(array)\n    console.log((this.state.checkedItemsSkills));\n    \n\n\n    if (ExperienceManuallyMaxReq || ExperienceManuallyMinReq) {  //checking whether customer entered the custom experience or not\n      experienceMin = ExperienceManuallyMinReq;\n      experienceMax = ExperienceManuallyMaxReq;\n      if (!ExperienceManuallyMaxReq) {\n        experienceMax = 100;\n      } else if (!ExperienceManuallyMinReq) {\n        experienceMin = 0\n      }\n    } else {\n      if (!expReq) {\n        experienceMin = 0;\n        experienceMax = 100;\n        console.log(expReq);\n      } else {\n        var exp = expReq.split(\"-\");\n        experienceMin = exp[0];\n        experienceMax = exp[1];\n      }\n    }\n\n    console.log(experienceMax);\n    console.log(experienceMin);\n    return (\n      <div className=\"filter-container\">\n        <div className=\"reqForm\">\n          <form >\n            <p className=\"filterName\">Enter name:</p>\n            <input\n              type='text'\n              name='name'\n              onChange={this.myChangeHandler}\n              className=\"InputtextField\" \n            />\n            <p className=\"filterName\">Experience :</p>\n            {/* <input\n            type='text'\n            name='Exp'\n            onChange={this.myChangeHandler}\n          /> */}\n            <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"0-4\" />\n            <label > 0 - 4 years</label><br />\n            <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"5-7\" />\n            <label > 5 - 7 years</label><br />\n            <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"8-10\" />\n            <label> 8-10 years</label><br />\n            <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"11-15\" />\n            <label >11-15 years</label>\n\n            <input\n              type='text'\n              name='ExperienceManuallyMin'\n              onChange={this.myChangeHandler}\n              className='experienceManuallyBox'\n              placeholder='Min'\n            />\n            <input\n              type='text'\n              name='ExperienceManuallyMax'\n              onChange={this.myChangeHandler}\n              className='experienceManuallyBox'\n              placeholder='Max'\n            />\n\n            {/* Priamry skills */}\n            <p className=\"filterName\">Skills :</p>\n         \n\n            <form >\n            <table className=\"PrimarySkillsTableCB\">\n              {\n                \n                this.state.skillsApi.map(item => (\n                  <tr>\n                    <td>\n                  {/* <li>? */}\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        value={item.name.toLowerCase()}\n                        onChange={this.handleChange}\n                      /> {item.name}\n                    </label>\n                   {/* </li> */}\n                   </td>\n                   </tr>\n                ))\n              }\n            </table>\n            </form>\n            {/* <input\n              type='text'\n              name='PrimarySkill'\n              onChange={this.myChangeHandler}\n              className=\"InputtextField\" \n            /> */}\n\n\n          </form>\n        </div>\n\n        <div className=\"Employees\">\n          {Employees.map(x => (\n            <>\n              {(\n                (() => {\n                  var experienceMatch = false;\n                  var primarySkillsMatch = false;\n                  var secondarySkillsMatch = false;\n                  var nameMatch = false;\n                  var idMatch = false;\n                  var managerMatch = false;\n                  //experience checking: whether the emp has meet the req experience of customer\n                  if ((((parseInt(x.Experience)) >= experienceMin) && (parseInt(x.Experience) <= experienceMax))) {\n                    experienceMatch = true;\n                  }\n\n                  //name checking: whether the emp has matched the name\n                  if (nameReq) {\n                    if (((x.name.toLowerCase()).includes(nameReq.toLowerCase()))) {\n                      nameMatch = true;\n                    }\n                  } else {\n                    nameMatch = true;     //if customer not typed anything\n                  }\n\n                  //Primary skills checking: whether the emp has req primary skills\n                  if (PrimarySkillReq) {\n                    if ((x.primary_skills.toLowerCase()).includes(PrimarySkillReq.toLowerCase())) {\n                      primarySkillsMatch = true;\n                    }\n                  } else {\n                    primarySkillsMatch = true;\n                  }\n\n                  // skills checking: whether the emp has req  skills\n                 \n                  if (primaryskillsChecked.size >0) {\n                    const iterator1 = primaryskillsChecked.keys();\n                    const iterator2 = primaryskillsChecked.values();\n                \n                    // console.log(iterator1.next().value);\n                    // console.log(iterator2.next().value);\n                    for(let i=0; i<primaryskillsChecked.size;i++){\n                      \n                        if(iterator2.next().value){\n                          // console.log(iterator1.next().value);\n                          let ps = iterator1.next().value;\n                          console.log(ps);\n                          console.log(x.primary_skills.toLowerCase());\n                       \n                          if ( ((x.primary_skills.toLowerCase()).includes(ps)) || ((x.secndary_skills.toLowerCase()).includes(ps))) {\n                            \n                            nameMatch = true;\n                            console.log(\"true\");\n                          }else{\n                            console.log(\"false\");\n                            return (<></>);\n                          }\n\n                        }else{\n                          console.log(iterator1.next().value);  //don't uncomment this line if u want remove console.log\n                        }\n                    }\n                  } else {\n                    nameMatch = true;\n                  }\n\n\n                  if (experienceMatch && nameMatch && primarySkillsMatch) {\n\n                    return (\n                      (<div className=\"Employee-details\">\n                        {/* {nameReq}\n                        { console.log(x.Experience )} \n                        { console.log(experienceMin )} \n                        { console.log(experienceMax )}  */}\n\n                        <img src={`http://localhost/${x.Profile_photo}`}\n                          height='200' alt=\"profilephoto\"\n                          className=\"profilephoto\" />\n                        {/* {x.name} */}\n                        <div className=\"Employee-description\">\n                          <p className=\"Name\">{x.name}</p>\n                          {/* <p>{ x.Emp_id }</p> */}\n                          <p>{x.role}</p>\n                          <p>Manager: {x.Manager}</p>\n\n                          <p>Experience: {x.Experience} years</p>\n\n                        </div>\n                        <button className=\"Details-Btn\"><a href={'/EmployeeDetails/' + x.Emp_id}>Show Details</a></button>\n                        {/* <Link to={{ pathname: \"/EmployeeView\", state: '{ x.Emp_id }' }}>{ x.name }</Link> */}\n\n                      </div>)\n                    )\n                  }\n                })()\n                // (( ((x.Experience) >= experienceMin) && ((x.Experience) <= experienceMax)) && ((nameReq === '') ? true : ((x.name.toLowerCase()).includes(nameReq)))\n                //   && ((PrimarySkillReq === '') ? true : ((x.primary_skills.toLowerCase()).includes(PrimarySkillReq)))) ?\n\n                // : (<></>)\n              )}\n\n\n            </>\n          ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}