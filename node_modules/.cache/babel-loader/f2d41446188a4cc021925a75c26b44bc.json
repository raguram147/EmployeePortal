{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/FilterPage.css'; // import '../CSS/FilterPage.css';\n\nimport config from '../config';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from '@material-ui/core/Slider'; // import { Slider } from 'material-ui-slider';\n// import Link from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class FilterPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event.target.mark);\n      this.setState({\n        value: event.target.mark\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n      console.log(\"val: \" + val);\n    };\n\n    this.state = {\n      Employees: [],\n      name: '',\n      Experience: null,\n      PrimarySkill: '',\n      ExperienceManuallyMax: null,\n      ExperienceManuallyMin: null,\n      value: ''\n    };\n  }\n\n  valuetext(value) {\n    return `${value}`;\n  }\n\n  componentDidMount() {\n    fetch(config.drupal_url + '/lister/Employees').then(x => x.json()).then(x => this.setState({\n      Employees: x\n    }));\n  }\n\n  render() {\n    // let ExpMinMax = this.state.value;\n    let Employees = this.state.Employees;\n    let experienceMin, experienceMax;\n    let expReq = this.state.Experience;\n    let nameReq = this.state.name;\n    let PrimarySkillReq = this.state.PrimarySkill;\n    let ExperienceManuallyMaxReq = this.state.ExperienceManuallyMax;\n    let ExperienceManuallyMinReq = this.state.ExperienceManuallyMin;\n    console.log(Employees);\n\n    if (ExperienceManuallyMaxReq || ExperienceManuallyMinReq) {\n      //checking whether customer entered the custom experience or not\n      experienceMin = ExperienceManuallyMinReq;\n      experienceMax = ExperienceManuallyMaxReq;\n\n      if (!ExperienceManuallyMaxReq) {\n        experienceMax = 100;\n      } else if (!ExperienceManuallyMinReq) {\n        experienceMin = 0;\n      }\n    } else {\n      if (!expReq) {\n        experienceMin = 0;\n        experienceMax = 100;\n        console.log(expReq);\n      } else {\n        var exp = expReq.split(\"-\");\n        experienceMin = exp[0];\n        experienceMax = exp[1];\n      }\n    }\n\n    console.log(experienceMax);\n    console.log(experienceMin);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reqForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Enter name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Experience :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              id: \"range-slider\",\n              gutterBottom: true,\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              name: \"value\",\n              defaultValue: (3, 40) // value={this.state.value}\n              ,\n              mark: this.state.value,\n              onChange: this.handleChange,\n              valueLabelDisplay: \"auto\",\n              \"aria-labelledby\": \"range-slider\",\n              getAriaValueText: this.valuetext\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"filterName\",\n            children: \"Primary Skill :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"PrimarySkill\",\n            onChange: this.myChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Employees\",\n        children: Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: parseInt(x.Experience) >= experienceMin && parseInt(x.Experience) <= experienceMax && ( //experience\n          nameReq === '' ? true : x.name.toLowerCase().includes(nameReq.toLowerCase())) //name\n          && (PrimarySkillReq === '' ? true : x.Primary_skills.toLowerCase().includes(PrimarySkillReq.toLowerCase())) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Employee-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost/${x.Profile_photo}`,\n              height: \"200\",\n              alt: \"profilephoto\",\n              className: \"profilephoto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Employee-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"Name\",\n                children: x.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: x.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Manager: \", x.Manager]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Experience: \", x.Experience, \" years\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Details-Btn\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: '/EmployeeDetails/' + x.Emp_id,\n                children: \"Show Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 20\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/lister-home/src/components/FilterPage.js"],"names":["React","Component","config","makeStyles","Typography","Slider","FilterPage","constructor","props","handleChange","event","console","log","target","mark","setState","value","myChangeHandler","nam","name","val","state","Employees","Experience","PrimarySkill","ExperienceManuallyMax","ExperienceManuallyMin","valuetext","componentDidMount","fetch","drupal_url","then","x","json","render","experienceMin","experienceMax","expReq","nameReq","PrimarySkillReq","ExperienceManuallyMaxReq","ExperienceManuallyMinReq","exp","split","map","parseInt","toLowerCase","includes","Primary_skills","Profile_photo","role","Manager","Emp_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\n// import '../CSS/FilterPage.css';\nimport config from '../config';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from '@material-ui/core/Slider';\n// import { Slider } from 'material-ui-slider';\n// import Link from \"react\";\n\n\n\nexport default class FilterPage extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],\n      name: '',\n      Experience: null,\n      PrimarySkill: '',\n      ExperienceManuallyMax: null,\n      ExperienceManuallyMin: null,\n      value: ''\n    }\n  }\n  valuetext(value) {\n    return `${value}`;\n  }\n\n   handleChange = (event) => {\n       console.log(event.target.mark);\n    this.setState({value: event.target.mark});\n  };\n  componentDidMount() {\n    fetch(config.drupal_url + '/lister/Employees')\n      .then(x => x.json())\n      .then(x => this.setState({ Employees: x }));\n  }\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n    console.log(\"val: \"+val);\n  }\n\n  \n  render() {\n    // let ExpMinMax = this.state.value;\n    let Employees = this.state.Employees;\n    let experienceMin, experienceMax;\n    let expReq = this.state.Experience;\n    let nameReq = (this.state.name);\n    let PrimarySkillReq = this.state.PrimarySkill;\n    let ExperienceManuallyMaxReq = this.state.ExperienceManuallyMax;\n    let ExperienceManuallyMinReq = this.state.ExperienceManuallyMin;\n\n    console.log(Employees);\n\n    if (ExperienceManuallyMaxReq || ExperienceManuallyMinReq) {  //checking whether customer entered the custom experience or not\n      experienceMin = ExperienceManuallyMinReq;\n      experienceMax = ExperienceManuallyMaxReq;\n      if (!ExperienceManuallyMaxReq) {\n        experienceMax = 100;\n      } else if (!ExperienceManuallyMinReq) {\n        experienceMin = 0\n      }\n    } else {\n      if (!expReq) {\n        experienceMin = 0;\n        experienceMax = 100;\n        console.log(expReq);\n      } else {\n        var exp = expReq.split(\"-\");\n        experienceMin = exp[0];\n        experienceMax = exp[1];\n      }\n    }\n\n    console.log(experienceMax);\n    console.log(experienceMin);\n    return (\n      <div className=\"filter-container\">\n        <div className=\"reqForm\">\n          <form >\n            <p className=\"filterName\">Enter name:</p>\n            <input\n              type='text'\n              name='name'\n              onChange={this.myChangeHandler}\n            />\n            <p className=\"filterName\">Experience :</p>\n            {/* <input\n            type='text'\n            name='Exp'\n            onChange={this.myChangeHandler}\n          /> */}\n            {/* <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"0-4\" />\n            <label > 0 - 4 years</label><br />\n            <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"5-7\" />\n            <label > 5 - 7 years</label><br />\n            <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"8-10\" />\n            <label> 8-10 years</label><br />\n            <input type=\"radio\" name=\"Experience\" onChange={this.myChangeHandler} value=\"11-15\" />\n            <label >11-15 years</label>\n\n            <input\n              type='text'\n              name='ExperienceManuallyMin'\n              onChange={this.myChangeHandler}\n              className='experienceManuallyBox'\n              placeholder='Min'\n            />\n            <input\n              type='text'\n              name='ExperienceManuallyMax'\n              onChange={this.myChangeHandler}\n              className='experienceManuallyBox'\n              placeholder='Max'\n            /> */}\n            <div >\n              <Typography id=\"range-slider\" gutterBottom>\n                Experience \n                {/* <p>{this.state.value[0]} </p>\n                {this.state.value[1]} */}\n              </Typography>\n              <Slider\n              name='value'\n              defaultValue={3,40}\n                // value={this.state.value}\n                mark={this.state.value}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valuetext}\n              />\n            </div>\n\n            <p className=\"filterName\">Primary Skill :</p>\n            <input\n              type='text'\n              name='PrimarySkill'\n              onChange={this.myChangeHandler}\n            />\n          </form>\n        </div>\n\n        <div className=\"Employees\">\n\n          {Employees.map(x => (\n            <>\n              {/* { console.log(x.Experience )}  */}\n              {(\n                ((((parseInt(x.Experience)) >= experienceMin) && (parseInt(x.Experience) <= experienceMax))    //experience\n                  && ((nameReq === '') ? true : ((x.name.toLowerCase()).includes(nameReq.toLowerCase())))                     //name\n                  && ((PrimarySkillReq === '') ? true : ((x.Primary_skills.toLowerCase()).includes(PrimarySkillReq.toLowerCase())))\n\n                ) ?\n                  (<div className=\"Employee-details\">\n\n                    {/* {nameReq}*/}\n                    {/* { console.log(x.Experience )} \n              { console.log(experienceMin )} \n              { console.log(experienceMax )}  */}\n\n                    <img src={`http://localhost/${x.Profile_photo}`}\n                      height='200' alt=\"profilephoto\"\n                      className=\"profilephoto\" />\n                    {/* {x.name} */}\n                    <div className=\"Employee-description\">\n                      <p className=\"Name\">{x.name}</p>\n                      {/* <p>{ x.Emp_id }</p> */}\n                      <p>{x.role}</p>\n                      <p>Manager: {x.Manager}</p>\n\n                      <p>Experience: {x.Experience} years</p>\n\n                    </div>\n                    <button className=\"Details-Btn\"><a href={'/EmployeeDetails/' + x.Emp_id}>Show Details</a></button>\n                    {/* <Link to={{ pathname: \"/EmployeeView\", state: '{ x.Emp_id }' }}>{ x.name }</Link> */}\n\n                  </div>)\n                  : (<></>)\n              )}\n\n\n            </>\n          ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}