{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport randomcolor from \"randomcolor\";\nimport { useParams } from \"react-router-dom\";\nimport \"../components/styles/orgChartStyles.css\";\nimport empData from \"../EmpData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const levelColor = randomcolor();\n  let params = useParams();\n  let OrgChartArray = [];\n  let head = [];\n\n  if (params.Emp === \"default\") {\n    head = [{\n      \"name\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0001\",\n      \"role\": \"Chief Executive Officer\",\n      \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\"\n    }];\n    const Presidents = [{\n      \"name\": \"Vasan Sampath\",\n      \"reports_to\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0011\",\n      \"DP\": \"/sites/default/files/2021-07/chris-gayle_0.png\",\n      \"role\": \"President\"\n    }, {\n      \"name\": \"Mukund Devarajan\",\n      \"reports_to\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0012\",\n      \"DP\": \"/sites/default/files/2021-07/rishabh-rajendra-pant_0.png\",\n      \"role\": \"Senior Vice President\"\n    }, {\n      \"name\": \"Vijay Ramanan\",\n      \"reports_to\": \"Srinivasan Gopal\",\n      \"emp_id\": \"0013\",\n      \"DP\": \"/sites/default/files/2021-07/rohit-sharma.png\",\n      \"role\": \"Senior Vice President\"\n    }]; // OrgChartArray.push(head);\n    // OrgChartArray.push(Presidents);\n\n    window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Presidents)); // window.sessionStorage\n  } else {\n    head = params.Emp;\n    let EmpName = head[0].name;\n\n    if (JSON.parse(window.sessionStorage.getItem(EmpName))) {\n      // let ReportingArray = window.sessionStorage.getItem(EmpName);\n      // console.log(ReportingArray);\n      return JSON.parse(window.sessionStorage.getItem(EmpName));\n    }\n\n    let ReportingPeopleArr = [];\n    let match = false;\n\n    for (let i = 0; i < empData.length; i++) {\n      let matching = false;\n\n      if (!match && empData[i].reports_to.includes(EmpName)) {\n        //checking for a match\n        ReportingPeopleArr.push(empData[i]);\n        match = true;\n        matching = true;\n      } else if (match && empData[i].reports_to.includes(EmpName)) {\n        //after having match all the reporting employee will be in group\n        ReportingPeopleArr.push(empData[i]);\n        matching = true;\n      }\n\n      if (match && !matching) {\n        //when the sequence of reporters broken then return the array\n        window.sessionStorage.setItem(EmpName, JSON.stringify(ReportingPeopleArr)); // console.log(JSON.parse(window.sessionStorage.getItem(EmpName)));\n\n        console.log(ReportingPeopleArr);\n        return ReportingPeopleArr;\n      }\n    }\n\n    return ReportingPeopleArr;\n  }\n\n  console.log(params.Emp); // params.Emp\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"org-tree\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      data: head\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Chart, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Chart;\nexport default Chart;\n\nconst Card = props => {\n  const levelColor = randomcolor();\n  console.log(props);\n\n  const newChart = Emp => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.setItem(\"emp\", JSON.stringify(EmpArr));\n    console.log(JSON.parse(window.sessionStorage.getItem(\"emp\")));\n    window.location.href = \"/OrgChart/\" + JSON.parse(window.sessionStorage.getItem(\"emp\")); // console.log(JSON.parse(EmpArr));\n    // setnewRender(true)\n    //  return  <Chart data={JSON.parse(Emp)} ></Chart>\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.data.map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"OrgCard\",\n            onClick: () => newChart(JSON.stringify(item)),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image\",\n              children: [console.log(item), console.log(props.data.length), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://dev-employeeportal.pantheonsite.io/${item.DP}`,\n                alt: \"Profile\",\n                style: {\n                  borderColor: levelColor\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"OrgCard-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"OrgCard-body-h4\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"OrgCard-body-p\",\n                children: item.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), props.data.length === 1 ? /*#__PURE__*/_jsxDEV(Card, {\n            data: JSON.parse(window.sessionStorage.getItem(\"Reporting\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Card;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/components/Chart.js"],"names":["React","Fragment","useState","randomcolor","useParams","empData","Chart","levelColor","params","OrgChartArray","head","Emp","Presidents","window","sessionStorage","setItem","JSON","stringify","EmpName","name","parse","getItem","ReportingPeopleArr","match","i","length","matching","reports_to","includes","push","console","log","Card","props","newChart","EmpArr","location","href","data","map","item","DP","borderColor","role"],"mappings":"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","sourcesContent":["import React, { Fragment , useState} from \"react\";\nimport randomcolor from \"randomcolor\";\nimport {\n    useParams,\n  } from \"react-router-dom\";\nimport \"../components/styles/orgChartStyles.css\"\nimport empData from \"../EmpData.json\"\n\nconst Chart = () => {\n    const levelColor = randomcolor();\n    let params = useParams();\n    let OrgChartArray = [];\n    let head =[];\n    if(params.Emp === \"default\"){\n         head = [\n            {\n            \"name\": \"Srinivasan Gopal\",\n            \"emp_id\": \"0001\",\n            \"role\": \"Chief Executive Officer\",\n            \"DP\": \"/sites/default/files/default_images/DefaultDp_0.png\",\n        }];\n\n        const Presidents = [\n            {\n                \"name\": \"Vasan Sampath\",\n                \"reports_to\": \"Srinivasan Gopal\",\n                \"emp_id\": \"0011\",\n                \"DP\": \"/sites/default/files/2021-07/chris-gayle_0.png\",\n                \"role\": \"President\"\n                },\n                {\n                \"name\": \"Mukund Devarajan\",\n                \"reports_to\": \"Srinivasan Gopal\",\n                \"emp_id\": \"0012\",\n                \"DP\": \"/sites/default/files/2021-07/rishabh-rajendra-pant_0.png\",\n                \"role\": \"Senior Vice President\"\n                },\n                {\n                \"name\": \"Vijay Ramanan\",\n                \"reports_to\": \"Srinivasan Gopal\",\n                \"emp_id\": \"0013\",\n                \"DP\": \"/sites/default/files/2021-07/rohit-sharma.png\",\n                \"role\": \"Senior Vice President\"\n                }\n        ]\n\n       \n        // OrgChartArray.push(head);\n        // OrgChartArray.push(Presidents);\n        window.sessionStorage.setItem(\"Reporting\", JSON.stringify(Presidents));\n        // window.sessionStorage\n    }else{\n      head = params.Emp;\n      let EmpName = head[0].name;\n\n      if(JSON.parse(window.sessionStorage.getItem(EmpName))){\n        // let ReportingArray = window.sessionStorage.getItem(EmpName);\n        // console.log(ReportingArray);\n        return JSON.parse(window.sessionStorage.getItem(EmpName));\n      }\n  \n      let ReportingPeopleArr = [];\n      let match = false;\n      for(let i=0; i<empData.length; i++){\n        let matching =false;\n        if(!match && (empData[i].reports_to).includes(EmpName) ){  //checking for a match\n          ReportingPeopleArr.push(empData[i]);\n          match = true;\n          matching = true;\n        }else if(match && (empData[i].reports_to).includes(EmpName) ){ //after having match all the reporting employee will be in group\n          ReportingPeopleArr.push(empData[i]);\n          matching = true;\n        }\n  \n        if(match && !matching){  //when the sequence of reporters broken then return the array\n          window.sessionStorage.setItem(EmpName, JSON.stringify(ReportingPeopleArr));\n          // console.log(JSON.parse(window.sessionStorage.getItem(EmpName)));\n          console.log(ReportingPeopleArr);\n          return ReportingPeopleArr;\n        }\n  \n      }\n  \n      return ReportingPeopleArr;\n    }\n    console.log( params.Emp);\n    // params.Emp\n    return (\n      <div className=\"org-tree\">\n  \n      <Card data={head} />\n   </div>\n   \n    )\n}\n\nexport default Chart;\n\nconst Card = (props) => {\n  const levelColor = randomcolor();\n  console.log(props);\n\n  const newChart  = (Emp) => {\n    let EmpArr = [];\n    EmpArr.push(JSON.parse(Emp));\n    window.sessionStorage.setItem(\"emp\", JSON.stringify(EmpArr))\n    console.log(JSON.parse(window.sessionStorage.getItem(\"emp\")));\n    window.location.href = \"/OrgChart/\" + JSON.parse(window.sessionStorage.getItem(\"emp\"));\n    // console.log(JSON.parse(EmpArr));\n    // setnewRender(true)\n  //  return  <Chart data={JSON.parse(Emp)} ></Chart>\n  }\n\n  return (\n    <>\n    <ul>\n      {props.data.map((item) => (\n        <Fragment key={item.name}>\n          <li>\n            <div className=\"OrgCard\"  onClick={() => newChart(JSON.stringify(item))}>\n              <div className=\"image\">\n                {console.log(item)}\n                {console.log(props.data.length)}\n                <img src={`https://dev-employeeportal.pantheonsite.io/${item.DP}`}   alt=\"Profile\"\n                  style={{ borderColor: levelColor }}></img>\n              </div>\n              <div className=\"OrgCard-body\">\n                <h4 className=\"OrgCard-body-h4\">{item.name}</h4>\n                <p className=\"OrgCard-body-p\">{item.role}</p>\n              </div>\n              <div></div>\n            </div>\n            {props.data.length === 1 ? <Card data={JSON.parse(window.sessionStorage.getItem(\"Reporting\"))} /> : <></>}\n          </li>\n        </Fragment>\n      ))}\n    </ul>\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}