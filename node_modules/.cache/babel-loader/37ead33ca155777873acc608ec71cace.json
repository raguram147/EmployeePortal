{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/style.css';\nimport config from '../config'; // import Typography from '@material-ui/core/Typography';\n\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif';\nimport Chip from '@material-ui/core/Chip';\nimport empGroup from '../assets/group-orange.png';\nimport { TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport { EmployeeCard } from './EmployeeCard';\nimport { Scrollbars } from 'react-custom-scrollbars';\n/*\n  state variables and api data: 20-68 lines\n  onchange functions\n  filtering employees based on filter logic\n  req Data initializations\n  filters (Dynamic checkboxes,slider,input) html\n  displaying tags,emp cards,next/back button\n*/\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueText = value => {\n      return `${value}`;\n    };\n\n    this.handleChange = (e, newValue) => {\n      console.log(newValue);\n      this.setState({\n        ExperienceMinMax: newValue\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleDelete = chipToDelete => () => {\n      console.log(chipToDelete);\n      let nam = chipToDelete.filterField;\n      var isChecked = false;\n      var item = chipToDelete.value;\n      ;\n      console.log(nam);\n      console.log(isChecked);\n\n      if (nam === 'skill') {\n        this.setState(prevState => ({\n          checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n        console.log(event.target);\n      } else if (nam === 'manager') {\n        this.setState(prevState => ({\n          checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'pod') {\n        this.setState(prevState => ({\n          checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'project') {\n        this.setState(prevState => ({\n          checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'hobby') {\n        this.setState(prevState => ({\n          checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      }\n    };\n\n    this.state = {\n      Employees: [],\n      //api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      hobbiesApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow: 10,\n      //number of skill filters to be shown\n      projectsFilterShow: 10,\n      //number of projects filters to be shown\n      managersFilterShow: 10,\n      podsFilterShow: 10,\n      HobbiesFilterShow: 10,\n      skillsExpanded: false,\n      projectsExpanded: false,\n      managersExpanded: false,\n      podsExpanded: false,\n      hobbiesExpanded: false,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      checkedItemsHobbies: new Map(),\n      ExperienceMinMax: [0, 25],\n      filteredEmployee: [],\n      currentPage: 1,\n      maxItemsPerPage: 12,\n      checkedItemsTag: [],\n      skillsCheckBox: false\n    };\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n    this.showMoreManagers = this.showMoreManagers.bind(this);\n    this.showMorePods = this.showMorePods.bind(this);\n    this.showMoreHobbies = this.showMoreHobbies.bind(this);\n  } //fetching data from api\n\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/Employees').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/skills').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/manager').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/pod').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/projects').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/hobbies').then(res => res.json())]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData, urlSixData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData,\n        hobbiesApi: urlSixData\n      });\n    });\n  } //Experience slider on change calls the fxn and changes the values\n\n\n  CheckBoxhandleChange(event) {\n    //skills,project,pod,manager checkeditems change \n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n\n    if (nam === 'checkedItemsSkills') {\n      this.setState(prevState => ({\n        checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n      })); // document.getElementById(item).checked = true;\n    } else if (nam === 'checkedItemsManager') this.setState(prevState => ({\n      checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n    }));else if (nam === 'checkedItemsPod') this.setState(prevState => ({\n      checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n    }));else if (nam === 'checkedItemsProjects') this.setState(prevState => ({\n      checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n    }));else if (nam === 'checkedItemsHobbies') this.setState(prevState => ({\n      checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked)\n    }));\n  } //show more skill filter option \n\n\n  showMoreSkills() {\n    this.state.skillsFilterShow === 10 ? this.setState({\n      skillsFilterShow: this.state.skillsApi.length,\n      skillsExpanded: true\n    }) : this.setState({\n      skillsFilterShow: 10,\n      skillsExpanded: false\n    });\n  } //show more filter filter option \n\n\n  showMoreProjects() {\n    this.state.projectsFilterShow === 10 ? this.setState({\n      projectsFilterShow: this.state.projectsApi.length,\n      projectsExpanded: true\n    }) : this.setState({\n      projectsFilterShow: 10,\n      projectsExpanded: false\n    });\n  } //show more filter filter option this.state.managersExpanded\n\n\n  showMoreManagers() {\n    this.state.managersFilterShow === 10 ? this.setState({\n      managersFilterShow: this.state.MangersApi.length,\n      managersExpanded: true\n    }) : this.setState({\n      managersFilterShow: 10,\n      managersExpanded: false\n    });\n  } //show more filter filter option this.state.managersExpanded\n\n\n  showMorePods() {\n    this.state.podsFilterShow === 10 ? this.setState({\n      podsFilterShow: this.state.PodsApi.length,\n      podsExpanded: true\n    }) : this.setState({\n      podsFilterShow: 10,\n      podsExpanded: false\n    });\n  }\n\n  showMoreHobbies() {\n    this.state.HobbiesFilterShow === 10 ? this.setState({\n      HobbiesFilterShow: this.state.hobbiesApi.length,\n      hobbiesExpanded: true\n    }) : this.setState({\n      HobbiesFilterShow: 10,\n      hobbiesExpanded: false\n    });\n  } //next or back to view other emp cards if exists\n\n\n  changePage(direction) {\n    console.log(direction);\n\n    if (direction === 'back') {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    } else if (direction === 'next') {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  AllCheckedItems() {\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbiesChecked = this.state.checkedItemsHobbies;\n    let checkedItemsTagList = []; //storing all the checked items in array to display as tags\n\n    if (skillsChecked.size > 0 || ManagersChecked.size > 0 || podsChecked.size > 0 || projectsChecked.size > 0 || HobbiesChecked.size > 0) {\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        let ps = iteratorS1.next().value;\n\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = {\n            value: ps,\n            filterField: \"skill\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"manager\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"pod\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"project\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorH1 = HobbiesChecked.keys();\n      const iteratorH2 = HobbiesChecked.values();\n\n      for (let i = 0; i < HobbiesChecked.size; i++) {\n        let ps = iteratorH1.next().value;\n\n        if (iteratorH2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"hobby\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n    }\n\n    return checkedItemsTagList;\n  } //if u click cancel on the selected tags the checkboxes should be unchecked auto\n\n\n  //checking the empdetails matches \n  //experience match employee's\n  CheckExperience(employeeExperience, expMinReq, expMaxReq) {\n    //experience checking: whether the emp has meet the req experience of customer\n    if (parseInt(employeeExperience) >= expMinReq && parseInt(employeeExperience) <= expMaxReq) {\n      return true;\n    }\n\n    return false;\n  } //name checking: whether the emp has matched the name\n\n\n  checkNameId(empName, empId, NameIdReq) {\n    if (NameIdReq) {\n      if (empName.toLowerCase().includes(NameIdReq.toLowerCase()) || empId.includes(NameIdReq)) {\n        return true; //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true; //if customer not typed anything\n    }\n  } //checking skills match\n\n\n  checkSkillsMatch(skillsChecked, empPrimarySkills, empSecondarySkills) {\n    if (skillsChecked.size > 0) {\n      //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n\n        if (selectedSkill) {\n          if (!(empPrimarySkills.toLowerCase().includes(skillName) || empSecondarySkills.toLowerCase().includes(skillName))) {\n            return false; //if one is not in the profile then return false\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return true;\n    }\n  } //managers Match checking\n\n\n  checkManagerMatch(ManagersChecked, EmpManager) {\n    let managerMatch = false;\n\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let selectedManger = iterator2.next().value;\n        let selectedMangerName = iterator1.next().value;\n\n        if (selectedManger && !managerMatch) {\n          //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n\n          if (EmpManager.toLowerCase().includes(selectedMangerName)) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n        } else if (!oneManagerAtleastChecked && i === ManagersChecked.size - 1) {\n          //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n\n      if (managerMatch) return true;else return false;\n    } else {\n      return true;\n    }\n  } //check pods Match\n\n\n  checkPodsMatch(podsChecked, empPod) {\n    let podsMatch = false;\n\n    if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) {\n          //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n\n          if (empPod.toLowerCase().includes(selectedPodName)) {\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n        } else if (!onePodAtleastChecked && i === podsChecked.size - 1) {\n          //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n\n      if (podsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  } //projects match\n\n\n  checkProjectMatch(projectsChecked, empProject) {\n    let projectsMatch = false;\n\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let selectedProject = iterator2.next().value;\n        let selectedProjectName = iterator1.next().value;\n\n        if (selectedProject && !projectsMatch) {\n          //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n\n          if (empProject.toLowerCase().includes(selectedProjectName)) {\n            projectsMatch = true; // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n        } else if (!oneProjectAtleastChecked && i === projectsChecked.size - 1) {\n          //if all the previous checked projects are unchecked\n          projectsMatch = true;\n        }\n      }\n\n      if (projectsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  } //Hobbies match\n\n\n  checkHobbiesMatch(hobbiesChecked, empHobbies) {\n    if (hobbiesChecked.size > 0) {\n      //atleast one hobby is checked\n      const iterator1 = hobbiesChecked.keys();\n      const iterator2 = hobbiesChecked.values();\n\n      for (let i = 0; i < hobbiesChecked.size; i++) {\n        //checking all the checked hobby the emp has or not\n        let selectedHobby = iterator2.next().value;\n        let hobbyName = iterator1.next().value;\n\n        if (selectedHobby) {\n          if (!empHobbies.toLowerCase().includes(hobbyName)) {\n            return false; //if one is not in the profile then return false\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  filteringTheEmp() {\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbbiesChecked = this.state.checkedItemsHobbies;\n    let filteredEmployee = [];\n    Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: (() => {\n        if (this.CheckExperience(x.Experience, expMinReq, expMaxReq) && this.checkNameId(x.name, x.Emp_id, nameReq) && this.checkPodsMatch(podsChecked, x.Pod) && this.checkProjectMatch(projectsChecked, x.current_working_project) && this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills) && this.checkManagerMatch(ManagersChecked, x.Manager) && this.checkHobbiesMatch(HobbbiesChecked, x.hobbies)) {\n          filteredEmployee.push(x);\n        }\n      })()\n    }, void 0, false));\n    return filteredEmployee;\n  }\n\n  render() {\n    //initialisig the state variables for manipulations \n    let skillsFilterShowCust = this.state.skillsFilterShow;\n    let podsFilterShowCust = this.state.podsFilterShow;\n    let managersFilterShowCust = this.state.managersFilterShow;\n    let projectsFilterShowCust = this.state.projectsFilterShow;\n    let HobbiesFilterShowCust = this.state.HobbiesFilterShow;\n    let filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems(); //getting all the checked items and storing to make tags\n    // console.log(checkedItemsTagList);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        id: \"filterPage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reqForm\",\n          children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n            style: {\n              height: \"100%\"\n            },\n            onScroll: this.handleScroll,\n            autoHide: true // Hide delay in ms\n            ,\n            autoHideTimeout: 1000 // Duration for hide animation in ms.\n            ,\n            autoHideDuration: 200,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"Enter name or Id\",\n                variant: \"outlined\",\n                style: {\n                  marginTop: \"15px\",\n                  padding: \"10.5px 8px\",\n                  paddingLeft: 0\n                },\n                type: \"text\",\n                name: \"name\",\n                onChange: this.myChangeHandler,\n                className: \"InpcheckedItemsSkillsuttextField\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Experience-overview\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"filterName\",\n                  children: \"Experience: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"exp-display\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\" \", this.state.ExperienceMinMax[0], \" - \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"  \", this.state.ExperienceMinMax[1], \" years\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"experienceSlider\",\n                children: /*#__PURE__*/_jsxDEV(Slider, {\n                  defaultValue: [0, 25],\n                  value: this.ExperienceMinMax,\n                  onChange: this.handleChange,\n                  valueLabelDisplay: \"auto\",\n                  \"aria-labelledby\": \"range-slider\",\n                  getAriaValueText: this.valueText,\n                  step: 1,\n                  min: 0,\n                  max: 45,\n                  style: {\n                    color: \"#ff8c4b\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Skills :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          name: \"checkedItemsSkills\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 550,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 21\n                  }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreSkills,\n                    children: this.state.skillsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 21\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Managers :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.MangersApi.slice(0, managersFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsManager\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase(),\n                          className: \"checkboxes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 582,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 581,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 21\n                  }, this)), this.state.MangersApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreManagers,\n                    children: this.state.managersExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 23\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 19\n                  }, this) : console.log(\"less managers\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Pods :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.PodsApi.slice(0, podsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsPod\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 617,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 616,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 21\n                  }, this)), this.state.PodsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMorePods,\n                    children: this.state.podsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 21\n                  }, this) : console.log(\"less pods\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"projects :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.projectsApi.slice(0, projectsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsProjects\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 652,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 651,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 650,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 21\n                  }, this)), this.state.projectsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreProjects,\n                    children: this.state.projectsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 668,\n                      columnNumber: 23\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 19\n                  }, this) : console.log(\"less products\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Hobbies :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.hobbiesApi.slice(0, HobbiesFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsHobbies\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 687,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 686,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 685,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 21\n                  }, this)), this.state.hobbiesApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreHobbies,\n                    children: this.state.hobbiesExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 703,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 21\n                  }, this) : console.log(\"less hobbies\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbars, {\n          style: {\n            height: 600\n          },\n          onScroll: this.handleScroll,\n          autoHide: true // Hide delay in ms\n          ,\n          autoHideTimeout: 1000 // Duration for hide animation in ms.\n          ,\n          autoHideDuration: 200,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Employees\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tagsAndEmpCountContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selectedTags\",\n                children: checkedItemsTagList.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: (() => {\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(Chip, {\n                        label: x.value // icon={icon}\n                        ,\n                        onDelete: this.handleDelete(x),\n                        className: \"tags\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 738,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false);\n                  })()\n                }, void 0, false))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filtered-emp-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"no of emp\",\n                  src: empGroup,\n                  style: {\n                    height: \"25%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empCount\",\n                  children: filteredEmployee.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 13\n            }, this), filteredEmployee.length > 0 ? console.log(filteredEmployee.length) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: (() => {\n                return (\n                  /*#__PURE__*/\n                  //no result found\n                  _jsxDEV(\"div\", {\n                    className: \"NoResult\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      alt: \"No result found\",\n                      src: NoResult\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 765,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 25\n                  }, this)\n                );\n              })()\n            }, void 0, false), filteredEmployee.slice(this.state.currentPage * this.state.maxItemsPerPage - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: (() => {\n                return /*#__PURE__*/_jsxDEV(EmployeeCard, {\n                  employee: employee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 27\n                }, this);\n              })()\n            }, void 0, false))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextBack\",\n        children: [this.state.currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('back'),\n          children: \"\\xAB Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 13\n        }, this) : null, filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('next'),\n          children: \"Next \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","Chip","empGroup","TextField","event","EmployeeCard","Scrollbars","EmployeeView","constructor","props","valueText","value","handleChange","e","newValue","console","log","setState","ExperienceMinMax","myChangeHandler","nam","target","name","val","handleDelete","chipToDelete","filterField","isChecked","item","prevState","checkedItemsSkills","set","document","getElementById","checked","checkedItemsManager","checkedItemsPod","checkedItemsProjects","checkedItemsHobbies","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","hobbiesApi","skills","skillsFilterShow","projectsFilterShow","managersFilterShow","podsFilterShow","HobbiesFilterShow","skillsExpanded","projectsExpanded","managersExpanded","podsExpanded","hobbiesExpanded","Map","filteredEmployee","currentPage","maxItemsPerPage","checkedItemsTag","skillsCheckBox","CheckBoxhandleChange","bind","showMoreSkills","showMoreProjects","showMoreManagers","showMorePods","showMoreHobbies","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","urlSixData","length","changePage","direction","AllCheckedItems","skillsChecked","ManagersChecked","podsChecked","projectsChecked","HobbiesChecked","checkedItemsTagList","size","iteratorS1","keys","iteratorS2","values","i","ps","next","tagsCheckedObj","push","iteratorM1","iteratorM2","iteratorP1","iteratorP2","iteratorPr1","iteratorPr2","iteratorH1","iteratorH2","CheckExperience","employeeExperience","expMinReq","expMaxReq","parseInt","checkNameId","empName","empId","NameIdReq","toLowerCase","includes","checkSkillsMatch","empPrimarySkills","empSecondarySkills","iterator1","iterator2","selectedSkill","skillName","checkManagerMatch","EmpManager","managerMatch","oneManagerAtleastChecked","selectedManger","selectedMangerName","checkPodsMatch","empPod","podsMatch","onePodAtleastChecked","selectedPod","selectedPodName","checkProjectMatch","empProject","projectsMatch","oneProjectAtleastChecked","selectedProject","selectedProjectName","checkHobbiesMatch","hobbiesChecked","empHobbies","selectedHobby","hobbyName","filteringTheEmp","nameReq","HobbbiesChecked","map","x","Experience","Emp_id","Pod","current_working_project","primary_skills","secndary_skills","Manager","hobbies","render","skillsFilterShowCust","podsFilterShowCust","managersFilterShowCust","projectsFilterShowCust","HobbiesFilterShowCust","height","handleScroll","marginTop","padding","paddingLeft","color","slice","count","employee"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/style.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\nimport Chip from '@material-ui/core/Chip';\nimport empGroup from '../assets/group-orange.png'\nimport {  TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport { EmployeeCard } from './EmployeeCard';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\n/*\n  state variables and api data: 20-68 lines\n  onchange functions\n  filtering employees based on filter logic\n  req Data initializations\n  filters (Dynamic checkboxes,slider,input) html\n  displaying tags,emp cards,next/back button\n*/\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],//api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      hobbiesApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      managersFilterShow:10,\n      podsFilterShow:10,\n      HobbiesFilterShow:10,\n      skillsExpanded: false,\n      projectsExpanded: false,\n      managersExpanded: false,\n      podsExpanded:false,\n      hobbiesExpanded:false,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      checkedItemsHobbies: new Map(),\n      ExperienceMinMax: [0, 25],\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:12,\n      checkedItemsTag : [],\n      skillsCheckBox: false\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n    this.showMoreManagers = this.showMoreManagers.bind(this);\n    this.showMorePods = this.showMorePods.bind(this);\n    this.showMoreHobbies = this.showMoreHobbies.bind(this);\n  }\n  //fetching data from api\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/projects').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/hobbies').then(res => res.json()),\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData, urlSixData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData,\n        hobbiesApi: urlSixData\n      });\n    })\n  }\n\n  //Experience slider on change calls the fxn and changes the values\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  //all types of input text field changes will call the fxn and changes the value\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change \n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'checkedItemsSkills'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      // document.getElementById(item).checked = true;\n    }\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n    else if(nam === 'checkedItemsHobbies')\n      this.setState(prevState => ({ checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked) }));\n  }\n\n  //show more skill filter option \n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  //show more filter filter option \n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n   //show more filter filter option this.state.managersExpanded\n   showMoreManagers(){\n    this.state.managersFilterShow === 10 ? (\n      this.setState({ managersFilterShow: this.state.MangersApi.length, managersExpanded: true })\n    ) : (\n      this.setState({ managersFilterShow: 10, managersExpanded: false })\n    )\n  }\n\n  //show more filter filter option this.state.managersExpanded\n  showMorePods() {\n    this.state.podsFilterShow === 10 ? (\n      this.setState({ podsFilterShow: this.state.PodsApi.length, podsExpanded: true })\n    ) : (\n      this.setState({ podsFilterShow: 10, podsExpanded: false })\n    )\n  }\n\n  showMoreHobbies(){\n    this.state.HobbiesFilterShow === 10 ? (\n      this.setState({ HobbiesFilterShow: this.state.hobbiesApi.length, hobbiesExpanded: true })\n    ) : (\n      this.setState({ HobbiesFilterShow: 10, hobbiesExpanded: false })\n    )\n\n  }\n\n  //next or back to view other emp cards if exists\n  changePage(direction) {\n    console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n  AllCheckedItems(){\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbiesChecked = this.state.checkedItemsHobbies;\n    let checkedItemsTagList=[];\n    //storing all the checked items in array to display as tags\n    if(skillsChecked.size >0 || ManagersChecked.size >0  ||  podsChecked.size >0  || projectsChecked.size>0 || HobbiesChecked.size>0){\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n     \n      for (let i = 0; i < skillsChecked.size ; i++) {\n        let ps = iteratorS1.next().value;\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = { value: ps, filterField: \"skill\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n         \n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"manager\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"pod\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"project\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorH1 = HobbiesChecked.keys();\n      const iteratorH2 = HobbiesChecked.values();\n      for (let i = 0; i < HobbiesChecked.size; i++) {\n        let ps = iteratorH1.next().value;\n        if (iteratorH2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"hobby\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n  }\n  return checkedItemsTagList;\n\n  }\n\n  //if u click cancel on the selected tags the checkboxes should be unchecked auto\n  handleDelete = (chipToDelete) => () => {\n    console.log(chipToDelete);\n\n    let nam = chipToDelete.filterField;\n    var isChecked = false;\n    var item = chipToDelete.value;;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'skill'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n      console.log(event.target);\n    }\n    else if(nam === 'manager'){\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'pod'){\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'project'){\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'hobby'){\n      this.setState(prevState => ({ checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n  };\n\n  //checking the empdetails matches \n  //experience match employee's\n  CheckExperience(employeeExperience,expMinReq, expMaxReq){\n     //experience checking: whether the emp has meet the req experience of customer\n    if ((((parseInt(employeeExperience)) >= expMinReq) && (parseInt(employeeExperience) <= expMaxReq))) {\n      return true;\n    }\n    return false;\n  }\n\n    //name checking: whether the emp has matched the name\n  checkNameId(empName,empId,NameIdReq){\n    if (NameIdReq) {\n      if (((empName.toLowerCase()).includes(NameIdReq.toLowerCase())) || empId.includes(NameIdReq)) {\n       return true;\n        //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true;     //if customer not typed anything\n    }\n\n  }\n\n  //checking skills match\n  checkSkillsMatch(skillsChecked,empPrimarySkills,empSecondarySkills){\n    if (skillsChecked.size > 0) {  //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n      for (let i = 0; i < skillsChecked.size; i++) {  //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n        if (selectedSkill) {\n          if ( !(((empPrimarySkills.toLowerCase()).includes(skillName)) || ((empSecondarySkills.toLowerCase()).includes(skillName))) ) {\n            return false;  //if one is not in the profile then return false\n          }\n        }\n      }\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  //managers Match checking\n  checkManagerMatch(ManagersChecked,EmpManager){\n    let managerMatch = false;\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n      for (let i = 0; i < ManagersChecked.size; i++) {\n          let selectedManger = iterator2.next().value;\n           let selectedMangerName = iterator1.next().value;\n        if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n          if (((EmpManager.toLowerCase()).includes(selectedMangerName))) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n\n        } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {  //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n      if(managerMatch)\n        return true;\n      else\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  //check pods Match\n  checkPodsMatch(podsChecked,empPod){\n    let podsMatch = false;\n     if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n      for (let i = 0; i < podsChecked.size; i++) {\n          let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n          if (((empPod.toLowerCase()).includes(selectedPodName))) {\n\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n\n        } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) { //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n       if (podsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }  \n    } else {\n      return true;\n    }\n  }\n\n //projects match\n  checkProjectMatch(projectsChecked,empProject){\n    let projectsMatch = false;\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n      for (let i = 0; i < projectsChecked.size; i++) {\n          let selectedProject = iterator2.next().value;\n          let selectedProjectName = iterator1.next().value;\n        if (selectedProject && !projectsMatch) { //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n          if (((empProject.toLowerCase()).includes(selectedProjectName))) {\n            projectsMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n\n        } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) { //if all the previous checked projects are unchecked\n          projectsMatch = true;   \n        } \n      }\n      if (projectsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }\n    } else {\n      return true;\n    }\n  }\n\n  //Hobbies match\n  checkHobbiesMatch(hobbiesChecked,empHobbies){\n\n    if (hobbiesChecked.size > 0) {  //atleast one hobby is checked\n      const iterator1 = hobbiesChecked.keys();\n      const iterator2 = hobbiesChecked.values();\n      for (let i = 0; i < hobbiesChecked.size; i++) {  //checking all the checked hobby the emp has or not\n        let selectedHobby = iterator2.next().value;\n        let hobbyName = iterator1.next().value;\n        if (selectedHobby) {\n          if ( !(((empHobbies.toLowerCase()).includes(hobbyName))) ) {\n            return false;  //if one is not in the profile then return false\n          }\n        }\n      }\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  filteringTheEmp(){\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbbiesChecked = this.state.checkedItemsHobbies;\n    let filteredEmployee= [];\n    Employees.map(x => (\n      <>{((() => {\n        if (this.CheckExperience(x.Experience, expMinReq, expMaxReq) \n          && this.checkNameId(x.name, x.Emp_id, nameReq)\n          && this.checkPodsMatch(podsChecked, x.Pod)\n          && this.checkProjectMatch(projectsChecked, x.current_working_project) \n          && this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills) \n          && this.checkManagerMatch(ManagersChecked, x.Manager) \n          && this.checkHobbiesMatch(HobbbiesChecked, x.hobbies) \n          ) {\n          filteredEmployee.push(x);\n        }\n      })())}\n      </>\n    ))\n    return filteredEmployee;\n  }\n\n\n  render() {\n    //initialisig the state variables for manipulations \n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    let podsFilterShowCust =this.state.podsFilterShow;\n    let managersFilterShowCust =this.state.managersFilterShow;\n    let projectsFilterShowCust =this.state.projectsFilterShow;\n    let HobbiesFilterShowCust = this.state.HobbiesFilterShow;\n    let filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems();  //getting all the checked items and storing to make tags\n    // console.log(checkedItemsTagList);\n\n    return (\n      <>\n      <div className=\"filter-container\" id=\"filterPage\">\n        {/* different types of filters  */}\n        <div className=\"reqForm\">\n        <Scrollbars  \n        style={{ height: \"100%\" }}\n          onScroll={this.handleScroll}\n          autoHide     // Hide delay in ms\n          autoHideTimeout={1000}   // Duration for hide animation in ms.\n          autoHideDuration={200}\n        >\n          <form >\n            {/* name or id input filed*/}\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Enter name or Id\"\n                variant=\"outlined\"\n                style={{ marginTop: \"15px\", padding: \"10.5px 8px\", paddingLeft: 0 }}\n                type=\"text\"\n                name=\"name\"\n                onChange={this.myChangeHandler}\n                className=\"InpcheckedItemsSkillsuttextField\"\n              />\n\n            {/* Experience slider*/}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p className=\"exp-display\">\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n              </p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n                style={{color:\"#ff8c4b\"}}\n              />\n            </div>\n\n            {/*  skills checkboxes*/}\n            <p className=\"filterName\">Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                <p className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </p>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\">Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.slice(0, managersFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            className=\"checkboxes\"\n                          /> {item.name } ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                  {(this.state.MangersApi.length > 10)? \n                  <p className=\"showMore\"\n                    onClick={this.showMoreManagers}>\n                    {this.state.managersExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less managers\")}\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.slice(0, podsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                  }\n                  {(this.state.PodsApi.length > 10) ?\n                    <p className=\"showMore\"\n                      onClick={this.showMorePods}>\n                      {this.state.podsExpanded ? (\n                        <span>show less</span>\n                      ) : (\n                        <span>show more</span>\n                      )}\n                    </p>\n                    : console.log(\"less pods\")\n                  }\n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.slice(0, projectsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)? \n                  <p className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n             {/* Hobbbies checkbox selection */}\n             <p className=\"filterName\">Hobbies :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.hobbiesApi.slice(0, HobbiesFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsHobbies'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                  }\n                  {(this.state.hobbiesApi.length > 10) ?\n                    <p className=\"showMore\"\n                      onClick={this.showMoreHobbies}>\n                      {this.state.hobbiesExpanded ? (\n                        <span>show less</span>\n                      ) : (\n                        <span>show more</span>\n                      )}\n                    </p>\n                    : console.log(\"less hobbies\")\n                  }\n              </table>\n            </form>\n\n          </form>\n          </Scrollbars>\n        </div>\n\n        {/* //displaying */}\n        <Scrollbars  \n        style={{ height: 600 }}\n          onScroll={this.handleScroll}\n          autoHide     // Hide delay in ms\n          autoHideTimeout={1000}   // Duration for hide animation in ms.\n          autoHideDuration={200}\n        >\n          <div className=\"Employees\">\n\n            {/* selected filters as tags */}\n            {/* {console.log(this.state.checkedItemsTag)} */}\n            <div className=\"tagsAndEmpCountContainer\">\n              <div className=\"selectedTags\">\n                {checkedItemsTagList.map(x => (\n                  <>\n                    {(\n                      (() => {\n                        return (\n                          (\n                            <>\n                              <Chip\n                                label={x.value}\n                                // icon={icon}\n                                onDelete={this.handleDelete(x)}\n                                className=\"tags\"\n                              />\n                            </>\n                          )\n                        )\n                      })()\n                    )}\n                  </>\n                ))\n                }\n              </div>\n              <div className=\"filtered-emp-count\">\n                <img alt=\"no of emp\" src={empGroup} style={{ height: \"25%\" }}></img>\n                <p className=\"empCount\">{filteredEmployee.length}</p>\n              </div>\n            </div>\n         \n              {filteredEmployee.length > 0 ? console.log(filteredEmployee.length) :\n                <>\n                  {(\n                    (() => {\n                      return ( //no result found\n                        <div className='NoResult'>\n                          <img alt=\"No result found\" src={NoResult}></img>\n                        </div>\n                      )\n                    })())\n                  }\n                </>\n              }\n\n              {/* Filtered Employees displaying */}\n              {filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => (\n                <>\n                  {(\n                    (() => {\n                      return (\n                        (\n                          <EmployeeCard employee={employee}></EmployeeCard>\n                        )\n                      )\n                    })()\n                  )}\n                </>\n              ))\n              }\n           \n          </div>\n          </Scrollbars>\n        </div>\n        {/* next page or back button for viewing the cards */}\n        <div className=\"nextBack\">\n          {this.state.currentPage > 1 ?\n            <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; Back</button>\n            : null}\n          {filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ?\n            <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}>Next &raquo;</button>\n            : null}\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}