{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n/*\n        Component       : It is the functional component(Custom Hooks) that gets the parameter url, that returns the states of data, loading and error.\n        Author          : Created by Lister Raguram Sundaravadivel\n             \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */\n\nconst useFetch = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDetails = useCallback(async (url, resultData) => {\n    setLoading(true);\n\n    try {\n      const result = await fetch(url, {\n        method: \"GET\"\n      });\n\n      if (!result.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      let data = await result.json();\n\n      if (data != null) {\n        setLoading(false);\n        setError(null);\n      } else if (data.length === 0) {\n        throw new Error(\"Centers Not Available!\");\n      }\n\n      resultData(data);\n    } catch (error) {\n      setError(error.message + \"\");\n      setLoading(false);\n    }\n  }, []);\n  return [loading, fetchDetails, error];\n};\n\n_s(useFetch, \"TiU+wJgUFouyXtOSwTSglQWfWno=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/Hooks/use-fetch.js"],"names":["useState","useCallback","useFetch","loading","setLoading","error","setError","fetchDetails","url","resultData","result","fetch","method","ok","Error","data","json","length","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,YAAY,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAYC,UAAZ,KAA2B;AAC1DL,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMM,MAAM,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAC9BI,QAAAA,MAAM,EAAE;AADsB,OAAN,CAA1B;;AAGA,UAAI,CAACF,MAAM,CAACG,EAAZ,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,UAAIC,IAAI,GAAG,MAAML,MAAM,CAACM,IAAP,EAAjB;;AACA,UAAID,IAAI,IAAI,IAAZ,EAAkB;AAChBX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAHD,MAGO,IAAIS,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AAC5B,cAAM,IAAIH,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACDL,MAAAA,UAAU,CAACM,IAAD,CAAV;AACD,KAhBD,CAgBE,OAAOV,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACa,OAAN,GAAgB,EAAjB,CAAR;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAtB+B,EAsB7B,EAtB6B,CAAhC;AAuBA,SAAO,CAACD,OAAD,EAAUI,YAAV,EAAwBF,KAAxB,CAAP;AACD,CA3BD;;GAAMH,Q;;AA6BN,eAAeA,QAAf","sourcesContent":["import { useState, useCallback } from \"react\";\n/*\n        Component       : It is the functional component(Custom Hooks) that gets the parameter url, that returns the states of data, loading and error.\n        Author          : Created by Lister Raguram Sundaravadivel\n             \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */\nconst useFetch = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDetails = useCallback(async (url, resultData) => {\n    setLoading(true);\n    try {\n      const result = await fetch(url, {\n        method: \"GET\",\n      });\n      if (!result.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      let data = await result.json();\n      if (data != null) {\n        setLoading(false);\n        setError(null);\n      } else if (data.length === 0) {\n        throw new Error(\"Centers Not Available!\");\n      }\n      resultData(data);\n    } catch (error) {\n      setError(error.message + \"\");\n      setLoading(false);\n    }\n  }, []);\n  return [loading, fetchDetails, error];\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}