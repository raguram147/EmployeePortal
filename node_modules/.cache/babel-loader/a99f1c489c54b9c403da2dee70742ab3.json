{"ast":null,"code":"import _slicedToArray from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'../components/styles/style.css';import config from'../config';import Slider from'@material-ui/core/Slider';import NoResult from'../assets/noResult.gif';import Chip from'@material-ui/core/Chip';import{TextField}from\"@material-ui/core\";import{EmployeeCard}from'./EmployeeCard';import{Scrollbars}from'react-custom-scrollbars';import ClearIcon from'@material-ui/icons/Clear';import{BsFillFunnelFill}from\"react-icons/bs\";/*\n  state variables and api data: 20-68 lines\n  onchange functions\n  filtering employees based on filter logic\n  req Data initializations\n  filters (Dynamic checkboxes,slider,input) html\n  displaying tags,emp cards,next/back button\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EmployeeView=/*#__PURE__*/function(_Component){_inherits(EmployeeView,_Component);var _super=_createSuper(EmployeeView);function EmployeeView(props){var _this;_classCallCheck(this,EmployeeView);_this=_super.call(this,props);_this.valueText=function(value){return\"\".concat(value);};_this.handleChange=function(e,newValue){// console.log(newValue);\n_this.setState({ExperienceMinMax:newValue});};_this.myChangeHandler=function(event){var nam=event.target.name;var val=event.target.value;_this.setState(_defineProperty({},nam,val));};_this.handleDelete=function(chipToDelete){return function(){// console.log(chipToDelete);\nvar nam=chipToDelete.filterField;var isChecked=false;var item=chipToDelete.value;;// console.log(nam);\n// console.log(isChecked);\nif(nam==='skill'){_this.setState(function(prevState){return{checkedItemsSkills:prevState.checkedItemsSkills.set(item,isChecked)};});document.getElementById(item).checked=false;// console.log(event.target);\n}else if(nam==='manager'){_this.setState(function(prevState){return{checkedItemsManager:prevState.checkedItemsManager.set(item,isChecked)};});document.getElementById(item).checked=false;}else if(nam==='pod'){_this.setState(function(prevState){return{checkedItemsPod:prevState.checkedItemsPod.set(item,isChecked)};});document.getElementById(item).checked=false;}else if(nam==='project'){_this.setState(function(prevState){return{checkedItemsProjects:prevState.checkedItemsProjects.set(item,isChecked)};});document.getElementById(item).checked=false;}else if(nam==='hobby'){_this.setState(function(prevState){return{checkedItemsHobbies:prevState.checkedItemsHobbies.set(item,isChecked)};});document.getElementById(item).checked=false;}else if(nam==='EmpStatus'){_this.setState(function(prevState){return{checkedItemsEmpStatus:prevState.checkedItemsEmpStatus.set(item,isChecked)};});document.getElementById(item).checked=false;}else if(nam==='EngagementType'){_this.setState(function(prevState){return{checkedItemsEngagementType:prevState.checkedItemsEngagementType.set(item,isChecked)};});document.getElementById(item).checked=false;}else if(nam==='billable'){_this.setState(function(prevState){return{checkedItemsBillable:prevState.checkedItemsBillable.set(item,isChecked)};});document.getElementById(item).checked=false;}};};_this.state={Employees:[],//api data\nskillsApi:[],MangersApi:[],PodsApi:[],projectsApi:[],hobbiesApi:[],employeeStatusApi:[],billableApi:[],engagementTypeApi:[],skills:[],name:'',skillsFilterShow:10,//number of skill filters to be shown\nprojectsFilterShow:10,//number of projects filters to be shown\nmanagersFilterShow:10,podsFilterShow:10,HobbiesFilterShow:10,skillsExpanded:false,projectsExpanded:false,managersExpanded:false,podsExpanded:false,hobbiesExpanded:false,checkedItemsSkills:new Map(),checkedItemsManager:new Map(),checkedItemsPod:new Map(),checkedItemsProjects:new Map(),checkedItemsHobbies:new Map(),checkedItemsEmpStatus:new Map(),checkedItemsEngagementType:new Map(),checkedItemsBillable:new Map(),ExperienceMinMax:[0,25],filteredEmployee:[],currentPage:1,maxItemsPerPage:12,checkedItemsTag:[],skillsCheckBox:false};_this.CheckBoxhandleChange=_this.CheckBoxhandleChange.bind(_assertThisInitialized(_this));_this.showMoreSkills=_this.showMoreSkills.bind(_assertThisInitialized(_this));_this.showMoreProjects=_this.showMoreProjects.bind(_assertThisInitialized(_this));_this.showMoreManagers=_this.showMoreManagers.bind(_assertThisInitialized(_this));_this.showMorePods=_this.showMorePods.bind(_assertThisInitialized(_this));_this.showMoreHobbies=_this.showMoreHobbies.bind(_assertThisInitialized(_this));return _this;}//fetching data from api\n_createClass(EmployeeView,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;Promise.all([fetch(config.drupal_url+'/Employees').then(function(res){return res.json();}),fetch(config.drupal_url+'/TaxonomyOrder/skills').then(function(res){return res.json();}),fetch(config.drupal_url+'/TaxonomyOrder/manager').then(function(res){return res.json();}),fetch(config.drupal_url+'/TaxonomyOrder/pod').then(function(res){return res.json();}),fetch(config.drupal_url+'/TaxonomyOrder/projects').then(function(res){return res.json();}),fetch(config.drupal_url+'/TaxonomyOrder/hobbies').then(function(res){return res.json();}),fetch(config.drupal_url+'/Taxonomy/employee_status').then(function(res){return res.json();}),fetch(config.drupal_url+'/Taxonomy/engagement_model').then(function(res){return res.json();}),fetch(config.drupal_url+'/Taxonomy/billable').then(function(res){return res.json();})]).then(function(_ref){var _ref2=_slicedToArray(_ref,9),urlOneData=_ref2[0],urlTwoData=_ref2[1],urlThreeData=_ref2[2],urlFourData=_ref2[3],urlFiveData=_ref2[4],urlSixData=_ref2[5],urlSevenData=_ref2[6],urlEightData=_ref2[7],urlNineData=_ref2[8];_this2.setState({Employees:urlOneData,skillsApi:urlTwoData,MangersApi:urlThreeData,PodsApi:urlFourData,projectsApi:urlFiveData,hobbiesApi:urlSixData,employeeStatusApi:urlSevenData,engagementTypeApi:urlEightData,billableApi:urlNineData});});}//Experience slider on change calls the fxn and changes the values\n},{key:\"CheckBoxhandleChange\",value:function CheckBoxhandleChange(event){//skills,project,pod,manager checkeditems change (to check uncheck)\nvar nam=event.target.name;var isChecked=event.target.checked;var item=event.target.value;// console.log(nam);\n// console.log(isChecked);\nif(nam==='checkedItemsSkills'){this.setState(function(prevState){return{checkedItemsSkills:prevState.checkedItemsSkills.set(item,isChecked)};});// document.getElementById(item).checked = true;\n}else if(nam==='checkedItemsManager')this.setState(function(prevState){return{checkedItemsManager:prevState.checkedItemsManager.set(item,isChecked)};});else if(nam==='checkedItemsPod')this.setState(function(prevState){return{checkedItemsPod:prevState.checkedItemsPod.set(item,isChecked)};});else if(nam==='checkedItemsProjects')this.setState(function(prevState){return{checkedItemsProjects:prevState.checkedItemsProjects.set(item,isChecked)};});else if(nam==='checkedItemsHobbies')this.setState(function(prevState){return{checkedItemsHobbies:prevState.checkedItemsHobbies.set(item,isChecked)};});else if(nam==='checkedItemsEmpStatus')this.setState(function(prevState){return{checkedItemsEmpStatus:prevState.checkedItemsEmpStatus.set(item,isChecked)};});else if(nam==='checkedItemsEngagementType')this.setState(function(prevState){return{checkedItemsEngagementType:prevState.checkedItemsEngagementType.set(item,isChecked)};});else if(nam==='checkedItemsBillable')this.setState(function(prevState){return{checkedItemsBillable:prevState.checkedItemsBillable.set(item,isChecked)};});}//show more skill filter option\n},{key:\"showMoreSkills\",value:function showMoreSkills(){this.state.skillsFilterShow===10?this.setState({skillsFilterShow:this.state.skillsApi.length,skillsExpanded:true}):this.setState({skillsFilterShow:10,skillsExpanded:false});}//show more filter filter option\n},{key:\"showMoreProjects\",value:function showMoreProjects(){this.state.projectsFilterShow===10?this.setState({projectsFilterShow:this.state.projectsApi.length,projectsExpanded:true}):this.setState({projectsFilterShow:10,projectsExpanded:false});}//show more filter filter option this.state.managersExpanded\n},{key:\"showMoreManagers\",value:function showMoreManagers(){this.state.managersFilterShow===10?this.setState({managersFilterShow:this.state.MangersApi.length,managersExpanded:true}):this.setState({managersFilterShow:10,managersExpanded:false});}//show more filter filter option this.state.managersExpanded\n},{key:\"showMorePods\",value:function showMorePods(){this.state.podsFilterShow===10?this.setState({podsFilterShow:this.state.PodsApi.length,podsExpanded:true}):this.setState({podsFilterShow:10,podsExpanded:false});}},{key:\"showMoreHobbies\",value:function showMoreHobbies(){this.state.HobbiesFilterShow===10?this.setState({HobbiesFilterShow:this.state.hobbiesApi.length,hobbiesExpanded:true}):this.setState({HobbiesFilterShow:10,hobbiesExpanded:false});}//next or back to view other emp cards if exists\n},{key:\"changePage\",value:function changePage(direction){// console.log(direction);\nif(direction==='back'){this.setState({currentPage:this.state.currentPage-1});}else if(direction==='next'){this.setState({currentPage:this.state.currentPage+1});}}},{key:\"AllCheckedItems\",value:function AllCheckedItems(){var skillsChecked=this.state.checkedItemsSkills;var ManagersChecked=this.state.checkedItemsManager;var podsChecked=this.state.checkedItemsPod;var projectsChecked=this.state.checkedItemsProjects;var HobbiesChecked=this.state.checkedItemsHobbies;var EmpStatuschecked=this.state.checkedItemsEmpStatus;var EngagementTypeChecked=this.state.checkedItemsEngagementType;var billableChecked=this.state.checkedItemsBillable;var checkedItemsTagList=[];//storing all the checked items in array to display as tags\nif(skillsChecked.size>0||ManagersChecked.size>0||podsChecked.size>0||projectsChecked.size>0||HobbiesChecked.size>0||EmpStatuschecked.size>0||EngagementTypeChecked.size>0||billableChecked.size>0){var iteratorS1=skillsChecked.keys();var iteratorS2=skillsChecked.values();for(var i=0;i<skillsChecked.size;i++){var ps=iteratorS1.next().value;if(iteratorS2.next().value){var tagsCheckedObj={value:ps,filterField:\"skill\"};checkedItemsTagList.push(tagsCheckedObj);}}var iteratorM1=ManagersChecked.keys();var iteratorM2=ManagersChecked.values();for(var _i=0;_i<ManagersChecked.size;_i++){var _ps=iteratorM1.next().value;if(iteratorM2.next().value){var _tagsCheckedObj={value:_ps,filterField:\"manager\"};checkedItemsTagList.push(_tagsCheckedObj);}}var iteratorP1=podsChecked.keys();var iteratorP2=podsChecked.values();for(var _i2=0;_i2<podsChecked.size;_i2++){var _ps2=iteratorP1.next().value;if(iteratorP2.next().value){var _tagsCheckedObj2={value:_ps2,filterField:\"pod\"};checkedItemsTagList.push(_tagsCheckedObj2);}}var iteratorPr1=projectsChecked.keys();var iteratorPr2=projectsChecked.values();for(var _i3=0;_i3<projectsChecked.size;_i3++){var _ps3=iteratorPr1.next().value;if(iteratorPr2.next().value){var _tagsCheckedObj3={value:_ps3,filterField:\"project\"};checkedItemsTagList.push(_tagsCheckedObj3);}}var iteratorH1=HobbiesChecked.keys();var iteratorH2=HobbiesChecked.values();for(var _i4=0;_i4<HobbiesChecked.size;_i4++){var _ps4=iteratorH1.next().value;if(iteratorH2.next().value){var _tagsCheckedObj4={value:_ps4,filterField:\"hobby\"};checkedItemsTagList.push(_tagsCheckedObj4);}}var iteratorES1=EmpStatuschecked.keys();var iteratorES2=EmpStatuschecked.values();for(var _i5=0;_i5<EmpStatuschecked.size;_i5++){var _ps5=iteratorES1.next().value;if(iteratorES2.next().value){var _tagsCheckedObj5={value:_ps5,filterField:\"EmpStatus\"};checkedItemsTagList.push(_tagsCheckedObj5);}}var iteratorET1=EngagementTypeChecked.keys();var iteratorET2=EngagementTypeChecked.values();for(var _i6=0;_i6<EngagementTypeChecked.size;_i6++){var _ps6=iteratorET1.next().value;if(iteratorET2.next().value){var _tagsCheckedObj6={value:_ps6,filterField:\"EngagementType\"};checkedItemsTagList.push(_tagsCheckedObj6);}}var iteratorB1=billableChecked.keys();var iteratorB2=billableChecked.values();for(var _i7=0;_i7<billableChecked.size;_i7++){var _ps7=iteratorB1.next().value;if(iteratorB2.next().value){var _tagsCheckedObj7={value:_ps7,filterField:\"billable\"};checkedItemsTagList.push(_tagsCheckedObj7);}}// console.log(billableChecked);\n// console.log(EngagementTypeChecked);\n// console.log(checkedItemsTagList.length);\n// console.log(checkedItemsTagList);\n}return checkedItemsTagList;}//if u click cancel on the selected tags the checkboxes should be unchecked auto\n},{key:\"CheckExperience\",value://checking the empdetails matches\n//experience match employee's\nfunction CheckExperience(employeeExperience,expMinReq,expMaxReq){//experience checking: whether the emp has meet the req experience of customer\nif(parseInt(employeeExperience)>=expMinReq&&parseInt(employeeExperience)<=expMaxReq){return true;}return false;}//name checking: whether the emp has matched the name\n},{key:\"checkNameId\",value:function checkNameId(empName,empId,NameIdReq){if(NameIdReq){if(empName.toLowerCase().includes(NameIdReq.toLowerCase())||empId.includes(NameIdReq)){return true;//   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n}else{return false;}}else{return true;//if customer not typed anything\n}}//checking skills match\n},{key:\"checkSkillsMatch\",value:function checkSkillsMatch(skillsChecked,empPrimarySkills,empSecondarySkills){if(skillsChecked.size>0){//atleast one skill is checked\nvar iterator1=skillsChecked.keys();var iterator2=skillsChecked.values();for(var i=0;i<skillsChecked.size;i++){//checking all the checked skills the emp has or not\nvar selectedSkill=iterator2.next().value;var skillName=iterator1.next().value;if(selectedSkill){var empPrimarySkillsArray=empPrimarySkills.toLowerCase().split(\",,\");var empSecondarySkillsArray=empSecondarySkills.toLowerCase().split(\",,\");if(!(empPrimarySkillsArray.includes(skillName)||empSecondarySkillsArray.includes(skillName))){return false;//if one is not in the profile then return false\n}}}return true;}else{return true;}}//managers Match checking\n},{key:\"checkManagerMatch\",value:function checkManagerMatch(ManagersChecked,EmpManager){var managerMatch=false;if(ManagersChecked.size>0){var iterator1=ManagersChecked.keys();var iterator2=ManagersChecked.values();var oneManagerAtleastChecked=false;for(var i=0;i<ManagersChecked.size;i++){var selectedManger=iterator2.next().value;var selectedMangerName=iterator1.next().value;if(selectedManger&&!managerMatch){//check whether the checkbox is still selected and manager is matched in previous loop\noneManagerAtleastChecked=true;if(EmpManager.toLowerCase().includes(selectedMangerName)){managerMatch=true;// console.log(\"true inside loop\");\n}else{managerMatch=false;}}else if(!oneManagerAtleastChecked&&i===ManagersChecked.size-1){//if all the previous checked managers are unchecked\nmanagerMatch=true;}}if(managerMatch)return true;else return false;}else{return true;}}//check pods Match\n},{key:\"checkPodsMatch\",value:function checkPodsMatch(podsChecked,empPod){var podsMatch=false;if(podsChecked.size>0){var iterator1=podsChecked.keys();var iterator2=podsChecked.values();var onePodAtleastChecked=false;for(var i=0;i<podsChecked.size;i++){var selectedPod=iterator2.next().value;var selectedPodName=iterator1.next().value;if(selectedPod&&!podsMatch){//check whether the checkbox is still selected and pod is matched in previous loop\nonePodAtleastChecked=true;if(empPod.toLowerCase().includes(selectedPodName)){podsMatch=true;// console.log(\"true inside loop\");\n}else{podsMatch=false;}}else if(!onePodAtleastChecked&&i===podsChecked.size-1){//if all the previous checked pods are unchecked\npodsMatch=true;}}if(podsMatch){return true;}else{return false;}}else{return true;}}//projects match\n},{key:\"checkProjectMatch\",value:function checkProjectMatch(projectsChecked,empProject){var projectsMatch=false;if(projectsChecked.size>0){var iterator1=projectsChecked.keys();var iterator2=projectsChecked.values();var oneProjectAtleastChecked=false;for(var i=0;i<projectsChecked.size;i++){var selectedProject=iterator2.next().value;var selectedProjectName=iterator1.next().value;if(selectedProject&&!projectsMatch){//check whether the checkbox is still selected and project is matched in previous loop\noneProjectAtleastChecked=true;if(empProject.toLowerCase().includes(selectedProjectName)){projectsMatch=true;// console.log(\"true inside loop\");\n}else{projectsMatch=false;}}else if(!oneProjectAtleastChecked&&i===projectsChecked.size-1){//if all the previous checked projects are unchecked\nprojectsMatch=true;}}if(projectsMatch){return true;}else{return false;}}else{return true;}}//Hobbies match\n// checkHobbiesMatch(hobbiesChecked,empHobbies){\n//   if (hobbiesChecked.size > 0) {  //atleast one hobby is checked\n//     const iterator1 = hobbiesChecked.keys();\n//     const iterator2 = hobbiesChecked.values();\n//     for (let i = 0; i < hobbiesChecked.size; i++) {  //checking all the checked hobby the emp has or not\n//       let selectedHobby = iterator2.next().value;\n//       let hobbyName = iterator1.next().value;\n//       if (selectedHobby) {\n//         if ( !(((empHobbies.toLowerCase()).includes(hobbyName))) ) {\n//           return false;  //if one is not in the profile then return false\n//         }\n//       }\n//     }\n//     return true;\n//   } else {\n//     return true;\n//   }\n// }\n//checking emp status match\n},{key:\"checkEmpStatusMatch\",value:function checkEmpStatusMatch(EmployeeStatusChecked,EmpStatus){var ESMatch=false;if(EmployeeStatusChecked.size>0){var iterator1=EmployeeStatusChecked.keys();var iterator2=EmployeeStatusChecked.values();var oneESAtleastChecked=false;for(var i=0;i<EmployeeStatusChecked.size;i++){var selectedES=iterator2.next().value;//true or false\nvar selectedESName=iterator1.next().value;if(selectedES&&!ESMatch){//check whether the checkbox is still selected and pod is matched in previous loop\noneESAtleastChecked=true;if(EmpStatus.toLowerCase().includes(\"left\")){EmpStatus=\"Alumni\";}if(EmpStatus.toLowerCase().includes(selectedESName)){ESMatch=true;// console.log(\"true inside loop\");\n}else{ESMatch=false;}}else if(!oneESAtleastChecked&&i===EmployeeStatusChecked.size-1){//if all the previous checked pods are unchecked\nESMatch=true;}}if(ESMatch){return true;}else{return false;}}else{return true;}}// checking Engagement Type match\n},{key:\"checkEngagementTypeMatch\",value:function checkEngagementTypeMatch(EngagementTypeChecked,EngagementType){var ETMatch=false;if(EngagementTypeChecked.size>0){var iterator1=EngagementTypeChecked.keys();var iterator2=EngagementTypeChecked.values();var oneETAtleastChecked=false;for(var i=0;i<EngagementTypeChecked.size;i++){var selectedET=iterator2.next().value;//true or false\nvar selectedETName=iterator1.next().value;if(selectedET&&!ETMatch){//check whether the checkbox is still selected and pod is matched in previous loop\noneETAtleastChecked=true;if(EngagementType.includes(\"T&amp;M\")){EngagementType=\"t&m\";}// console.log(EngagementType);\n// console.log(selectedETName);\nif(EngagementType.toLowerCase().includes(selectedETName)){ETMatch=true;//  console.log(\"true inside loop\");\n}else{ETMatch=false;}}else if(!oneETAtleastChecked&&i===EngagementTypeChecked.size-1){//if all the previous checked pods are unchecked\nETMatch=true;}}if(ETMatch){return true;}else{return false;}}else{return true;}}//checking billability match\n},{key:\"checkBillableMatch\",value:function checkBillableMatch(billableChecked,billable){var billableMatch=false;if(billableChecked.size>0){var iterator1=billableChecked.keys();var iterator2=billableChecked.values();var oneBillableAtleastChecked=false;for(var i=0;i<billableChecked.size;i++){var selectedBillable=iterator2.next().value;//true or false\nvar selectedBillableName=iterator1.next().value;if(selectedBillable&&!billableMatch){//check whether the checkbox is still selected and pod is matched in previous loop\noneBillableAtleastChecked=true;if(billable.toLowerCase().includes(selectedBillableName)){billableMatch=true;//  console.log(\"true inside loop\");\n}else{billableMatch=false;}}else if(!oneBillableAtleastChecked&&i===billableChecked.size-1){//if all the previous checked pods are unchecked\nbillableMatch=true;}}if(billableMatch){return true;}else{return false;}}else{return true;}}},{key:\"filteringTheEmp\",value:function filteringTheEmp(){var _this3=this;var Employees=this.state.Employees;var expMinReq=this.state.ExperienceMinMax[0];var expMaxReq=this.state.ExperienceMinMax[1];var nameReq=this.state.name;var skillsChecked=this.state.checkedItemsSkills;var ManagersChecked=this.state.checkedItemsManager;var podsChecked=this.state.checkedItemsPod;var projectsChecked=this.state.checkedItemsProjects;// let HobbbiesChecked = this.state.checkedItemsHobbies;\nvar EmpStatusChecked=this.state.checkedItemsEmpStatus;var EngagementTypeChecked=this.state.checkedItemsEngagementType;var billableChecked=this.state.checkedItemsBillable;var filteredEmployee=[];Employees.map(function(x,index){return/*#__PURE__*/_jsx(\"div\",{children:function(){if(_this3.CheckExperience(x.Experience,expMinReq,expMaxReq)&&_this3.checkNameId(x.name,x.Emp_id,nameReq)&&_this3.checkPodsMatch(podsChecked,x.Pod)&&_this3.checkProjectMatch(projectsChecked,x.current_working_project)&&_this3.checkSkillsMatch(skillsChecked,x.primary_skills,x.secndary_skills)&&_this3.checkManagerMatch(ManagersChecked,x.Manager)// && this.checkHobbiesMatch(HobbbiesChecked, x.hobbies)\n&&_this3.checkEmpStatusMatch(EmpStatusChecked,x.employment_status)&&_this3.checkEngagementTypeMatch(EngagementTypeChecked,x.engagement_model)&&_this3.checkBillableMatch(billableChecked,x.billable)){filteredEmployee.push(x);}}()},index);});return filteredEmployee;}},{key:\"FiltersHover\",value:function FiltersHover(){var x=document.getElementById(\"filtersContainer\");var y=document.getElementById(\"filterPage\");var z=document.getElementById(\"filter-icon\");// console.log(x.className);\nif(x.className===\"reqForm\"){x.className=\"filtersContainer\";y.className=\"filter-containerMobile\";z.style.display='none';}else{x.className=\"reqForm\";y.className=\"filter-container\";z.style.display='block';}}},{key:\"render\",value:function render(){var _this4=this;//initialisig the state variables for manipulations\nvar skillsFilterShowCust=this.state.skillsFilterShow;var podsFilterShowCust=this.state.podsFilterShow;var managersFilterShowCust=this.state.managersFilterShow;var projectsFilterShowCust=this.state.projectsFilterShow;var HobbiesFilterShowCust=this.state.HobbiesFilterShow;var filteredEmployee=this.filteringTheEmp();var checkedItemsTagList=this.AllCheckedItems();//getting all the checked items and storing to make tags\n// console.log(filteredEmployee);\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-container\",id:\"filterPage\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"filter-icon\",onClick:function onClick(){return _this4.FiltersHover();},children:/*#__PURE__*/_jsx(BsFillFunnelFill,{id:\"filter-icon\"})}),/*#__PURE__*/_jsx(Scrollbars,{style:{height:\"100%\"},onScroll:this.handleScroll,autoHide:true// Hide delay in ms\n,autoHideTimeout:1000// Duration for hide animation in ms.\n,autoHideDuration:200,children:/*#__PURE__*/_jsxs(\"div\",{className:\"reqForm\",id:\"filtersContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"filter-icon\",id:\"clear-icon\",onClick:function onClick(){return _this4.FiltersHover();},children:/*#__PURE__*/_jsx(ClearIcon,{})}),/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filtered-emp-count\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"filterName\",children:\"Employees: \"}),/*#__PURE__*/_jsx(\"p\",{className:\"empCount\",children:filteredEmployee.length})]}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Enter name or Id\",variant:\"outlined\"// size=\"small\"\n,style:{padding:\"10.5px 8px\",paddingLeft:0,paddingBottom:0,width:\"100%\"},type:\"text\",name:\"name\",onChange:this.myChangeHandler,className:\"InpcheckedItemsSkillsuttextField\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"Experience-overview\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",children:\"Experience: \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"exp-display\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\" \",this.state.ExperienceMinMax[0],\" - \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"  \",this.state.ExperienceMinMax[1],\" years\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"experienceSlider\",children:/*#__PURE__*/_jsx(Slider,{defaultValue:[0,25],value:this.ExperienceMinMax,onChange:this.handleChange,valueLabelDisplay:\"auto\",\"aria-labelledby\":\"range-slider\",getAriaValueText:this.valueText,step:1,min:0,max:45,style:{color:\"#ff8c4b\"}})}),/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",style:{paddingTop:2},children:\"Skills :\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"CheckboxesTable\",children:[this.state.skillsApi.slice(0,skillsFilterShowCust).map(function(item,index){return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"checkedItemsSkills\",value:item.name.toLowerCase(),onChange:_this4.CheckBoxhandleChange,id:item.name.toLowerCase()},index),/*#__PURE__*/_jsxs(_Fragment,{children:[item.name,\" (\",item.count,\")\"]})]})})})});}),/*#__PURE__*/_jsx(\"tbody\",{className:\"showMore\",onClick:this.showMoreSkills,children:this.state.skillsExpanded?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show less\"})}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show more\"})})})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",style:{paddingTop:2},children:\"Managers :\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"CheckboxesTable\",children:[this.state.MangersApi.slice(0,managersFilterShowCust).map(function(item,index){return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{name:\"checkedItemsManager\",type:\"checkbox\",value:item.name.toLowerCase(),onChange:_this4.CheckBoxhandleChange,id:item.name.toLowerCase(),className:\"checkboxes\"},index),/*#__PURE__*/_jsxs(_Fragment,{children:[item.name,\" (\",item.count,\")\"]})]})})})});}),this.state.MangersApi.length>10?/*#__PURE__*/_jsx(\"tbody\",{className:\"showMore\",onClick:this.showMoreManagers,children:this.state.managersExpanded?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show less\"})}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show more\"})})}):/*#__PURE__*/_jsx(_Fragment,{})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",children:\"Pods :\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"CheckboxesTable\",children:[this.state.PodsApi.slice(0,podsFilterShowCust).map(function(item,index){return/*#__PURE__*/_jsxs(\"tbody\",{children:[\" \",/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{name:\"checkedItemsPod\",type:\"checkbox\",value:item.name.toLowerCase(),onChange:_this4.CheckBoxhandleChange,id:item.name.toLowerCase()},index),/*#__PURE__*/_jsxs(_Fragment,{children:[item.name,\" (\",item.count,\")\"]})]})})})]});}),this.state.PodsApi.length>10?/*#__PURE__*/_jsx(\"tbody\",{className:\"showMore\",onClick:this.showMorePods,children:this.state.podsExpanded?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show less\"})}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show more\"})})}):/*#__PURE__*/_jsx(_Fragment,{})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",children:\"projects :\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"table\",{className:\"CheckboxesTable\",children:[this.state.projectsApi.slice(0,projectsFilterShowCust).map(function(item,index){return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{name:\"checkedItemsProjects\",type:\"checkbox\",value:item.name.toLowerCase(),onChange:_this4.CheckBoxhandleChange,id:item.name.toLowerCase()},index),/*#__PURE__*/_jsxs(_Fragment,{children:[item.name.replace(\"&amp;\",\"&\"),\" (\",item.count,\")\"]})]})})})});}),this.state.projectsApi.length>10?/*#__PURE__*/_jsx(\"tbody\",{className:\"showMore\",onClick:this.showMoreProjects,children:this.state.projectsExpanded?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show less\"})}):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:\"show more\"})})}):/*#__PURE__*/_jsx(_Fragment,{})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",children:\"Employee Status :\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"table\",{className:\"CheckboxesTable\",children:this.state.employeeStatusApi.slice(0,HobbiesFilterShowCust).map(function(item,index){return/*#__PURE__*/_jsxs(\"tbody\",{children:[\" \",/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{name:\"checkedItemsEmpStatus\",type:\"checkbox\",value:item.name.toLowerCase(),onChange:_this4.CheckBoxhandleChange,id:item.name.toLowerCase()},index),/*#__PURE__*/_jsxs(_Fragment,{children:[item.name,\" \"]})]})})})]});})})}),/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",children:\"Engagement Model :\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"table\",{className:\"CheckboxesTable\",children:this.state.engagementTypeApi.map(function(item,index){return/*#__PURE__*/_jsxs(\"tbody\",{children:[\" \",/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{name:\"checkedItemsEngagementType\",type:\"checkbox\",value:item.name.toLowerCase(),onChange:_this4.CheckBoxhandleChange,id:item.name.toLowerCase()},index),/*#__PURE__*/_jsx(_Fragment,{children:item.name})]})})})]});})})}),/*#__PURE__*/_jsx(\"p\",{className:\"filterName\",children:\"Billable :\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"table\",{className:\"CheckboxesTable\",children:this.state.billableApi.map(function(item,index){return/*#__PURE__*/_jsxs(\"tbody\",{children:[\" \",/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{name:\"checkedItemsBillable\",type:\"checkbox\",value:item.name.toLowerCase(),onChange:_this4.CheckBoxhandleChange,id:item.name.toLowerCase()},index),/*#__PURE__*/_jsx(_Fragment,{children:item.name})]})})})]});})})})]})]})}),/*#__PURE__*/_jsx(Scrollbars,{style:{height:600},onScroll:this.handleScroll,autoHide:true// Hide delay in ms\n,autoHideTimeout:1000// Duration for hide animation in ms.\n,autoHideDuration:200,children:/*#__PURE__*/_jsxs(\"div\",{className:\"Employees\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selectedTags\",children:checkedItemsTagList.map(function(x,index){return/*#__PURE__*/_jsx(_Fragment,{children:function(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Chip,{label:x.value// icon={icon}\n,onDelete:_this4.handleDelete(x),className:\"tags\"},index)});}()});})}),filteredEmployee.length>0?/*#__PURE__*/_jsx(_Fragment,{}):/*#__PURE__*/_jsx(_Fragment,{children:function(){return/*#__PURE__*/ (//no result found\n_jsx(\"div\",{className:\"NoResult\",children:/*#__PURE__*/_jsx(\"img\",{alt:\"No result found\",src:NoResult})}));}()}),filteredEmployee.slice(this.state.currentPage*this.state.maxItemsPerPage-this.state.maxItemsPerPage,this.state.currentPage*this.state.maxItemsPerPage).map(function(employee,index){return/*#__PURE__*/_jsx(_Fragment,{children:function(){return/*#__PURE__*/_jsx(EmployeeCard,{employee:employee});}()});})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"nextBack\",children:[this.state.currentPage>1?/*#__PURE__*/_jsx(\"button\",{className:\"nextBackBttn\",onClick:function onClick(){return _this4.changePage('back');},children:\"\\xAB \"}):null,/*#__PURE__*/_jsx(\"button\",{className:\"nextBackBttn\",children:this.state.currentPage}),filteredEmployee.length>this.state.currentPage*this.state.maxItemsPerPage?/*#__PURE__*/_jsx(\"button\",{className:\"nextBackBttn\",onClick:function onClick(){return _this4.changePage('next');},children:\" \\xBB\"}):null]})]});}}]);return EmployeeView;}(Component);export{EmployeeView as default};","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","Chip","TextField","EmployeeCard","Scrollbars","ClearIcon","BsFillFunnelFill","EmployeeView","props","valueText","value","handleChange","e","newValue","setState","ExperienceMinMax","myChangeHandler","event","nam","target","name","val","handleDelete","chipToDelete","filterField","isChecked","item","prevState","checkedItemsSkills","set","document","getElementById","checked","checkedItemsManager","checkedItemsPod","checkedItemsProjects","checkedItemsHobbies","checkedItemsEmpStatus","checkedItemsEngagementType","checkedItemsBillable","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","hobbiesApi","employeeStatusApi","billableApi","engagementTypeApi","skills","skillsFilterShow","projectsFilterShow","managersFilterShow","podsFilterShow","HobbiesFilterShow","skillsExpanded","projectsExpanded","managersExpanded","podsExpanded","hobbiesExpanded","Map","filteredEmployee","currentPage","maxItemsPerPage","checkedItemsTag","skillsCheckBox","CheckBoxhandleChange","bind","showMoreSkills","showMoreProjects","showMoreManagers","showMorePods","showMoreHobbies","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","urlSixData","urlSevenData","urlEightData","urlNineData","length","direction","skillsChecked","ManagersChecked","podsChecked","projectsChecked","HobbiesChecked","EmpStatuschecked","EngagementTypeChecked","billableChecked","checkedItemsTagList","size","iteratorS1","keys","iteratorS2","values","i","ps","next","tagsCheckedObj","push","iteratorM1","iteratorM2","iteratorP1","iteratorP2","iteratorPr1","iteratorPr2","iteratorH1","iteratorH2","iteratorES1","iteratorES2","iteratorET1","iteratorET2","iteratorB1","iteratorB2","employeeExperience","expMinReq","expMaxReq","parseInt","empName","empId","NameIdReq","toLowerCase","includes","empPrimarySkills","empSecondarySkills","iterator1","iterator2","selectedSkill","skillName","empPrimarySkillsArray","split","empSecondarySkillsArray","EmpManager","managerMatch","oneManagerAtleastChecked","selectedManger","selectedMangerName","empPod","podsMatch","onePodAtleastChecked","selectedPod","selectedPodName","empProject","projectsMatch","oneProjectAtleastChecked","selectedProject","selectedProjectName","EmployeeStatusChecked","EmpStatus","ESMatch","oneESAtleastChecked","selectedES","selectedESName","EngagementType","ETMatch","oneETAtleastChecked","selectedET","selectedETName","billable","billableMatch","oneBillableAtleastChecked","selectedBillable","selectedBillableName","nameReq","EmpStatusChecked","map","x","index","CheckExperience","Experience","checkNameId","Emp_id","checkPodsMatch","Pod","checkProjectMatch","current_working_project","checkSkillsMatch","primary_skills","secndary_skills","checkManagerMatch","Manager","checkEmpStatusMatch","employment_status","checkEngagementTypeMatch","engagement_model","checkBillableMatch","y","z","className","style","display","skillsFilterShowCust","podsFilterShowCust","managersFilterShowCust","projectsFilterShowCust","HobbiesFilterShowCust","filteringTheEmp","AllCheckedItems","FiltersHover","height","handleScroll","padding","paddingLeft","paddingBottom","width","color","paddingTop","slice","count","replace","employee","changePage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/style.css';\nimport config from '../config';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\nimport Chip from '@material-ui/core/Chip';\nimport {  TextField } from \"@material-ui/core\";\nimport { EmployeeCard } from './EmployeeCard';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { BsFillFunnelFill } from \"react-icons/bs\";\n\n\n/*\n  state variables and api data: 20-68 lines\n  onchange functions\n  filtering employees based on filter logic\n  req Data initializations\n  filters (Dynamic checkboxes,slider,input) html\n  displaying tags,emp cards,next/back button\n*/\n\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],//api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      hobbiesApi: [],\n      employeeStatusApi: [],\n      billableApi: [],\n      engagementTypeApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      managersFilterShow:10,\n      podsFilterShow:10,\n      HobbiesFilterShow:10,\n      skillsExpanded: false,\n      projectsExpanded: false,\n      managersExpanded: false,\n      podsExpanded:false,\n      hobbiesExpanded:false,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      checkedItemsHobbies: new Map(),\n      checkedItemsEmpStatus: new Map(),\n      checkedItemsEngagementType: new Map(),\n      checkedItemsBillable: new Map(),\n      ExperienceMinMax: [0, 25],\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:12,\n      checkedItemsTag : [],\n      skillsCheckBox: false\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n    this.showMoreManagers = this.showMoreManagers.bind(this);\n    this.showMorePods = this.showMorePods.bind(this);\n    this.showMoreHobbies = this.showMoreHobbies.bind(this);\n  }\n  //fetching data from api\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/projects').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/hobbies').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/employee_status').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/engagement_model').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/billable').then(res => res.json())\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData, urlSixData, urlSevenData, urlEightData, urlNineData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData,\n        hobbiesApi: urlSixData,\n        employeeStatusApi:urlSevenData,\n        engagementTypeApi: urlEightData,\n        billableApi: urlNineData\n      });\n    })\n  }\n\n  //Experience slider on change calls the fxn and changes the values\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    // console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  //all types of input text field changes will call the fxn and changes the value\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change (to check uncheck)\n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    // console.log(nam);\n    // console.log(isChecked);\n    if(nam === 'checkedItemsSkills'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      // document.getElementById(item).checked = true;\n    }\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n    else if(nam === 'checkedItemsHobbies')\n      this.setState(prevState => ({ checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked) }));\n    else if(nam === 'checkedItemsEmpStatus')\n      this.setState(prevState => ({ checkedItemsEmpStatus: prevState.checkedItemsEmpStatus.set(item, isChecked) }));\n    else if (nam === 'checkedItemsEngagementType')\n      this.setState(prevState => ({ checkedItemsEngagementType: prevState.checkedItemsEngagementType.set(item, isChecked) }));\n    else if (nam === 'checkedItemsBillable')\n      this.setState(prevState => ({ checkedItemsBillable: prevState.checkedItemsBillable.set(item, isChecked) }));\n  }\n\n\n\n  //show more skill filter option\n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  //show more filter filter option\n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n   //show more filter filter option this.state.managersExpanded\n   showMoreManagers(){\n    this.state.managersFilterShow === 10 ? (\n      this.setState({ managersFilterShow: this.state.MangersApi.length, managersExpanded: true })\n    ) : (\n      this.setState({ managersFilterShow: 10, managersExpanded: false })\n    )\n  }\n\n  //show more filter filter option this.state.managersExpanded\n  showMorePods() {\n    this.state.podsFilterShow === 10 ? (\n      this.setState({ podsFilterShow: this.state.PodsApi.length, podsExpanded: true })\n    ) : (\n      this.setState({ podsFilterShow: 10, podsExpanded: false })\n    )\n  }\n\n  showMoreHobbies(){\n    this.state.HobbiesFilterShow === 10 ? (\n      this.setState({ HobbiesFilterShow: this.state.hobbiesApi.length, hobbiesExpanded: true })\n    ) : (\n      this.setState({ HobbiesFilterShow: 10, hobbiesExpanded: false })\n    )\n\n  }\n\n  //next or back to view other emp cards if exists\n  changePage(direction) {\n    // console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n  AllCheckedItems(){\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbiesChecked = this.state.checkedItemsHobbies;\n    let EmpStatuschecked = this.state.checkedItemsEmpStatus;\n    let EngagementTypeChecked = this.state.checkedItemsEngagementType;\n    let billableChecked = this.state.checkedItemsBillable;\n    let checkedItemsTagList=[];\n    //storing all the checked items in array to display as tags\n    if(skillsChecked.size >0 || ManagersChecked.size >0  ||  podsChecked.size >0  || projectsChecked.size>0 || HobbiesChecked.size>0 || EmpStatuschecked.size>0 || EngagementTypeChecked.size>0 || billableChecked.size>0 ){\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n     \n      for (let i = 0; i < skillsChecked.size ; i++) {\n        let ps = iteratorS1.next().value;\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = { value: ps, filterField: \"skill\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n         \n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"manager\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"pod\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"project\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorH1 = HobbiesChecked.keys();\n      const iteratorH2 = HobbiesChecked.values();\n      for (let i = 0; i < HobbiesChecked.size; i++) {\n        let ps = iteratorH1.next().value;\n        if (iteratorH2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"hobby\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorES1 = EmpStatuschecked.keys();\n      const iteratorES2 = EmpStatuschecked.values();\n      for (let i = 0; i < EmpStatuschecked.size; i++) {\n        let ps = iteratorES1.next().value;\n        if (iteratorES2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"EmpStatus\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorET1 = EngagementTypeChecked.keys();\n      const iteratorET2 = EngagementTypeChecked.values();\n      for (let i = 0; i < EngagementTypeChecked.size; i++) {\n        let ps = iteratorET1.next().value;\n        if (iteratorET2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"EngagementType\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorB1 = billableChecked.keys();\n      const iteratorB2 = billableChecked.values();\n      for (let i = 0; i < billableChecked.size; i++) {\n        let ps = iteratorB1.next().value;\n        if (iteratorB2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"billable\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      // console.log(billableChecked);\n      // console.log(EngagementTypeChecked);\n      // console.log(checkedItemsTagList.length);\n      // console.log(checkedItemsTagList);\n  }\n  return checkedItemsTagList;\n\n  }\n\n  //if u click cancel on the selected tags the checkboxes should be unchecked auto\n  handleDelete = (chipToDelete) => () => {\n    // console.log(chipToDelete);\n\n    let nam = chipToDelete.filterField;\n    var isChecked = false;\n    var item = chipToDelete.value;;\n    // console.log(nam);\n    // console.log(isChecked);\n    if(nam === 'skill'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n      // console.log(event.target);\n    }\n    else if(nam === 'manager'){\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'pod'){\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'project'){\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'hobby'){\n      this.setState(prevState => ({ checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'EmpStatus'){\n      this.setState(prevState => ({ checkedItemsEmpStatus: prevState.checkedItemsEmpStatus.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'EngagementType'){\n      this.setState(prevState => ({ checkedItemsEngagementType: prevState.checkedItemsEngagementType.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'billable'){\n      this.setState(prevState => ({ checkedItemsBillable: prevState.checkedItemsBillable.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n  };\n\n  //checking the empdetails matches\n  //experience match employee's\n  CheckExperience(employeeExperience,expMinReq, expMaxReq){\n     //experience checking: whether the emp has meet the req experience of customer\n    if ((((parseInt(employeeExperience)) >= expMinReq) && (parseInt(employeeExperience) <= expMaxReq))) {\n      return true;\n    }\n    return false;\n  }\n\n    //name checking: whether the emp has matched the name\n  checkNameId(empName,empId,NameIdReq){\n    if (NameIdReq) {\n      if (((empName.toLowerCase()).includes(NameIdReq.toLowerCase())) || empId.includes(NameIdReq)) {\n       return true;\n        //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true;     //if customer not typed anything\n    }\n\n  }\n\n  //checking skills match\n  checkSkillsMatch(skillsChecked,empPrimarySkills,empSecondarySkills){\n    if (skillsChecked.size > 0) {  //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n      for (let i = 0; i < skillsChecked.size; i++) {  //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n        if (selectedSkill) {\n          let empPrimarySkillsArray = empPrimarySkills.toLowerCase().split(\",,\");\n          let empSecondarySkillsArray = empSecondarySkills.toLowerCase().split(\",,\");\n          if ( !(((empPrimarySkillsArray).includes(skillName)) || ((empSecondarySkillsArray).includes(skillName))) ) {\n            return false;  //if one is not in the profile then return false\n          }\n        }\n      }\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n\n  //managers Match checking\n  checkManagerMatch(ManagersChecked,EmpManager){\n    let managerMatch = false;\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n      for (let i = 0; i < ManagersChecked.size; i++) {\n          let selectedManger = iterator2.next().value;\n           let selectedMangerName = iterator1.next().value;\n        if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n          if (((EmpManager.toLowerCase()).includes(selectedMangerName))) {\n            managerMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n\n        } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {  //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n      if(managerMatch)\n        return true;\n      else\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  //check pods Match\n  checkPodsMatch(podsChecked,empPod){\n    let podsMatch = false;\n     if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n      for (let i = 0; i < podsChecked.size; i++) {\n          let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n          if (((empPod.toLowerCase()).includes(selectedPodName))) {\n\n            podsMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n\n        } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) { //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n       if (podsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }  \n    } else {\n      return true;\n    }\n  }\n\n //projects match\n  checkProjectMatch(projectsChecked,empProject){\n    let projectsMatch = false;\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n      for (let i = 0; i < projectsChecked.size; i++) {\n          let selectedProject = iterator2.next().value;\n          let selectedProjectName = iterator1.next().value;\n        if (selectedProject && !projectsMatch) { //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n          if (((empProject.toLowerCase()).includes(selectedProjectName))) {\n            projectsMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n\n        } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) { //if all the previous checked projects are unchecked\n          projectsMatch = true;  \n        }\n      }\n      if (projectsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }\n    } else {\n      return true;\n    }\n  }\n\n  //Hobbies match\n  // checkHobbiesMatch(hobbiesChecked,empHobbies){\n\n  //   if (hobbiesChecked.size > 0) {  //atleast one hobby is checked\n  //     const iterator1 = hobbiesChecked.keys();\n  //     const iterator2 = hobbiesChecked.values();\n  //     for (let i = 0; i < hobbiesChecked.size; i++) {  //checking all the checked hobby the emp has or not\n  //       let selectedHobby = iterator2.next().value;\n  //       let hobbyName = iterator1.next().value;\n  //       if (selectedHobby) {\n  //         if ( !(((empHobbies.toLowerCase()).includes(hobbyName))) ) {\n  //           return false;  //if one is not in the profile then return false\n  //         }\n  //       }\n  //     }\n  //     return true;\n  //   } else {\n  //     return true;\n  //   }\n  // }\n\n    //checking emp status match\n\n    checkEmpStatusMatch(EmployeeStatusChecked,EmpStatus){\n\n      let ESMatch = false;\n     if (EmployeeStatusChecked.size > 0) {\n      const iterator1 = EmployeeStatusChecked.keys();\n      const iterator2 = EmployeeStatusChecked.values();\n      let oneESAtleastChecked = false;\n      for (let i = 0; i < EmployeeStatusChecked.size; i++) {\n          let selectedES = iterator2.next().value; //true or false\n        let selectedESName = iterator1.next().value;\n\n        if (selectedES && !ESMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          oneESAtleastChecked = true;\n            if(((EmpStatus.toLowerCase()).includes(\"left\"))){\n              EmpStatus = \"Alumni\";\n            }\n          if (((EmpStatus.toLowerCase()).includes(selectedESName))) {\n\n            ESMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            ESMatch = false;\n          }\n\n        } else if ((!oneESAtleastChecked) && (i === EmployeeStatusChecked.size - 1)) { //if all the previous checked pods are unchecked\n          ESMatch = true;\n        }\n      }\n       if (ESMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }  \n    } else {\n      return true;\n    }\n     \n    }\n\n\n    // checking Engagement Type match\n\n    checkEngagementTypeMatch(EngagementTypeChecked,EngagementType){\n\n      let ETMatch = false;\n      if (EngagementTypeChecked.size > 0) {\n       const iterator1 = EngagementTypeChecked.keys();\n       const iterator2 = EngagementTypeChecked.values();\n       let oneETAtleastChecked = false;\n       for (let i = 0; i < EngagementTypeChecked.size; i++) {\n           let selectedET = iterator2.next().value; //true or false\n         let selectedETName = iterator1.next().value;\n \n         if (selectedET && !ETMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          oneETAtleastChecked = true;\n          if(((EngagementType).includes(\"T&amp;M\"))){\n            EngagementType = \"t&m\";\n          }\n          // console.log(EngagementType);\n          // console.log(selectedETName);\n           if (((EngagementType.toLowerCase()).includes(selectedETName))) {\n \n            ETMatch = true;\n            //  console.log(\"true inside loop\");\n           } else {\n            ETMatch = false;\n           }\n \n         } else if ((!oneETAtleastChecked) && (i === EngagementTypeChecked.size - 1)) { //if all the previous checked pods are unchecked\n          ETMatch = true;\n         }\n       }\n        if (ETMatch){\n         return true;\n        }  \n        else{\n         return false;\n        }  \n     } else {\n       return true;\n     }\n     \n    }\n\n    //checking billability match\n\n    checkBillableMatch(billableChecked,billable){\n\n      let billableMatch = false;\n      if (billableChecked.size > 0) {\n       const iterator1 = billableChecked.keys();\n       const iterator2 = billableChecked.values();\n       let oneBillableAtleastChecked = false;\n       for (let i = 0; i < billableChecked.size; i++) {\n           let selectedBillable = iterator2.next().value; //true or false\n         let selectedBillableName = iterator1.next().value;\n \n         if (selectedBillable && !billableMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          oneBillableAtleastChecked = true;\n           if (((billable.toLowerCase()).includes(selectedBillableName))) {\n \n            billableMatch = true;\n            //  console.log(\"true inside loop\");\n           } else {\n            billableMatch = false;\n           }\n \n         } else if ((!oneBillableAtleastChecked) && (i === billableChecked.size - 1)) { //if all the previous checked pods are unchecked\n          billableMatch = true;\n         }\n       }\n        if (billableMatch){\n         return true;\n        }  \n        else{\n         return false;\n        }  \n     } else {\n       return true;\n     }\n     \n    }\n\n\n  filteringTheEmp(){\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    // let HobbbiesChecked = this.state.checkedItemsHobbies;\n    let EmpStatusChecked = this.state.checkedItemsEmpStatus;\n    let EngagementTypeChecked = this.state.checkedItemsEngagementType;\n    let billableChecked = this.state.checkedItemsBillable;\n\n    let filteredEmployee= [];\n    Employees.map((x,index) => (\n      <div key={index}>{((() => {\n        if (this.CheckExperience(x.Experience, expMinReq, expMaxReq)\n          && this.checkNameId(x.name, x.Emp_id, nameReq)\n          && this.checkPodsMatch(podsChecked, x.Pod)\n          && this.checkProjectMatch(projectsChecked, x.current_working_project)\n          && this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills)\n          && this.checkManagerMatch(ManagersChecked, x.Manager)\n          // && this.checkHobbiesMatch(HobbbiesChecked, x.hobbies)\n          && this.checkEmpStatusMatch(EmpStatusChecked, x.employment_status)\n          && this.checkEngagementTypeMatch(EngagementTypeChecked,x.engagement_model)\n          && this.checkBillableMatch(billableChecked,x.billable)\n          ) {\n          filteredEmployee.push(x);\n        }\n      })())}\n      </div>\n    ))\n    return filteredEmployee;\n  }\n\n  FiltersHover(){\n    var x =  document.getElementById(\"filtersContainer\");\n    var y = document.getElementById(\"filterPage\");\n    var z = document.getElementById(\"filter-icon\");\n    // console.log(x.className);\n    if (x.className === \"reqForm\") {\n      x.className = \"filtersContainer\";\n      y.className = \"filter-containerMobile\";  \n      z.style.display = 'none';\n    } else {\n      x.className = \"reqForm\";\n      y.className = \"filter-container\";\n      z.style.display = 'block';\n    }\n  }\n\n\n  render() {\n    //initialisig the state variables for manipulations\n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    let podsFilterShowCust =this.state.podsFilterShow;\n    let managersFilterShowCust =this.state.managersFilterShow;\n    let projectsFilterShowCust =this.state.projectsFilterShow;\n    let HobbiesFilterShowCust = this.state.HobbiesFilterShow;\n    let filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems();  //getting all the checked items and storing to make tags\n    // console.log(filteredEmployee);\n\n\n    return (\n      <>\n     \n      <div className=\"filter-container\" id=\"filterPage\">\n        {/* different types of filters  */}\n        <div className=\"filter-icon\"  onClick={() => this.FiltersHover()} >\n        <BsFillFunnelFill id=\"filter-icon\"></BsFillFunnelFill>\n        </div>\n        <Scrollbars \n        style={{ height: \"100%\" }}\n          onScroll={this.handleScroll}\n          autoHide     // Hide delay in ms\n          autoHideTimeout={1000}   // Duration for hide animation in ms.\n          autoHideDuration={200}\n        >\n        <div className=\"reqForm\" id=\"filtersContainer\">\n        <div className=\"filter-icon\" id=\"clear-icon\" onClick={() => this.FiltersHover()} >\n            <ClearIcon ></ClearIcon>\n        </div>\n          <>\n          <div className=\"filtered-emp-count\">\n                <span className=\"filterName\">Employees: </span>\n                <p className=\"empCount\">{filteredEmployee.length}</p>\n              </div>\n            {/* name or id input filed*/}\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Enter name or Id\"\n                variant=\"outlined\"\n                // size=\"small\"\n                style={{ padding: \"10.5px 8px\", paddingLeft: 0, paddingBottom:0, width:\"100%\" }}\n                type=\"text\"\n                name=\"name\"\n                onChange={this.myChangeHandler}\n                className=\"InpcheckedItemsSkillsuttextField\"\n              />\n\n            {/* Experience slider*/}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <div className=\"exp-display\">\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n              </div>\n            </div>\n            <div  className=\"experienceSlider\" >\n            \n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n                style={{color:\"#ff8c4b\"}}\n              />\n            </div>\n\n            {/*  skills checkboxes*/}\n            <p className=\"filterName\"  style={{ paddingTop: 2}}>Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map((item,index) => (\n                    <tbody><tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()} \n                            key={index}\n                          /><>{item.name} ({item.count })</>\n                        </label>\n                      </td>\n                    </tr></tbody>\n                  ))\n                }\n                <tbody className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <tr><td>show less</td></tr>\n                  ) : (\n                    <tr><td>show more</td></tr>\n                  )}\n                </tbody>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\" style={{ paddingTop: 2}}>Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.slice(0, managersFilterShowCust).map((item,index) => (\n                    <tbody><tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            className=\"checkboxes\"\n                            key={index}\n                          /><>{item.name } ({item.count })</>\n                        </label>\n                      </td>\n                    </tr></tbody>\n                  ))\n                }\n                  {(this.state.MangersApi.length > 10)?\n                  <tbody className=\"showMore\"\n                    onClick={this.showMoreManagers}>\n                    {this.state.managersExpanded ? (\n                      <tr><td>show less</td></tr>\n                    ) : (\n                      <tr><td>show more</td></tr>\n                    )}\n                  </tbody> \n                :<></>}\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.slice(0, podsFilterShowCust).map((item,index) => (\n                   <tbody> <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            key={index}\n                          /><>{item.name} ({item.count })</>\n                        </label>\n                      </td>\n                    </tr></tbody>\n                  ))\n                  }\n                  {(this.state.PodsApi.length > 10) ?\n                    <tbody className=\"showMore\"\n                      onClick={this.showMorePods}>\n                      {this.state.podsExpanded ? (\n                        <tr><td>show less</td></tr>\n                      ) : (\n                        <tr><td>show more</td></tr>\n                      )}\n                    </tbody>\n                    : <></>\n                  }\n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.slice(0, projectsFilterShowCust).map((item,index) => (\n                    <tbody><tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            key={index}\n                          /><>{item.name.replace(\"&amp;\",\"&\")} ({item.count })</>\n                        </label>\n                      </td>\n                    </tr></tbody>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)?\n                  <tbody className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <tr><td>show less</td></tr>\n                    ) : (\n                      <tr><td>show more</td></tr>\n                    )}\n                  </tbody> \n                :<></>}\n \n              </table>\n            </form>\n\n             {/* Hobbbies checkbox selection */}\n             {/* <p className=\"filterName\">Hobbies :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.hobbiesApi.slice(0, HobbiesFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsHobbies'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                  }\n                  {(this.state.hobbiesApi.length > 10) ?\n                    <p className=\"showMore\"\n                      onClick={this.showMoreHobbies}>\n                      {this.state.hobbiesExpanded ? (\n                        <span>show less</span>\n                      ) : (\n                        <span>show more</span>\n                      )}\n                    </p>\n                    : console.log(\"less hobbies\")\n                  }\n              </table>\n            </form> */}\n\n\n            {/* emp status checkbox selection */}\n            <p className=\"filterName\">Employee Status :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.employeeStatusApi.slice(0, HobbiesFilterShowCust).map((item,index) => (\n                   <tbody> <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsEmpStatus'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            key={index}\n                          /><>{item.name} </>\n                        </label>\n                      </td>\n                    </tr></tbody>\n                  ))\n                  }\n                 \n              </table>\n            </form>\n\n       \n             {/* engagement model type checkbox selection */}\n             <p className=\"filterName\">Engagement Model :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.engagementTypeApi.map((item,index) => (\n                   <tbody> <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsEngagementType'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            key={index}\n                          /><>{item.name}</>\n                        </label>\n                      </td>\n                    </tr></tbody>\n                  ))\n                  }\n                 \n              </table>\n            </form>\n\n             {/* Billable checkbox selection */}\n             <p className=\"filterName\">Billable :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.billableApi.map((item,index) => (\n                   <tbody> <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsBillable'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            key={index}\n                          /><>{item.name}</>\n                        </label>\n                      </td>\n                    </tr></tbody>\n                  ))\n                  }\n                 \n              </table>\n            </form>\n\n\n          </>\n         \n        </div>\n        </Scrollbars>\n        {/* //displaying */}\n        <Scrollbars \n        style={{ height: 600 }}\n          onScroll={this.handleScroll}\n          autoHide     // Hide delay in ms\n          autoHideTimeout={1000}   // Duration for hide animation in ms.\n          autoHideDuration={200}\n        >\n          <div className=\"Employees\">\n\n            {/* selected filters as tags */}\n            {/* {console.log(this.state.checkedItemsTag)} */}\n            \n              <div className=\"selectedTags\">\n                {checkedItemsTagList.map((x,index) => (\n                  <>\n                    {(\n                      (() => {\n                        return (\n                          (\n                            <>\n                              <Chip\n                                label={x.value}\n                                // icon={icon}\n                                onDelete={this.handleDelete(x)}\n                                className=\"tags\"\n                                key={index}\n                              />\n                            </>\n                          )\n                        )\n                      })()\n                    )}\n                  </>\n                ))\n                }\n              </div>\n              \n         \n              {filteredEmployee.length > 0 ? <></> :\n                <>\n                  {(\n                    (() => {\n                      return ( //no result found\n                        <div className='NoResult'>\n                          <img alt=\"No result found\" src={NoResult}></img>\n                        </div>\n                      )\n                    })())\n                  }\n                </>\n              }\n\n              {/* Filtered Employees displaying */}\n              {filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map((employee,index) => (\n                < >\n                  {(\n                    (() => {\n                      return (\n                        (\n                          <EmployeeCard employee={employee}></EmployeeCard>\n                        )\n                      )\n                    })()\n                  )}\n                </>\n              ))\n              }\n           \n          </div>\n          </Scrollbars>\n        </div>\n        {/* next page or back button for viewing the cards */}\n        <div className=\"nextBack\">\n          {this.state.currentPage > 1 ?\n            <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; </button>\n            : null}{<button className=\"nextBackBttn\">{this.state.currentPage}</button>}\n          {filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ?\n            <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}> &raquo;</button>\n            : null}\n        </div>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}