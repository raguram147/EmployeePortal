{"ast":null,"code":"var _jsxFileName = \"/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config'; // import Typography from '@material-ui/core/Typography';\n\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif';\nimport Chip from '@material-ui/core/Chip'; // import Rating from \"@material-ui/lab/Rating\";\n\nimport { TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport emailIcon from \"../assets/email-logo.png\";\nimport { SocialIcon } from \"react-social-icons\";\n/*\n  state variables and api data: 20-68 lines\n  onchange functions 70-164\n  req Data initializations: 170-235\n  filters (Dynamic checkboxes,slider,input) html: 240-400\n  filtering employees based on filter logic: 401-550\n  displaying tags,emp cards,next/back buttons: 550-670\n*/\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueText = value => {\n      return `${value}`;\n    };\n\n    this.handleChange = (e, newValue) => {\n      console.log(newValue);\n      this.setState({\n        ExperienceMinMax: newValue\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleDelete = chipToDelete => () => {\n      console.log(chipToDelete);\n      let nam = chipToDelete.filterField;\n      var isChecked = false;\n      var item = chipToDelete.value;\n      ;\n      console.log(nam);\n      console.log(isChecked);\n\n      if (nam === 'skill') {\n        this.setState(prevState => ({\n          checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n        console.log(event.target);\n      } else if (nam === 'manager') {\n        this.setState(prevState => ({\n          checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'pod') {\n        this.setState(prevState => ({\n          checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'project') {\n        this.setState(prevState => ({\n          checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      }\n    };\n\n    this.state = {\n      Employees: [],\n      //api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow: 10,\n      //number of skill filters to be shown\n      projectsFilterShow: 10,\n      //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage: 1,\n      maxItemsPerPage: 9,\n      checkedItemsTag: [],\n      skillsCheckBox: false\n    };\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  } //fetching data from api\n\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/Employees').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/skills').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/manager').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/pod').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/projects').then(res => res.json())]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    });\n  } //Experience slider on change calls the fxn and changes the values\n\n\n  CheckBoxhandleChange(event) {\n    //skills,project,pod,manager checkeditems change \n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n\n    if (nam === 'checkedItemsSkills') {\n      this.setState(prevState => ({\n        checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n      })); // document.getElementById(item).checked = true;\n    } else if (nam === 'checkedItemsManager') this.setState(prevState => ({\n      checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n    }));else if (nam === 'checkedItemsPod') this.setState(prevState => ({\n      checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n    }));else if (nam === 'checkedItemsProjects') this.setState(prevState => ({\n      checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n    }));\n  } //show more skill filter option \n\n\n  showMoreSkills() {\n    this.state.skillsFilterShow === 10 ? this.setState({\n      skillsFilterShow: this.state.skillsApi.length,\n      skillsExpanded: true\n    }) : this.setState({\n      skillsFilterShow: 10,\n      skillsExpanded: false\n    });\n  } //show more filter filter option \n\n\n  showMoreProjects() {\n    this.state.projectsFilterShow === 10 ? this.setState({\n      projectsFilterShow: this.state.projectsApi.length,\n      projectsExpanded: true\n    }) : this.setState({\n      projectsFilterShow: 10,\n      projectsExpanded: false\n    });\n  } //next or back to view other emp cards if exists\n\n\n  changePage(direction) {\n    console.log(direction);\n\n    if (direction === 'back') {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    } else if (direction === 'next') {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  AllCheckedItems() {\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let checkedItemsTagList = []; //storing all the checked items in array to display as tags\n\n    if (skillsChecked.size > 0 || ManagersChecked.size > 0 || podsChecked.size > 0 || projectsChecked.size > 0) {\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        let ps = iteratorS1.next().value;\n\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = {\n            value: ps,\n            filterField: \"skill\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"manager\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"pod\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"project\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n    }\n\n    return checkedItemsTagList;\n  } //if u click cancel on the selected tags the checkboxes should be unchecked auto\n\n\n  //checking the empdetails matches\n  //experience match employee's\n  CheckExperience(employeeExperience, expMinReq, expMaxReq) {\n    //experience checking: whether the emp has meet the req experience of customer\n    if (parseInt(employeeExperience) >= expMinReq && parseInt(employeeExperience) <= expMaxReq) {\n      return true;\n    }\n\n    return false;\n  } //name checking: whether the emp has matched the name\n\n\n  checkNameId(empName, empId, NameIdReq) {\n    if (NameIdReq) {\n      if (empName.toLowerCase().includes(NameIdReq.toLowerCase()) || empId.includes(NameIdReq)) {\n        return true; //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true; //if customer not typed anything\n    }\n  } //checking skills match\n\n\n  checkSkillsMatch(skillsChecked, empPrimarySkills, empSecondarySkills) {\n    let skillsMatch;\n\n    if (skillsChecked.size > 0) {\n      //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n\n        if (selectedSkill) {\n          if (empPrimarySkills.toLowerCase().includes(skillName) || empSecondarySkills.toLowerCase().includes(skillName)) {\n            skillsMatch = true;\n          } else {\n            return false; //if one is not in the profile then return false\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return true;\n    }\n  } //managers Match checking\n\n\n  checkManagerMatch(ManagersChecked, EmpManager) {\n    let managerMatch = false;\n\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let selectedManger = iterator2.next().value;\n        let selectedMangerName = iterator1.next().value;\n\n        if (selectedManger && !managerMatch) {\n          //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n\n          if (EmpManager.toLowerCase().includes(selectedMangerName)) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n        } else if (!oneManagerAtleastChecked && i === ManagersChecked.size - 1) {\n          //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n\n      if (managerMatch) return true;else return false;\n    } else {\n      return true;\n    }\n  } //check pods Match\n\n\n  checkPodsMatch(podsChecked, empPod) {\n    let podsMatch = false;\n\n    if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) {\n          //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n\n          if (empPod.toLowerCase().includes(selectedPodName)) {\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n        } else if (!onePodAtleastChecked && i === podsChecked.size - 1) {\n          //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n\n      if (podsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  } //projects match\n\n\n  checkProjectMatch(projectsChecked, empProject) {\n    let projectsMatch = false;\n\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let selectedProject = iterator2.next().value;\n        let selectedProjectName = iterator1.next().value;\n\n        if (selectedProject && !projectsMatch) {\n          //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n\n          if (empProject.toLowerCase().includes(selectedProjectName)) {\n            projectsMatch = true; // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n        } else if (!oneProjectAtleastChecked && i === projectsChecked.size - 1) {\n          //if all the previous checked projects are unchecked\n          projectsMatch = true;\n        }\n      }\n\n      if (projectsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  filteringTheEmp() {\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let filteredEmployee = [];\n    Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: (() => {\n        var experienceMatch = this.CheckExperience(x.Experience, expMinReq, expMaxReq);\n        var skillsMatch = this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills);\n        var projectsMatch = this.checkProjectMatch(projectsChecked, x.current_working_project);\n        var nameMatch = this.checkNameId(x.name, x.Emp_id, nameReq);\n        var podsMatch = this.checkPodsMatch(podsChecked, x.Pod);\n        var managerMatch = this.checkManagerMatch(ManagersChecked, x.Manager);\n\n        if (experienceMatch && nameMatch && skillsMatch && managerMatch && podsMatch && projectsMatch) {\n          filteredEmployee.push(x);\n        }\n      })()\n    }, void 0, false));\n    return filteredEmployee;\n  }\n\n  render() {\n    //initialisig the state variables for manipulations \n    let skillsFilterShowCust = this.state.skillsFilterShow;\n    this.state.filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems(); //getting all the checked items and storing to make tags\n\n    console.log(checkedItemsTagList);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        id: \"filterPage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reqForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Enter name or Id\",\n              variant: \"outlined\",\n              style: {\n                marginTop: \"15px\",\n                padding: \"10.5px 8px\",\n                paddingLeft: 0\n              },\n              type: \"text\",\n              name: \"name\",\n              onChange: this.myChangeHandler,\n              className: \"InpcheckedItemsSkillsuttextField\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Experience-overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Experience: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", this.state.ExperienceMinMax[0], \" - \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"  \", this.state.ExperienceMinMax[1], \" years\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"experienceSlider\",\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                defaultValue: [0, 25],\n                value: this.ExperienceMinMax,\n                onChange: this.handleChange,\n                valueLabelDisplay: \"auto\",\n                \"aria-labelledby\": \"range-slider\",\n                getAriaValueText: this.valueText,\n                step: 1,\n                min: 0,\n                max: 45,\n                style: {\n                  color: \"#ff8c4b\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Skills :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        name: \"checkedItemsSkills\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreSkills,\n                  children: this.state.skillsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 21\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Managers :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: this.state.MangersApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsManager\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase(),\n                        className: \"checkboxes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 493,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"Pods :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: this.state.PodsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsPod\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 518,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"filterName\",\n              children: \"projects :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"CheckboxesTable\",\n                children: [this.state.projectsApi.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"checkedItemsProjects\",\n                        type: \"checkbox\",\n                        value: item.name.toLowerCase(),\n                        onChange: this.CheckBoxhandleChange,\n                        id: item.name.toLowerCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 543,\n                        columnNumber: 27\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 21\n                }, this)), this.state.projectsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"showMore\",\n                  onClick: this.showMoreProjects,\n                  children: this.state.projectsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show less\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"show more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this) : console.log(\"less products\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Employees\",\n          children: [console.log(this.state.checkedItemsTag), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectedTags\",\n            children: checkedItemsTagList.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: (() => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: x.value // icon={icon}\n                    ,\n                    onDelete: this.handleDelete(x),\n                    className: \"tags\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false);\n              })()\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 11\n          }, this), this.state.filteredEmployee.length > 0 ? console.log(this.state.filteredEmployee.length) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return (\n                /*#__PURE__*/\n                //no result found\n                _jsxDEV(\"div\", {\n                  className: \"NoResult\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"No result found\",\n                    src: NoResult\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 15\n                }, this)\n              );\n            })()\n          }, void 0, false), this.state.filteredEmployee.slice(this.state.currentPage * this.state.maxItemsPerPage - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: (() => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Employee-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"header\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"avatar\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `${config.drupal_url}/${employee.Profile_photo}`,\n                      height: \"200\",\n                      alt: \"profilephoto\",\n                      className: \"profilephoto\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 623,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Employee-description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"Name\",\n                    style: {\n                      marginBottom: \"1rem\"\n                    },\n                    children: employee.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: employee.role\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Manager-email\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textAlign: \"left\",\n                        fontSize: \"0.7rem\",\n                        marginBottom: \"5px\"\n                      },\n                      children: [\"Manager: \", employee.Manager]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"mailto:\" + employee.email,\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        style: {\n                          borderRadius: \"50%\",\n                          textAlign: \"right\",\n                          height: \"22px\",\n                          marginRight: \"14px\"\n                        },\n                        alt: \"email-icon\",\n                        src: emailIcon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 67\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 30\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"exp-linkedin\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textAlign: \"left\",\n                        fontSize: \"0.7rem\"\n                      },\n                      children: [\"Experience: \", employee.Experience, \" years\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 652,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(SocialIcon, {\n                      url: employee.linkedin_profile,\n                      bgColor: \"#282936\",\n                      style: {\n                        borderRadius: \"50%\",\n                        textAlign: \"right\",\n                        fontSize: \"0.7rem\",\n                        height: \"22px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 655,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"button\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                        href: \"/EmployeeDetails/\" + employee.Emp_id,\n                        children: \"View Profile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 659,\n                        columnNumber: 33\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 25\n              }, this);\n            })()\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextBack\",\n        children: [this.state.currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('back'),\n          children: \"\\xAB Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 8\n        }, this) : null, this.state.filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('next'),\n          children: \"Next \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 8\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/gurramkonda_y/Desktop/react/emp-portal/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","Chip","TextField","event","emailIcon","SocialIcon","EmployeeView","constructor","props","valueText","value","handleChange","e","newValue","console","log","setState","ExperienceMinMax","myChangeHandler","nam","target","name","val","handleDelete","chipToDelete","filterField","isChecked","item","prevState","checkedItemsSkills","set","document","getElementById","checked","checkedItemsManager","checkedItemsPod","checkedItemsProjects","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","skills","skillsFilterShow","projectsFilterShow","Map","skillsExpanded","projectsExpanded","filteredEmployee","currentPage","maxItemsPerPage","checkedItemsTag","skillsCheckBox","CheckBoxhandleChange","bind","showMoreSkills","showMoreProjects","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","length","changePage","direction","AllCheckedItems","skillsChecked","ManagersChecked","podsChecked","projectsChecked","checkedItemsTagList","size","iteratorS1","keys","iteratorS2","values","i","ps","next","tagsCheckedObj","push","iteratorM1","iteratorM2","iteratorP1","iteratorP2","iteratorPr1","iteratorPr2","CheckExperience","employeeExperience","expMinReq","expMaxReq","parseInt","checkNameId","empName","empId","NameIdReq","toLowerCase","includes","checkSkillsMatch","empPrimarySkills","empSecondarySkills","skillsMatch","iterator1","iterator2","selectedSkill","skillName","checkManagerMatch","EmpManager","managerMatch","oneManagerAtleastChecked","selectedManger","selectedMangerName","checkPodsMatch","empPod","podsMatch","onePodAtleastChecked","selectedPod","selectedPodName","checkProjectMatch","empProject","projectsMatch","oneProjectAtleastChecked","selectedProject","selectedProjectName","filteringTheEmp","nameReq","map","x","experienceMatch","Experience","primary_skills","secndary_skills","current_working_project","nameMatch","Emp_id","Pod","Manager","render","skillsFilterShowCust","marginTop","padding","paddingLeft","color","slice","employee","Profile_photo","marginBottom","role","textAlign","fontSize","email","borderRadius","height","marginRight","linkedin_profile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/FilterPage.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\nimport Chip from '@material-ui/core/Chip';\n// import Rating from \"@material-ui/lab/Rating\";\nimport {  TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport emailIcon from \"../assets/email-logo.png\";\nimport { SocialIcon } from \"react-social-icons\";\n\n/*\n  state variables and api data: 20-68 lines\n  onchange functions 70-164\n  req Data initializations: 170-235\n  filters (Dynamic checkboxes,slider,input) html: 240-400\n  filtering employees based on filter logic: 401-550\n  displaying tags,emp cards,next/back buttons: 550-670\n*/\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],//api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      ExperienceMinMax: [0, 25],\n      skillsExpanded: false,\n      projectsExpanded: false,\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:9,\n      checkedItemsTag : [],\n      skillsCheckBox: false\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n  }\n  //fetching data from api\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/projects').then(res => res.json()),\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData\n      });\n    })\n  }\n\n  //Experience slider on change calls the fxn and changes the values\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  //all types of input text field changes will call the fxn and changes the value\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change \n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'checkedItemsSkills'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      // document.getElementById(item).checked = true;\n    }\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n  }\n\n  //show more skill filter option \n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  //show more filter filter option \n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n  //next or back to view other emp cards if exists\n  changePage(direction) {\n    console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n  AllCheckedItems(){\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let checkedItemsTagList=[];\n    //storing all the checked items in array to display as tags\n    if(skillsChecked.size >0 || ManagersChecked.size >0  ||  podsChecked.size >0  || projectsChecked.size>0){\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n     \n      for (let i = 0; i < skillsChecked.size ; i++) {\n        let ps = iteratorS1.next().value;\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = { value: ps, filterField: \"skill\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n         \n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"manager\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"pod\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"project\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n  }\n  return checkedItemsTagList;\n\n  }\n\n  //if u click cancel on the selected tags the checkboxes should be unchecked auto\n  handleDelete = (chipToDelete) => () => {\n    console.log(chipToDelete);\n\n    let nam = chipToDelete.filterField;\n    var isChecked = false;\n    var item = chipToDelete.value;;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'skill'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n      console.log(event.target);\n    }\n    else if(nam === 'manager'){\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'pod'){\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'project'){\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n  };\n\n  //checking the empdetails matches\n  //experience match employee's\n  CheckExperience(employeeExperience,expMinReq, expMaxReq){\n     //experience checking: whether the emp has meet the req experience of customer\n    if ((((parseInt(employeeExperience)) >= expMinReq) && (parseInt(employeeExperience) <= expMaxReq))) {\n      return true;\n    }\n    return false;\n  }\n\n    //name checking: whether the emp has matched the name\n  checkNameId(empName,empId,NameIdReq){\n    if (NameIdReq) {\n      if (((empName.toLowerCase()).includes(NameIdReq.toLowerCase())) || empId.includes(NameIdReq)) {\n       return true;\n        //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true;     //if customer not typed anything\n    }\n\n  }\n\n  //checking skills match\n  checkSkillsMatch(skillsChecked,empPrimarySkills,empSecondarySkills){\n    let skillsMatch;\n    if (skillsChecked.size > 0) {  //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n      for (let i = 0; i < skillsChecked.size; i++) {  //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n        if (selectedSkill) {\n          if (((empPrimarySkills.toLowerCase()).includes(skillName)) || ((empSecondarySkills.toLowerCase()).includes(skillName))) {\n             skillsMatch =  true;\n          } else {\n            return false;  //if one is not in the profile then return false\n          }\n        }\n      }\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  //managers Match checking\n  checkManagerMatch(ManagersChecked,EmpManager){\n    let managerMatch = false;\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n      for (let i = 0; i < ManagersChecked.size; i++) {\n          let selectedManger = iterator2.next().value;\n           let selectedMangerName = iterator1.next().value;\n        if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n          if (((EmpManager.toLowerCase()).includes(selectedMangerName))) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n\n        } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {  //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n      if(managerMatch)\n        return true;\n      else\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  //check pods Match\n  checkPodsMatch(podsChecked,empPod){\n    let podsMatch = false;\n     if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n      for (let i = 0; i < podsChecked.size; i++) {\n          let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n          if (((empPod.toLowerCase()).includes(selectedPodName))) {\n\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n\n        } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) { //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n       if (podsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }  \n    } else {\n      return true;\n    }\n  }\n\n //projects match\n  checkProjectMatch(projectsChecked,empProject){\n    let projectsMatch = false;\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n      for (let i = 0; i < projectsChecked.size; i++) {\n          let selectedProject = iterator2.next().value;\n          let selectedProjectName = iterator1.next().value;\n        if (selectedProject && !projectsMatch) { //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n          if (((empProject.toLowerCase()).includes(selectedProjectName))) {\n            projectsMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n\n        } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) { //if all the previous checked projects are unchecked\n          projectsMatch = true;   \n        } \n      }\n      if (projectsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }\n    } else {\n      return true;\n    }\n  }\n\n  filteringTheEmp(){\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let filteredEmployee= [];\n    Employees.map(x => (\n      <>{((() => {\n        var experienceMatch = this.CheckExperience(x.Experience, expMinReq, expMaxReq);\n        var skillsMatch = this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills);\n        var projectsMatch = this.checkProjectMatch(projectsChecked, x.current_working_project);\n        var nameMatch = this.checkNameId(x.name, x.Emp_id, nameReq);\n        var podsMatch = this.checkPodsMatch(podsChecked, x.Pod);\n        var managerMatch = this.checkManagerMatch(ManagersChecked, x.Manager);\n\n        if (experienceMatch && nameMatch && skillsMatch && managerMatch && podsMatch && projectsMatch) {\n          filteredEmployee.push(x);\n        }\n      })())}\n      </>\n    ))\n    return filteredEmployee;\n  }\n\n\n  render() {\n    //initialisig the state variables for manipulations \n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    this.state.filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems();  //getting all the checked items and storing to make tags\n    console.log(checkedItemsTagList);\n\n    return (\n      <>\n      <div className=\"filter-container\" id=\"filterPage\">\n        {/* different types of filters  */}\n        <div className=\"reqForm\">\n          <form >\n            {/* name or id input filed*/}\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Enter name or Id\"\n                variant=\"outlined\"\n                style={{ marginTop: \"15px\", padding: \"10.5px 8px\", paddingLeft: 0 }}\n                type=\"text\"\n                name=\"name\"\n                onChange={this.myChangeHandler}\n                className=\"InpcheckedItemsSkillsuttextField\"\n              />\n\n            {/* Experience slider*/}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n                style={{color:\"#ff8c4b\"}}\n              />\n            </div>\n\n            {/*  skills checkboxes*/}\n            <p className=\"filterName\">Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                <p className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </p>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\">Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            className=\"checkboxes\"\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n    \n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name}\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)? \n                  <p className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n          </form>\n        </div>\n\n        {/* //displaying */}\n        <div className=\"Employees\">\n{/* selected filters as tags */}\n          {console.log(this.state.checkedItemsTag)}\n          <div className=\"selectedTags\">   \n          {checkedItemsTagList.map(x => ( \n            <>\n              {(\n                (() => {\n                  return (\n                    (\n                      <>\n                        <Chip\n                          label={x.value}\n                          // icon={icon}\n                          onDelete={this.handleDelete(x)}\n                          className=\"tags\"\n                        />\n                      </>\n                    )\n                  )\n                })()\n              )}\n            </>\n          ))\n          }\n          </div>\n\n          {this.state.filteredEmployee.length>0 ? console.log(this.state.filteredEmployee.length):\n          <>\n          {(\n          (()=>{\n            return(   //no result found\n              <div className='NoResult'>\n               <img alt= \"No result found\" src= {NoResult}></img>   \n              </div>\n              )})())\n          }\n          </>\n          }\n\n          {/* Filtered Employees displaying */}\n          {this.state.filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => (\n            <>\n              {(\n                (() => {\n                    return (\n                      ( \n                        <div className=\"Employee-details\">\n                          <header>\n                            <div className=\"avatar\">\n                              <img\n                                src={`${config.drupal_url}/${employee.Profile_photo}`}\n                                height=\"200\"\n                                alt=\"profilephoto\"\n                                className=\"profilephoto\"\n                              ></img>\n                            </div>\n                          </header>\n                          {/* {employee.name} */}\n                          <div className=\"Employee-description\">\n                            <p className=\"Name\" style={{ marginBottom: \"1rem\" }}>\n                              {employee.name}\n                            </p>\n                            {/* <p>{ employee.Emp_id }</p> */}\n                            <p>{employee.role}</p>\n                            <div className=\"Manager-email\">\n                            <p\n                              style={{\n                                textAlign: \"left\",\n                                fontSize: \"0.7rem\",\n                                marginBottom: \"5px\",\n                              }}\n                            >\n                              Manager: {employee.Manager}\n                            </p>\n                             <a href={\"mailto:\" + employee.email}><img style={{borderRadius:\"50%\", textAlign: \"right\",height: \"22px\", marginRight:\"14px\" }} alt= \"email-icon\" src={emailIcon}></img></a>\n                           \n                            </div>\n                            <div className=\"exp-linkedin\">\n                            <p style={{ textAlign: \"left\", fontSize: \"0.7rem\" }}>\n                              Experience: {employee.Experience} years\n                            </p>\n                            <SocialIcon url={employee.linkedin_profile} bgColor=\"#282936\" style={{borderRadius:\"50%\", textAlign: \"right\", fontSize: \"0.7rem\",height: \"22px\"  }} ></SocialIcon>\n                            </div>\n                            <button class=\"button\">\n                              <span>\n                                <a href={\"/EmployeeDetails/\" + employee.Emp_id}>View Profile</a>{\" \"}\n                              </span>\n                            </button>\n                          </div>\n                      </div>\n                      )\n                    )\n                })()\n              )}\n            </>\n          ))\n          \n          } \n        </div>\n      </div>\n      {/* next page or back button for viewing the cards */}\n      <div className=\"nextBack\">\n      {this.state.currentPage > 1 ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; Back</button>\n      : null}\n      {this.state.filteredEmployee.length  > this.state.currentPage * this.state.maxItemsPerPage ?\n       <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}>Next &raquo;</button>\n      : null}\n     </div>\n    </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}