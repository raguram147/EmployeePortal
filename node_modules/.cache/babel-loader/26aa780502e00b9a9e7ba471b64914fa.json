{"ast":null,"code":"var _jsxFileName = \"/home/raguram_s/lister-emp-portal/src/components/MiddleDashborad.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport '../components/styles/style.css'; // import HorizontalTimeline from \"react-horizontal-timeline\";\n\nimport dateFormat from \"dateformat\";\nimport Typist from 'react-typist';\nimport { useState } from \"react\";\n/*\n        Component       : It is the inner component of the Employee detials page repersents the middle part.\n        Author          : Created by Lister Raguram Sundaravadivel\n        Child-Components: NIL\n        Variables       : data[] (API JSON) ,VALUES ,Content\n        Libarries       : react-horizontal-timeline\n\n      \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MiddleDashborad = ({\n  data\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    value: 0,\n    previous: -1\n  }); // Values should be only date\n  // const VALUES = [\"2021-03-28\", \"2021-05-14\", \"2021-06-20\"];\n  // Description array corresponding to values\n\n  const Content = [{\n    title: \"Joined as Listerian\",\n    Sub: \"A new Phase of Journey Started here\",\n    Description: \"Lister Found my skills and gave me a oppertunites to show my best.\"\n  }, {\n    title: \"Billable\",\n    Description: \"He/She is a Billable employee\"\n  }, {\n    title: \"Project\",\n    Description: \"We have working on the Employee portal that try to connect our Lister across the distance. Where we can know about ourself and our team members and their experience with Lister.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MiddleDashBoard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"95%\",\n          height: \"85%\",\n          margin: \"0 \",\n          position: \"relative\",\n          top: \"10%\",\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Typist, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Hi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typist, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" First Sentence \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Typist.Delay, {\n            ms: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 3\n          }, this), \"This won't be animated until 500ms after the first sentenced is rendered\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MiddleDashborad, \"eSbDRADgIJTYLaft3TGP67z63JM=\");\n\n_c = MiddleDashborad;\nexport default MiddleDashborad;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiddleDashborad\");","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/components/MiddleDashborad.js"],"names":["React","dateFormat","Typist","useState","MiddleDashborad","data","state","setState","value","previous","Content","title","Sub","Description","width","height","margin","position","top","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gCAAP,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAAEK,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,QAAQ,EAAE,CAAC;AAAvB,GAAD,CAAlC,CADoC,CAEpC;AACF;AACA;;AACA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,qBADT;AAEEC,IAAAA,GAAG,EAAC,qCAFN;AAGEC,IAAAA,WAAW,EACT;AAJJ,GADc,EAOd;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,WAAW,EACT;AAHJ,GAPc,EAYd;AACEF,IAAAA,KAAK,EAAE,SADT;AAEEE,IAAAA,WAAW,EACT;AAHJ,GAZc,CAAhB;AAkBE,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGLC,UAAAA,MAAM,EAAE,IAHH;AAILC,UAAAA,QAAQ,EAAE,UAJL;AAKLC,UAAAA,GAAG,EAAE,KALA;AAMLC,UAAAA,KAAK,EAAE;AANF;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eA+BE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACA,QAAC,MAAD;AAAA,iCACI;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAME,QAAC,MAAD;AAAA,kCACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADQ,eAER,QAAC,MAAD,CAAQ,KAAR;AAAc,YAAA,EAAE,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFQ,eAGR;AAAA;AAAA;AAAA;AAAA,kBAHQ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqDD,CA5ED;;GAAMf,e;;KAAAA,e;AA8EN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport '../components/styles/style.css';\n// import HorizontalTimeline from \"react-horizontal-timeline\";\nimport dateFormat from \"dateformat\";\nimport Typist from 'react-typist';\nimport { useState } from \"react\";\n\n\n/*\n        Component       : It is the inner component of the Employee detials page repersents the middle part.\n        Author          : Created by Lister Raguram Sundaravadivel\n        Child-Components: NIL\n        Variables       : data[] (API JSON) ,VALUES ,Content\n        Libarries       : react-horizontal-timeline\n\n      \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */\nconst MiddleDashborad = ({ data }) => {\n  const [state, setState] = useState({ value: 0, previous: -1 });\n  // Values should be only date\n// const VALUES = [\"2021-03-28\", \"2021-05-14\", \"2021-06-20\"];\n// Description array corresponding to values\nconst Content = [\n  {\n    title: \"Joined as Listerian\",\n    Sub:\"A new Phase of Journey Started here\",\n    Description:\n      \"Lister Found my skills and gave me a oppertunites to show my best.\",\n  },\n  {\n    title: \"Billable\",\n    Description:\n      \"He/She is a Billable employee\",\n  },\n  {\n    title: \"Project\",\n    Description:\n      \"We have working on the Employee portal that try to connect our Lister across the distance. Where we can know about ourself and our team members and their experience with Lister.\",\n  },\n];\n  return (\n    <>\n      <div className=\"MiddleDashBoard\">\n        <div\n          style={{\n            width: \"95%\",\n            height: \"85%\",\n            margin: \"0 \",\n            position: \"relative\",\n            top: \"10%\",\n            color: \"white\",\n          }}\n        >\n          {/* <HorizontalTimeline\n            styles={{\n              background: \"#f8f8f8\",\n              foreground: \"#e16428\",\n              outline: \"#dfdfdf\",\n            }}\n            index={state.value}\n            indexClick={(index) => {\n              setState((prevState) => ({\n                value: index,\n                previous: prevState.value,\n              }));\n            }}\n            values={VALUES}\n            // labelWidth={}\n            // linePadding={1}\n            isTouchEnabled=\"true\"\n          /> */}\n          \n        </div>\n        <div className=\"text-center\">\n        <Typist>\n            <ul>\n              <li>Hi</li>\n            </ul>\n          </Typist>\n          <Typist>\n  <p> First Sentence </p>\n  <Typist.Delay ms={500} />\n  <br />\n  This won't be animated until 500ms after the first sentenced is rendered\n</Typist>\n          {/* <h1>{Content[state.value].title}</h1>\n          {data.map((x,index)=>(<h2>{dateFormat(x.date_of_joining, \"mmmm dS, yyyy\")}</h2>))}\n          <h3>{Content[state.value].Sub}</h3>\n          <p>{Content[state.value].Description}</p>*/}\n        </div> \n      </div>\n    </>\n  );\n};\n\nexport default MiddleDashborad;"]},"metadata":{},"sourceType":"module"}