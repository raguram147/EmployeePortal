{"ast":null,"code":"var _jsxFileName = \"/home/raguram_s/lister-emp-portal/src/components/FilterPage.js\";\nimport React, { Component } from 'react';\nimport '../components/styles/style.css';\nimport config from '../config'; // import Typography from '@material-ui/core/Typography';\n\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif';\nimport Chip from '@material-ui/core/Chip'; // import empGroup from '../assets/group-orange.png'\n\nimport { TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport { EmployeeCard } from './EmployeeCard';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { BsFillFunnelFill } from \"react-icons/bs\";\n/*\n  state variables and api data: 20-68 lines\n  onchange functions\n  filtering employees based on filter logic\n  req Data initializations\n  filters (Dynamic checkboxes,slider,input) html\n  displaying tags,emp cards,next/back button\n*/\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueText = value => {\n      return `${value}`;\n    };\n\n    this.handleChange = (e, newValue) => {\n      console.log(newValue);\n      this.setState({\n        ExperienceMinMax: newValue\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.handleDelete = chipToDelete => () => {\n      console.log(chipToDelete);\n      let nam = chipToDelete.filterField;\n      var isChecked = false;\n      var item = chipToDelete.value;\n      ;\n      console.log(nam);\n      console.log(isChecked);\n\n      if (nam === 'skill') {\n        this.setState(prevState => ({\n          checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n        console.log(event.target);\n      } else if (nam === 'manager') {\n        this.setState(prevState => ({\n          checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'pod') {\n        this.setState(prevState => ({\n          checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'project') {\n        this.setState(prevState => ({\n          checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'hobby') {\n        this.setState(prevState => ({\n          checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      } else if (nam === 'EmpStatus') {\n        this.setState(prevState => ({\n          checkedItemsEmpStatus: prevState.checkedItemsEmpStatus.set(item, isChecked)\n        }));\n        document.getElementById(item).checked = false;\n      }\n    };\n\n    this.state = {\n      Employees: [],\n      //api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      hobbiesApi: [],\n      employeeStatusApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow: 10,\n      //number of skill filters to be shown\n      projectsFilterShow: 10,\n      //number of projects filters to be shown\n      managersFilterShow: 10,\n      podsFilterShow: 10,\n      HobbiesFilterShow: 10,\n      skillsExpanded: false,\n      projectsExpanded: false,\n      managersExpanded: false,\n      podsExpanded: false,\n      hobbiesExpanded: false,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      checkedItemsHobbies: new Map(),\n      checkedItemsEmpStatus: new Map(),\n      ExperienceMinMax: [0, 35],\n      filteredEmployee: [],\n      currentPage: 1,\n      maxItemsPerPage: 12,\n      checkedItemsTag: [],\n      skillsCheckBox: false\n    };\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n    this.showMoreManagers = this.showMoreManagers.bind(this);\n    this.showMorePods = this.showMorePods.bind(this);\n    this.showMoreHobbies = this.showMoreHobbies.bind(this);\n  } //fetching data from api\n\n\n  componentDidMount() {\n    Promise.all([fetch(config.drupal_url + '/Employees').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/skills').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/manager').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/pod').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/projects').then(res => res.json()), fetch(config.drupal_url + '/TaxonomyOrder/hobbies').then(res => res.json()), fetch(config.drupal_url + '/Taxonomy/employee_status').then(res => res.json())]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData, urlSixData, urlSevenData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData,\n        hobbiesApi: urlSixData,\n        employeeStatusApi: urlSevenData\n      });\n    });\n  } //Experience slider on change calls the fxn and changes the values\n\n\n  CheckBoxhandleChange(event) {\n    //skills,project,pod,manager checkeditems change (to check uncheck)\n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n\n    if (nam === 'checkedItemsSkills') {\n      this.setState(prevState => ({\n        checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked)\n      })); // document.getElementById(item).checked = true;\n    } else if (nam === 'checkedItemsManager') this.setState(prevState => ({\n      checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked)\n    }));else if (nam === 'checkedItemsPod') this.setState(prevState => ({\n      checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked)\n    }));else if (nam === 'checkedItemsProjects') this.setState(prevState => ({\n      checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked)\n    }));else if (nam === 'checkedItemsHobbies') this.setState(prevState => ({\n      checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked)\n    }));else if (nam === 'checkedItemsEmpStatus') this.setState(prevState => ({\n      checkedItemsEmpStatus: prevState.checkedItemsEmpStatus.set(item, isChecked)\n    }));\n  } //show more skill filter option\n\n\n  showMoreSkills() {\n    this.state.skillsFilterShow === 10 ? this.setState({\n      skillsFilterShow: this.state.skillsApi.length,\n      skillsExpanded: true\n    }) : this.setState({\n      skillsFilterShow: 10,\n      skillsExpanded: false\n    });\n  } //show more filter filter option\n\n\n  showMoreProjects() {\n    this.state.projectsFilterShow === 10 ? this.setState({\n      projectsFilterShow: this.state.projectsApi.length,\n      projectsExpanded: true\n    }) : this.setState({\n      projectsFilterShow: 10,\n      projectsExpanded: false\n    });\n  } //show more filter filter option this.state.managersExpanded\n\n\n  showMoreManagers() {\n    this.state.managersFilterShow === 10 ? this.setState({\n      managersFilterShow: this.state.MangersApi.length,\n      managersExpanded: true\n    }) : this.setState({\n      managersFilterShow: 10,\n      managersExpanded: false\n    });\n  } //show more filter filter option this.state.managersExpanded\n\n\n  showMorePods() {\n    this.state.podsFilterShow === 10 ? this.setState({\n      podsFilterShow: this.state.PodsApi.length,\n      podsExpanded: true\n    }) : this.setState({\n      podsFilterShow: 10,\n      podsExpanded: false\n    });\n  }\n\n  showMoreHobbies() {\n    this.state.HobbiesFilterShow === 10 ? this.setState({\n      HobbiesFilterShow: this.state.hobbiesApi.length,\n      hobbiesExpanded: true\n    }) : this.setState({\n      HobbiesFilterShow: 10,\n      hobbiesExpanded: false\n    });\n  } //next or back to view other emp cards if exists\n\n\n  changePage(direction) {\n    console.log(direction);\n\n    if (direction === 'back') {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    } else if (direction === 'next') {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  AllCheckedItems() {\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbiesChecked = this.state.checkedItemsHobbies;\n    let EmpStatuschecked = this.state.checkedItemsEmpStatus;\n    let checkedItemsTagList = []; //storing all the checked items in array to display as tags\n\n    if (skillsChecked.size > 0 || ManagersChecked.size > 0 || podsChecked.size > 0 || projectsChecked.size > 0 || HobbiesChecked.size > 0 || EmpStatuschecked.size > 0) {\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        let ps = iteratorS1.next().value;\n\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = {\n            value: ps,\n            filterField: \"skill\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"manager\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"pod\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"project\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorH1 = HobbiesChecked.keys();\n      const iteratorH2 = HobbiesChecked.values();\n\n      for (let i = 0; i < HobbiesChecked.size; i++) {\n        let ps = iteratorH1.next().value;\n\n        if (iteratorH2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"hobby\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorES1 = EmpStatuschecked.keys();\n      const iteratorES2 = EmpStatuschecked.values();\n\n      for (let i = 0; i < EmpStatuschecked.size; i++) {\n        let ps = iteratorES1.next().value;\n\n        if (iteratorES2.next().value) {\n          let tagsCheckedObj = {\n            value: ps,\n            filterField: \"EmpStatus\"\n          };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      console.log(EmpStatuschecked);\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n    }\n\n    return checkedItemsTagList;\n  } //if u click cancel on the selected tags the checkboxes should be unchecked auto\n\n\n  //checking the empdetails matches\n  //experience match employee's\n  CheckExperience(employeeExperience, expMinReq, expMaxReq) {\n    //experience checking: whether the emp has meet the req experience of customer\n    if (parseInt(employeeExperience) >= expMinReq && parseInt(employeeExperience) <= expMaxReq) {\n      return true;\n    }\n\n    return false;\n  } //name checking: whether the emp has matched the name\n\n\n  checkNameId(empName, empId, NameIdReq) {\n    if (NameIdReq) {\n      if (empName.toLowerCase().includes(NameIdReq.toLowerCase()) || empId.includes(NameIdReq)) {\n        return true; //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true; //if customer not typed anything\n    }\n  } //checking skills match\n\n\n  checkSkillsMatch(skillsChecked, empPrimarySkills, empSecondarySkills) {\n    if (skillsChecked.size > 0) {\n      //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n\n      for (let i = 0; i < skillsChecked.size; i++) {\n        //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n\n        if (selectedSkill) {\n          if (!(empPrimarySkills.toLowerCase().includes(skillName) || empSecondarySkills.toLowerCase().includes(skillName))) {\n            return false; //if one is not in the profile then return false\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return true;\n    }\n  } //managers Match checking\n\n\n  checkManagerMatch(ManagersChecked, EmpManager) {\n    let managerMatch = false;\n\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let selectedManger = iterator2.next().value;\n        let selectedMangerName = iterator1.next().value;\n\n        if (selectedManger && !managerMatch) {\n          //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n\n          if (EmpManager.toLowerCase().includes(selectedMangerName)) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n        } else if (!oneManagerAtleastChecked && i === ManagersChecked.size - 1) {\n          //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n\n      if (managerMatch) return true;else return false;\n    } else {\n      return true;\n    }\n  } //check pods Match\n\n\n  checkPodsMatch(podsChecked, empPod) {\n    let podsMatch = false;\n\n    if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n\n      for (let i = 0; i < podsChecked.size; i++) {\n        let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) {\n          //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n\n          if (empPod.toLowerCase().includes(selectedPodName)) {\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n        } else if (!onePodAtleastChecked && i === podsChecked.size - 1) {\n          //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n\n      if (podsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  } //projects match\n\n\n  checkProjectMatch(projectsChecked, empProject) {\n    let projectsMatch = false;\n\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let selectedProject = iterator2.next().value;\n        let selectedProjectName = iterator1.next().value;\n\n        if (selectedProject && !projectsMatch) {\n          //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n\n          if (empProject.toLowerCase().includes(selectedProjectName)) {\n            projectsMatch = true; // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n        } else if (!oneProjectAtleastChecked && i === projectsChecked.size - 1) {\n          //if all the previous checked projects are unchecked\n          projectsMatch = true;\n        }\n      }\n\n      if (projectsMatch) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  } //Hobbies match\n\n\n  checkHobbiesMatch(hobbiesChecked, empHobbies) {\n    if (hobbiesChecked.size > 0) {\n      //atleast one hobby is checked\n      const iterator1 = hobbiesChecked.keys();\n      const iterator2 = hobbiesChecked.values();\n\n      for (let i = 0; i < hobbiesChecked.size; i++) {\n        //checking all the checked hobby the emp has or not\n        let selectedHobby = iterator2.next().value;\n        let hobbyName = iterator1.next().value;\n\n        if (selectedHobby) {\n          if (!empHobbies.toLowerCase().includes(hobbyName)) {\n            return false; //if one is not in the profile then return false\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return true;\n    }\n  } //checking emp status match\n\n\n  checkEmpStatusMatch(EmployeeStatusChecked, EmpStatus) {\n    if (EmployeeStatusChecked.size > 0) {\n      //atleast one hobby is checked\n      console.log(EmployeeStatusChecked);\n      console.log(EmpStatus);\n      const iterator1 = EmployeeStatusChecked.keys();\n      const iterator2 = EmployeeStatusChecked.values();\n\n      for (let i = 0; i < EmployeeStatusChecked.size; i++) {\n        //checking all the checked hobby the emp has or not\n        let selectedES = iterator2.next().value;\n        let ESName = iterator1.next().value;\n\n        if (selectedES) {\n          if (EmpStatus.toLowerCase().includes(\"left\")) {\n            EmpStatus = \"Alumni\";\n          }\n\n          if (!EmpStatus.toLowerCase().includes(ESName)) {\n            return false; //if one is not in the profile then return false\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  filteringTheEmp() {\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbbiesChecked = this.state.checkedItemsHobbies;\n    let EmpStatusChecked = this.state.checkedItemsEmpStatus;\n    let filteredEmployee = [];\n    Employees.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: (() => {\n        if (this.CheckExperience(x.Experience, expMinReq, expMaxReq) && this.checkNameId(x.name, x.Emp_id, nameReq) && this.checkPodsMatch(podsChecked, x.Pod) && this.checkProjectMatch(projectsChecked, x.current_working_project) && this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills) && this.checkManagerMatch(ManagersChecked, x.Manager) && this.checkHobbiesMatch(HobbbiesChecked, x.hobbies) && this.checkEmpStatusMatch(EmpStatusChecked, x.employment_status)) {\n          filteredEmployee.push(x);\n        }\n      })()\n    }, void 0, false));\n    return filteredEmployee;\n  }\n\n  FiltersHover() {\n    var x = document.getElementById(\"filtersContainer\");\n    var y = document.getElementById(\"filterPage\");\n    var z = document.getElementById(\"filter-icon\");\n    console.log(x.className);\n\n    if (x.className === \"reqForm\") {\n      x.className = \"filtersContainer\";\n      y.className = \"filter-containerMobile\";\n      z.style.display = 'none';\n    } else {\n      x.className = \"reqForm\";\n      y.className = \"filter-container\";\n      z.style.display = 'block';\n    }\n  }\n\n  render() {\n    //initialisig the state variables for manipulations\n    let skillsFilterShowCust = this.state.skillsFilterShow;\n    let podsFilterShowCust = this.state.podsFilterShow;\n    let managersFilterShowCust = this.state.managersFilterShow;\n    let projectsFilterShowCust = this.state.projectsFilterShow;\n    let HobbiesFilterShowCust = this.state.HobbiesFilterShow;\n    let filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems(); //getting all the checked items and storing to make tags\n\n    console.log(filteredEmployee);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        id: \"filterPage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"filter-icon\",\n          onClick: () => this.FiltersHover(),\n          children: /*#__PURE__*/_jsxDEV(BsFillFunnelFill, {\n            id: \"filter-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbars, {\n          style: {\n            height: \"100%\"\n          },\n          onScroll: this.handleScroll,\n          autoHide: true // Hide delay in ms\n          ,\n          autoHideTimeout: 1000 // Duration for hide animation in ms.\n          ,\n          autoHideDuration: 200,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reqForm\",\n            id: \"filtersContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"filter-icon\",\n              id: \"clear-icon\",\n              onClick: () => this.FiltersHover(),\n              children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filtered-emp-count\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"filterName\",\n                  children: \"Employees: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empCount\",\n                  children: filteredEmployee.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"Enter name or Id\",\n                variant: \"outlined\" // size=\"small\"\n                ,\n                style: {\n                  padding: \"10.5px 8px\",\n                  paddingLeft: 0,\n                  paddingBottom: 0,\n                  width: \"100%\"\n                },\n                type: \"text\",\n                name: \"name\",\n                onChange: this.myChangeHandler,\n                className: \"InpcheckedItemsSkillsuttextField\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Experience-overview\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"filterName\",\n                  children: \"Experience: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"exp-display\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\" \", this.state.ExperienceMinMax[0], \" - \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"  \", this.state.ExperienceMinMax[1], \" years\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"experienceSlider\",\n                children: /*#__PURE__*/_jsxDEV(Slider, {\n                  defaultValue: [0, 25],\n                  value: this.ExperienceMinMax,\n                  onChange: this.handleChange,\n                  valueLabelDisplay: \"auto\",\n                  \"aria-labelledby\": \"range-slider\",\n                  getAriaValueText: this.valueText,\n                  step: 1,\n                  min: 0,\n                  max: 45,\n                  style: {\n                    color: \"#ff8c4b\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                style: {\n                  paddingTop: 2\n                },\n                children: \"Skills :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          name: \"checkedItemsSkills\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 640,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 639,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 21\n                  }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreSkills,\n                    children: this.state.skillsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 655,\n                      columnNumber: 21\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                style: {\n                  paddingTop: 2\n                },\n                children: \"Managers :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.MangersApi.slice(0, managersFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsManager\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase(),\n                          className: \"checkboxes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 672,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 671,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 21\n                  }, this)), this.state.MangersApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreManagers,\n                    children: this.state.managersExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 23\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 691,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 19\n                  }, this) : console.log(\"less managers\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Pods :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.PodsApi.slice(0, podsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsPod\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 707,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 706,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 21\n                  }, this)), this.state.PodsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMorePods,\n                    children: this.state.podsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 723,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 21\n                  }, this) : console.log(\"less pods\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"projects :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.projectsApi.slice(0, projectsFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsProjects\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 742,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 741,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 21\n                  }, this)), this.state.projectsApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreProjects,\n                    children: this.state.projectsExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 758,\n                      columnNumber: 23\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 19\n                  }, this) : console.log(\"less products\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Hobbies :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: [this.state.hobbiesApi.slice(0, HobbiesFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsHobbies\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 777,\n                          columnNumber: 27\n                        }, this), \" \", item.name, \" (\", item.count, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 776,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 775,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 21\n                  }, this)), this.state.hobbiesApi.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"showMore\",\n                    onClick: this.showMoreHobbies,\n                    children: this.state.hobbiesExpanded ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show less\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"show more\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 795,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 790,\n                    columnNumber: 21\n                  }, this) : console.log(\"less hobbies\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"filterName\",\n                children: \"Employee Status :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"CheckboxesTable\",\n                  children: this.state.employeeStatusApi.slice(0, HobbiesFilterShowCust).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"checkedItemsEmpStatus\",\n                          type: \"checkbox\",\n                          value: item.name.toLowerCase(),\n                          onChange: this.CheckBoxhandleChange,\n                          id: item.name.toLowerCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 813,\n                          columnNumber: 27\n                        }, this), \" \", item.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 812,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbars, {\n          style: {\n            height: 600\n          },\n          onScroll: this.handleScroll,\n          autoHide: true // Hide delay in ms\n          ,\n          autoHideTimeout: 1000 // Duration for hide animation in ms.\n          ,\n          autoHideDuration: 200,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Employees\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectedTags\",\n              children: checkedItemsTagList.map(x => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: (() => {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: x.value // icon={icon}\n                      ,\n                      onDelete: this.handleDelete(x),\n                      className: \"tags\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 855,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false);\n                })()\n              }, void 0, false))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 15\n            }, this), filteredEmployee.length > 0 ? console.log(filteredEmployee.length) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: (() => {\n                return (\n                  /*#__PURE__*/\n                  //no result found\n                  _jsxDEV(\"div\", {\n                    className: \"NoResult\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      alt: \"No result found\",\n                      src: NoResult\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 882,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 25\n                  }, this)\n                );\n              })()\n            }, void 0, false), filteredEmployee.slice(this.state.currentPage * this.state.maxItemsPerPage - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: (() => {\n                return /*#__PURE__*/_jsxDEV(EmployeeCard, {\n                  employee: employee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 27\n                }, this);\n              })()\n            }, void 0, false))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nextBack\",\n        children: [this.state.currentPage > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('back'),\n          children: \"\\xAB \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 13\n        }, this) : null, filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nextBackBttn\",\n          onClick: () => this.changePage('next'),\n          children: \" \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/components/FilterPage.js"],"names":["React","Component","config","Slider","NoResult","Chip","TextField","event","EmployeeCard","Scrollbars","ClearIcon","BsFillFunnelFill","EmployeeView","constructor","props","valueText","value","handleChange","e","newValue","console","log","setState","ExperienceMinMax","myChangeHandler","nam","target","name","val","handleDelete","chipToDelete","filterField","isChecked","item","prevState","checkedItemsSkills","set","document","getElementById","checked","checkedItemsManager","checkedItemsPod","checkedItemsProjects","checkedItemsHobbies","checkedItemsEmpStatus","state","Employees","skillsApi","MangersApi","PodsApi","projectsApi","hobbiesApi","employeeStatusApi","skills","skillsFilterShow","projectsFilterShow","managersFilterShow","podsFilterShow","HobbiesFilterShow","skillsExpanded","projectsExpanded","managersExpanded","podsExpanded","hobbiesExpanded","Map","filteredEmployee","currentPage","maxItemsPerPage","checkedItemsTag","skillsCheckBox","CheckBoxhandleChange","bind","showMoreSkills","showMoreProjects","showMoreManagers","showMorePods","showMoreHobbies","componentDidMount","Promise","all","fetch","drupal_url","then","res","json","urlOneData","urlTwoData","urlThreeData","urlFourData","urlFiveData","urlSixData","urlSevenData","length","changePage","direction","AllCheckedItems","skillsChecked","ManagersChecked","podsChecked","projectsChecked","HobbiesChecked","EmpStatuschecked","checkedItemsTagList","size","iteratorS1","keys","iteratorS2","values","i","ps","next","tagsCheckedObj","push","iteratorM1","iteratorM2","iteratorP1","iteratorP2","iteratorPr1","iteratorPr2","iteratorH1","iteratorH2","iteratorES1","iteratorES2","CheckExperience","employeeExperience","expMinReq","expMaxReq","parseInt","checkNameId","empName","empId","NameIdReq","toLowerCase","includes","checkSkillsMatch","empPrimarySkills","empSecondarySkills","iterator1","iterator2","selectedSkill","skillName","checkManagerMatch","EmpManager","managerMatch","oneManagerAtleastChecked","selectedManger","selectedMangerName","checkPodsMatch","empPod","podsMatch","onePodAtleastChecked","selectedPod","selectedPodName","checkProjectMatch","empProject","projectsMatch","oneProjectAtleastChecked","selectedProject","selectedProjectName","checkHobbiesMatch","hobbiesChecked","empHobbies","selectedHobby","hobbyName","checkEmpStatusMatch","EmployeeStatusChecked","EmpStatus","selectedES","ESName","filteringTheEmp","nameReq","HobbbiesChecked","EmpStatusChecked","map","x","Experience","Emp_id","Pod","current_working_project","primary_skills","secndary_skills","Manager","hobbies","employment_status","FiltersHover","y","z","className","style","display","render","skillsFilterShowCust","podsFilterShowCust","managersFilterShowCust","projectsFilterShowCust","HobbiesFilterShowCust","height","handleScroll","padding","paddingLeft","paddingBottom","width","color","paddingTop","slice","count","employee"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gCAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,SAAUC,SAAV,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,eAAe,MAAMC,YAAN,SAA2BX,SAA3B,CAAqC;AAClDY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoEnBC,SApEmB,GAoENC,KAAD,IAAW;AACrB,aAAQ,GAAEA,KAAM,EAAhB;AACD,KAtEkB;;AAAA,SAuEnBC,YAvEmB,GAuEJ,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAEJ;AAApB,OAAd;AACD,KA1EkB;;AAAA,SA6EnBK,eA7EmB,GA6EAjB,KAAD,IAAW;AAC3B,UAAIkB,GAAG,GAAGlB,KAAK,CAACmB,MAAN,CAAaC,IAAvB;AACA,UAAIC,GAAG,GAAGrB,KAAK,CAACmB,MAAN,CAAaV,KAAvB;AACA,WAAKM,QAAL,CAAc;AAAE,SAACG,GAAD,GAAOG;AAAT,OAAd;AACD,KAjFkB;;AAAA,SAuPnBC,YAvPmB,GAuPHC,YAAD,IAAkB,MAAM;AACrCV,MAAAA,OAAO,CAACC,GAAR,CAAYS,YAAZ;AAEA,UAAIL,GAAG,GAAGK,YAAY,CAACC,WAAvB;AACA,UAAIC,SAAS,GAAG,KAAhB;AACA,UAAIC,IAAI,GAAGH,YAAY,CAACd,KAAxB;AAA8B;AAC9BI,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYW,SAAZ;;AACA,UAAGP,GAAG,KAAK,OAAX,EAAmB;AACjB,aAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEC,UAAAA,kBAAkB,EAAED,SAAS,CAACC,kBAAV,CAA6BC,GAA7B,CAAiCH,IAAjC,EAAuCD,SAAvC;AAAtB,SAAL,CAAvB;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwBL,IAAxB,EAA8BM,OAA9B,GAAwC,KAAxC;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACmB,MAAlB;AACD,OAJD,MAKK,IAAGD,GAAG,KAAK,SAAX,EAAqB;AACxB,aAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEM,UAAAA,mBAAmB,EAAEN,SAAS,CAACM,mBAAV,CAA8BJ,GAA9B,CAAkCH,IAAlC,EAAwCD,SAAxC;AAAvB,SAAL,CAAvB;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwBL,IAAxB,EAA8BM,OAA9B,GAAwC,KAAxC;AACD,OAHI,MAIA,IAAGd,GAAG,KAAK,KAAX,EAAiB;AACpB,aAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEO,UAAAA,eAAe,EAAEP,SAAS,CAACO,eAAV,CAA0BL,GAA1B,CAA8BH,IAA9B,EAAoCD,SAApC;AAAnB,SAAL,CAAvB;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwBL,IAAxB,EAA8BM,OAA9B,GAAwC,KAAxC;AACD,OAHI,MAIA,IAAGd,GAAG,KAAK,SAAX,EAAqB;AACxB,aAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEQ,UAAAA,oBAAoB,EAAER,SAAS,CAACQ,oBAAV,CAA+BN,GAA/B,CAAmCH,IAAnC,EAAyCD,SAAzC;AAAxB,SAAL,CAAvB;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwBL,IAAxB,EAA8BM,OAA9B,GAAwC,KAAxC;AACD,OAHI,MAIA,IAAGd,GAAG,KAAK,OAAX,EAAmB;AACtB,aAAKH,QAAL,CAAcY,SAAS,KAAK;AAAES,UAAAA,mBAAmB,EAAET,SAAS,CAACS,mBAAV,CAA8BP,GAA9B,CAAkCH,IAAlC,EAAwCD,SAAxC;AAAvB,SAAL,CAAvB;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwBL,IAAxB,EAA8BM,OAA9B,GAAwC,KAAxC;AACD,OAHI,MAIA,IAAGd,GAAG,KAAK,WAAX,EAAuB;AAC1B,aAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEU,UAAAA,qBAAqB,EAAEV,SAAS,CAACU,qBAAV,CAAgCR,GAAhC,CAAoCH,IAApC,EAA0CD,SAA1C;AAAzB,SAAL,CAAvB;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwBL,IAAxB,EAA8BM,OAA9B,GAAwC,KAAxC;AACD;AACF,KAxRkB;;AAGjB,SAAKM,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AACG;AACdC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,WAAW,EAAE,EALF;AAMXC,MAAAA,UAAU,EAAE,EAND;AAOXC,MAAAA,iBAAiB,EAAE,EAPR;AAQXC,MAAAA,MAAM,EAAE,EARG;AASX1B,MAAAA,IAAI,EAAE,EATK;AAUX2B,MAAAA,gBAAgB,EAAC,EAVN;AAUY;AACvBC,MAAAA,kBAAkB,EAAC,EAXR;AAWc;AACzBC,MAAAA,kBAAkB,EAAC,EAZR;AAaXC,MAAAA,cAAc,EAAC,EAbJ;AAcXC,MAAAA,iBAAiB,EAAC,EAdP;AAeXC,MAAAA,cAAc,EAAE,KAfL;AAgBXC,MAAAA,gBAAgB,EAAE,KAhBP;AAiBXC,MAAAA,gBAAgB,EAAE,KAjBP;AAkBXC,MAAAA,YAAY,EAAC,KAlBF;AAmBXC,MAAAA,eAAe,EAAC,KAnBL;AAoBX5B,MAAAA,kBAAkB,EAAE,IAAI6B,GAAJ,EApBT;AAqBXxB,MAAAA,mBAAmB,EAAE,IAAIwB,GAAJ,EArBV;AAsBXvB,MAAAA,eAAe,EAAE,IAAIuB,GAAJ,EAtBN;AAuBXtB,MAAAA,oBAAoB,EAAE,IAAIsB,GAAJ,EAvBX;AAwBXrB,MAAAA,mBAAmB,EAAE,IAAIqB,GAAJ,EAxBV;AAyBXpB,MAAAA,qBAAqB,EAAE,IAAIoB,GAAJ,EAzBZ;AA0BXzC,MAAAA,gBAAgB,EAAE,CAAC,CAAD,EAAI,EAAJ,CA1BP;AA2BX0C,MAAAA,gBAAgB,EAAE,EA3BP;AA4BXC,MAAAA,WAAW,EAAE,CA5BF;AA6BXC,MAAAA,eAAe,EAAC,EA7BL;AA8BXC,MAAAA,eAAe,EAAG,EA9BP;AA+BXC,MAAAA,cAAc,EAAE;AA/BL,KAAb;AAkCA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKK,eAAL,GAAuB,KAAKA,eAAL,CAAqBL,IAArB,CAA0B,IAA1B,CAAvB;AACD,GA5CiD,CA6ClD;;;AACAM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,CAAC9E,MAAM,CAAC+E,UAAP,GAAoB,YAArB,CAAL,CAAwCC,IAAxC,CAA6CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAApD,CADU,EAEVJ,KAAK,CAAC9E,MAAM,CAAC+E,UAAP,GAAoB,uBAArB,CAAL,CAAmDC,IAAnD,CAAwDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA/D,CAFU,EAGVJ,KAAK,CAAC9E,MAAM,CAAC+E,UAAP,GAAoB,wBAArB,CAAL,CAAoDC,IAApD,CAAyDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhE,CAHU,EAIVJ,KAAK,CAAC9E,MAAM,CAAC+E,UAAP,GAAoB,oBAArB,CAAL,CAAgDC,IAAhD,CAAqDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA5D,CAJU,EAKVJ,KAAK,CAAC9E,MAAM,CAAC+E,UAAP,GAAoB,yBAArB,CAAL,CAAqDC,IAArD,CAA0DC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjE,CALU,EAMVJ,KAAK,CAAC9E,MAAM,CAAC+E,UAAP,GAAoB,wBAArB,CAAL,CAAoDC,IAApD,CAAyDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhE,CANU,EAOVJ,KAAK,CAAC9E,MAAM,CAAC+E,UAAP,GAAoB,2BAArB,CAAL,CAAuDC,IAAvD,CAA4DC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAnE,CAPU,CAAZ,EAQGF,IARH,CAQQ,CAAC,CAACG,UAAD,EAAaC,UAAb,EAAyBC,YAAzB,EAAuCC,WAAvC,EAAoDC,WAApD,EAAiEC,UAAjE,EAA6EC,YAA7E,CAAD,KAAgG;AACtG,WAAKrE,QAAL,CAAc;AACZwB,QAAAA,SAAS,EAAEuC,UADC;AAEZtC,QAAAA,SAAS,EAAEuC,UAFC;AAGZtC,QAAAA,UAAU,EAAEuC,YAHA;AAIZtC,QAAAA,OAAO,EAAEuC,WAJG;AAKZtC,QAAAA,WAAW,EAAEuC,WALD;AAMZtC,QAAAA,UAAU,EAAEuC,UANA;AAOZtC,QAAAA,iBAAiB,EAACuC;AAPN,OAAd;AASD,KAlBD;AAmBD,GAlEiD,CAoElD;;;AAiBArB,EAAAA,oBAAoB,CAAC/D,KAAD,EAAQ;AAAI;AAC9B,QAAIkB,GAAG,GAAGlB,KAAK,CAACmB,MAAN,CAAaC,IAAvB;AACA,QAAIK,SAAS,GAAGzB,KAAK,CAACmB,MAAN,CAAaa,OAA7B;AACA,QAAIN,IAAI,GAAG1B,KAAK,CAACmB,MAAN,CAAaV,KAAxB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYW,SAAZ;;AACA,QAAGP,GAAG,KAAK,oBAAX,EAAgC;AAC9B,WAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEC,QAAAA,kBAAkB,EAAED,SAAS,CAACC,kBAAV,CAA6BC,GAA7B,CAAiCH,IAAjC,EAAuCD,SAAvC;AAAtB,OAAL,CAAvB,EAD8B,CAE9B;AACD,KAHD,MAIK,IAAGP,GAAG,KAAK,qBAAX,EACH,KAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEM,MAAAA,mBAAmB,EAAEN,SAAS,CAACM,mBAAV,CAA8BJ,GAA9B,CAAkCH,IAAlC,EAAwCD,SAAxC;AAAvB,KAAL,CAAvB,EADG,KAEA,IAAGP,GAAG,KAAK,iBAAX,EACH,KAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEO,MAAAA,eAAe,EAAEP,SAAS,CAACO,eAAV,CAA0BL,GAA1B,CAA8BH,IAA9B,EAAoCD,SAApC;AAAnB,KAAL,CAAvB,EADG,KAEA,IAAGP,GAAG,KAAK,sBAAX,EACH,KAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEQ,MAAAA,oBAAoB,EAAER,SAAS,CAACQ,oBAAV,CAA+BN,GAA/B,CAAmCH,IAAnC,EAAyCD,SAAzC;AAAxB,KAAL,CAAvB,EADG,KAEA,IAAGP,GAAG,KAAK,qBAAX,EACH,KAAKH,QAAL,CAAcY,SAAS,KAAK;AAAES,MAAAA,mBAAmB,EAAET,SAAS,CAACS,mBAAV,CAA8BP,GAA9B,CAAkCH,IAAlC,EAAwCD,SAAxC;AAAvB,KAAL,CAAvB,EADG,KAEA,IAAGP,GAAG,KAAK,uBAAX,EACH,KAAKH,QAAL,CAAcY,SAAS,KAAK;AAAEU,MAAAA,qBAAqB,EAAEV,SAAS,CAACU,qBAAV,CAAgCR,GAAhC,CAAoCH,IAApC,EAA0CD,SAA1C;AAAzB,KAAL,CAAvB;AACH,GAzGiD,CA6GlD;;;AACAwC,EAAAA,cAAc,GAAE;AACd,SAAK3B,KAAL,CAAWS,gBAAX,KAAgC,EAAhC,GACE,KAAKhC,QAAL,CAAc;AAAEgC,MAAAA,gBAAgB,EAAE,KAAKT,KAAL,CAAWE,SAAX,CAAqB6C,MAAzC;AAAiDjC,MAAAA,cAAc,EAAE;AAAjE,KAAd,CADF,GAGE,KAAKrC,QAAL,CAAc;AAAEgC,MAAAA,gBAAgB,EAAE,EAApB;AAAwBK,MAAAA,cAAc,EAAE;AAAxC,KAAd,CAHF;AAKD,GApHiD,CAsHlD;;;AACAc,EAAAA,gBAAgB,GAAE;AAChB,SAAK5B,KAAL,CAAWU,kBAAX,KAAkC,EAAlC,GACE,KAAKjC,QAAL,CAAc;AAAEiC,MAAAA,kBAAkB,EAAE,KAAKV,KAAL,CAAWK,WAAX,CAAuB0C,MAA7C;AAAqDhC,MAAAA,gBAAgB,EAAE;AAAvE,KAAd,CADF,GAGE,KAAKtC,QAAL,CAAc;AAAEiC,MAAAA,kBAAkB,EAAE,EAAtB;AAA0BK,MAAAA,gBAAgB,EAAE;AAA5C,KAAd,CAHF;AAKD,GA7HiD,CA+HjD;;;AACAc,EAAAA,gBAAgB,GAAE;AACjB,SAAK7B,KAAL,CAAWW,kBAAX,KAAkC,EAAlC,GACE,KAAKlC,QAAL,CAAc;AAAEkC,MAAAA,kBAAkB,EAAE,KAAKX,KAAL,CAAWG,UAAX,CAAsB4C,MAA5C;AAAoD/B,MAAAA,gBAAgB,EAAE;AAAtE,KAAd,CADF,GAGE,KAAKvC,QAAL,CAAc;AAAEkC,MAAAA,kBAAkB,EAAE,EAAtB;AAA0BK,MAAAA,gBAAgB,EAAE;AAA5C,KAAd,CAHF;AAKD,GAtIiD,CAwIlD;;;AACAc,EAAAA,YAAY,GAAG;AACb,SAAK9B,KAAL,CAAWY,cAAX,KAA8B,EAA9B,GACE,KAAKnC,QAAL,CAAc;AAAEmC,MAAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWI,OAAX,CAAmB2C,MAArC;AAA6C9B,MAAAA,YAAY,EAAE;AAA3D,KAAd,CADF,GAGE,KAAKxC,QAAL,CAAc;AAAEmC,MAAAA,cAAc,EAAE,EAAlB;AAAsBK,MAAAA,YAAY,EAAE;AAApC,KAAd,CAHF;AAKD;;AAEDc,EAAAA,eAAe,GAAE;AACf,SAAK/B,KAAL,CAAWa,iBAAX,KAAiC,EAAjC,GACE,KAAKpC,QAAL,CAAc;AAAEoC,MAAAA,iBAAiB,EAAE,KAAKb,KAAL,CAAWM,UAAX,CAAsByC,MAA3C;AAAmD7B,MAAAA,eAAe,EAAE;AAApE,KAAd,CADF,GAGE,KAAKzC,QAAL,CAAc;AAAEoC,MAAAA,iBAAiB,EAAE,EAArB;AAAyBK,MAAAA,eAAe,EAAE;AAA1C,KAAd,CAHF;AAMD,GAxJiD,CA0JlD;;;AACA8B,EAAAA,UAAU,CAACC,SAAD,EAAY;AACpB1E,IAAAA,OAAO,CAACC,GAAR,CAAYyE,SAAZ;;AACA,QAAIA,SAAS,KAAK,MAAlB,EAA0B;AACzB,WAAKxE,QAAL,CAAc;AACb4C,QAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWqB,WAAX,GAAyB;AADzB,OAAd;AAGA,KAJD,MAIO,IAAI4B,SAAS,KAAK,MAAlB,EAA0B;AAChC,WAAKxE,QAAL,CAAc;AACb4C,QAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWqB,WAAX,GAAyB;AADzB,OAAd;AAGA;AACF;;AAED6B,EAAAA,eAAe,GAAE;AACf,QAAIC,aAAa,GAAG,KAAKnD,KAAL,CAAWV,kBAA/B;AACA,QAAI8D,eAAe,GAAG,KAAKpD,KAAL,CAAWL,mBAAjC;AACA,QAAI0D,WAAW,GAAG,KAAKrD,KAAL,CAAWJ,eAA7B;AACA,QAAI0D,eAAe,GAAG,KAAKtD,KAAL,CAAWH,oBAAjC;AACA,QAAI0D,cAAc,GAAG,KAAKvD,KAAL,CAAWF,mBAAhC;AACA,QAAI0D,gBAAgB,GAAG,KAAKxD,KAAL,CAAWD,qBAAlC;AACA,QAAI0D,mBAAmB,GAAC,EAAxB,CAPe,CAQf;;AACA,QAAGN,aAAa,CAACO,IAAd,GAAoB,CAApB,IAAyBN,eAAe,CAACM,IAAhB,GAAsB,CAA/C,IAAsDL,WAAW,CAACK,IAAZ,GAAkB,CAAxE,IAA8EJ,eAAe,CAACI,IAAhB,GAAqB,CAAnG,IAAwGH,cAAc,CAACG,IAAf,GAAoB,CAA5H,IAAiIF,gBAAgB,CAACE,IAAjB,GAAsB,CAA1J,EAA4J;AAC1J,YAAMC,UAAU,GAAGR,aAAa,CAACS,IAAd,EAAnB;AACA,YAAMC,UAAU,GAAGV,aAAa,CAACW,MAAd,EAAnB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,aAAa,CAACO,IAAlC,EAAyCK,CAAC,EAA1C,EAA8C;AAC5C,YAAIC,EAAE,GAAGL,UAAU,CAACM,IAAX,GAAkB9F,KAA3B;;AACA,YAAI0F,UAAU,CAACI,IAAX,GAAkB9F,KAAtB,EAA6B;AAC3B,gBAAM+F,cAAc,GAAG;AAAE/F,YAAAA,KAAK,EAAE6F,EAAT;AAAa9E,YAAAA,WAAW,EAAE;AAA1B,WAAvB;AACAuE,UAAAA,mBAAmB,CAACU,IAApB,CAAyBD,cAAzB;AAED;AACF;;AAED,YAAME,UAAU,GAAGhB,eAAe,CAACQ,IAAhB,EAAnB;AACA,YAAMS,UAAU,GAAGjB,eAAe,CAACU,MAAhB,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,eAAe,CAACM,IAApC,EAA0CK,CAAC,EAA3C,EAA+C;AAC7C,YAAIC,EAAE,GAAGI,UAAU,CAACH,IAAX,GAAkB9F,KAA3B;;AACA,YAAIkG,UAAU,CAACJ,IAAX,GAAkB9F,KAAtB,EAA6B;AAC3B,cAAI+F,cAAc,GAAG;AAAE/F,YAAAA,KAAK,EAAE6F,EAAT;AAAa9E,YAAAA,WAAW,EAAE;AAA1B,WAArB;AACAuE,UAAAA,mBAAmB,CAACU,IAApB,CAAyBD,cAAzB;AACD;AACF;;AAED,YAAMI,UAAU,GAAGjB,WAAW,CAACO,IAAZ,EAAnB;AACA,YAAMW,UAAU,GAAGlB,WAAW,CAACS,MAAZ,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,WAAW,CAACK,IAAhC,EAAsCK,CAAC,EAAvC,EAA2C;AACzC,YAAIC,EAAE,GAAGM,UAAU,CAACL,IAAX,GAAkB9F,KAA3B;;AACA,YAAIoG,UAAU,CAACN,IAAX,GAAkB9F,KAAtB,EAA6B;AAC3B,cAAI+F,cAAc,GAAG;AAAE/F,YAAAA,KAAK,EAAE6F,EAAT;AAAa9E,YAAAA,WAAW,EAAE;AAA1B,WAArB;AACAuE,UAAAA,mBAAmB,CAACU,IAApB,CAAyBD,cAAzB;AACD;AACF;;AAED,YAAMM,WAAW,GAAGlB,eAAe,CAACM,IAAhB,EAApB;AACA,YAAMa,WAAW,GAAGnB,eAAe,CAACQ,MAAhB,EAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,eAAe,CAACI,IAApC,EAA0CK,CAAC,EAA3C,EAA+C;AAC7C,YAAIC,EAAE,GAAGQ,WAAW,CAACP,IAAZ,GAAmB9F,KAA5B;;AACA,YAAIsG,WAAW,CAACR,IAAZ,GAAmB9F,KAAvB,EAA8B;AAC5B,cAAI+F,cAAc,GAAG;AAAE/F,YAAAA,KAAK,EAAE6F,EAAT;AAAa9E,YAAAA,WAAW,EAAE;AAA1B,WAArB;AACAuE,UAAAA,mBAAmB,CAACU,IAApB,CAAyBD,cAAzB;AACD;AACF;;AAED,YAAMQ,UAAU,GAAGnB,cAAc,CAACK,IAAf,EAAnB;AACA,YAAMe,UAAU,GAAGpB,cAAc,CAACO,MAAf,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,cAAc,CAACG,IAAnC,EAAyCK,CAAC,EAA1C,EAA8C;AAC5C,YAAIC,EAAE,GAAGU,UAAU,CAACT,IAAX,GAAkB9F,KAA3B;;AACA,YAAIwG,UAAU,CAACV,IAAX,GAAkB9F,KAAtB,EAA6B;AAC3B,cAAI+F,cAAc,GAAG;AAAE/F,YAAAA,KAAK,EAAE6F,EAAT;AAAa9E,YAAAA,WAAW,EAAE;AAA1B,WAArB;AACAuE,UAAAA,mBAAmB,CAACU,IAApB,CAAyBD,cAAzB;AACD;AACF;;AAED,YAAMU,WAAW,GAAGpB,gBAAgB,CAACI,IAAjB,EAApB;AACA,YAAMiB,WAAW,GAAGrB,gBAAgB,CAACM,MAAjB,EAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,gBAAgB,CAACE,IAArC,EAA2CK,CAAC,EAA5C,EAAgD;AAC9C,YAAIC,EAAE,GAAGY,WAAW,CAACX,IAAZ,GAAmB9F,KAA5B;;AACA,YAAI0G,WAAW,CAACZ,IAAZ,GAAmB9F,KAAvB,EAA8B;AAC5B,cAAI+F,cAAc,GAAG;AAAE/F,YAAAA,KAAK,EAAE6F,EAAT;AAAa9E,YAAAA,WAAW,EAAE;AAA1B,WAArB;AACAuE,UAAAA,mBAAmB,CAACU,IAApB,CAAyBD,cAAzB;AACD;AACF;;AACD3F,MAAAA,OAAO,CAACC,GAAR,CAAYgF,gBAAZ;AACAjF,MAAAA,OAAO,CAACC,GAAR,CAAYiF,mBAAmB,CAACV,MAAhC;AACAxE,MAAAA,OAAO,CAACC,GAAR,CAAYiF,mBAAZ;AACH;;AACD,WAAOA,mBAAP;AAEC,GArPiD,CAuPlD;;;AAoCA;AACA;AACAqB,EAAAA,eAAe,CAACC,kBAAD,EAAoBC,SAApB,EAA+BC,SAA/B,EAAyC;AACrD;AACD,QAAOC,QAAQ,CAACH,kBAAD,CAAT,IAAkCC,SAAnC,IAAkDE,QAAQ,CAACH,kBAAD,CAAR,IAAgCE,SAAvF,EAAoG;AAClG,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAnSiD,CAqShD;;;AACFE,EAAAA,WAAW,CAACC,OAAD,EAASC,KAAT,EAAeC,SAAf,EAAyB;AAClC,QAAIA,SAAJ,EAAe;AACb,UAAMF,OAAO,CAACG,WAAR,EAAD,CAAwBC,QAAxB,CAAiCF,SAAS,CAACC,WAAV,EAAjC,CAAD,IAA+DF,KAAK,CAACG,QAAN,CAAeF,SAAf,CAAnE,EAA8F;AAC7F,eAAO,IAAP,CAD6F,CAE5F;AACD,OAHD,MAGO;AACL,eAAO,KAAP;AACD;AACF,KAPD,MAOO;AACL,aAAO,IAAP,CADK,CACY;AAClB;AAEF,GAlTiD,CAoTlD;;;AACAG,EAAAA,gBAAgB,CAACtC,aAAD,EAAeuC,gBAAf,EAAgCC,kBAAhC,EAAmD;AACjE,QAAIxC,aAAa,CAACO,IAAd,GAAqB,CAAzB,EAA4B;AAAG;AAC7B,YAAMkC,SAAS,GAAGzC,aAAa,CAACS,IAAd,EAAlB;AACA,YAAMiC,SAAS,GAAG1C,aAAa,CAACW,MAAd,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,aAAa,CAACO,IAAlC,EAAwCK,CAAC,EAAzC,EAA6C;AAAG;AAC9C,YAAI+B,aAAa,GAAGD,SAAS,CAAC5B,IAAV,GAAiB9F,KAArC;AACA,YAAI4H,SAAS,GAAGH,SAAS,CAAC3B,IAAV,GAAiB9F,KAAjC;;AACA,YAAI2H,aAAJ,EAAmB;AACjB,cAAK,EAAIJ,gBAAgB,CAACH,WAAjB,EAAD,CAAiCC,QAAjC,CAA0CO,SAA1C,CAAD,IAA4DJ,kBAAkB,CAACJ,WAAnB,EAAD,CAAmCC,QAAnC,CAA4CO,SAA5C,CAA7D,CAAL,EAA6H;AAC3H,mBAAO,KAAP,CAD2H,CAC5G;AAChB;AACF;AACF;;AACD,aAAO,IAAP;AACD,KAbD,MAaO;AACL,aAAO,IAAP;AACD;AACF,GAtUiD,CAyUlD;;;AACAC,EAAAA,iBAAiB,CAAC5C,eAAD,EAAiB6C,UAAjB,EAA4B;AAC3C,QAAIC,YAAY,GAAG,KAAnB;;AACA,QAAI9C,eAAe,CAACM,IAAhB,GAAuB,CAA3B,EAA8B;AAC5B,YAAMkC,SAAS,GAAGxC,eAAe,CAACQ,IAAhB,EAAlB;AACA,YAAMiC,SAAS,GAAGzC,eAAe,CAACU,MAAhB,EAAlB;AACA,UAAIqC,wBAAwB,GAAG,KAA/B;;AACA,WAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,eAAe,CAACM,IAApC,EAA0CK,CAAC,EAA3C,EAA+C;AAC3C,YAAIqC,cAAc,GAAGP,SAAS,CAAC5B,IAAV,GAAiB9F,KAAtC;AACC,YAAIkI,kBAAkB,GAAGT,SAAS,CAAC3B,IAAV,GAAiB9F,KAA1C;;AACH,YAAIiI,cAAc,IAAI,CAACF,YAAvB,EAAqC;AAAG;AACtCC,UAAAA,wBAAwB,GAAG,IAA3B;;AACA,cAAMF,UAAU,CAACV,WAAX,EAAD,CAA2BC,QAA3B,CAAoCa,kBAApC,CAAL,EAA+D;AAC7DH,YAAAA,YAAY,GAAG,IAAf;AACA3H,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,WAHD,MAGO;AACL0H,YAAAA,YAAY,GAAG,KAAf;AACD;AAEF,SATD,MASO,IAAK,CAACC,wBAAF,IAAgCpC,CAAC,KAAKX,eAAe,CAACM,IAAhB,GAAuB,CAAjE,EAAqE;AAAG;AAC7EwC,UAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AACD,UAAGA,YAAH,EACE,OAAO,IAAP,CADF,KAGE,OAAO,KAAP;AACH,KAxBD,MAwBO;AACL,aAAO,IAAP;AACD;AACF,GAvWiD,CAyWlD;;;AACAI,EAAAA,cAAc,CAACjD,WAAD,EAAakD,MAAb,EAAoB;AAChC,QAAIC,SAAS,GAAG,KAAhB;;AACC,QAAInD,WAAW,CAACK,IAAZ,GAAmB,CAAvB,EAA0B;AACzB,YAAMkC,SAAS,GAAGvC,WAAW,CAACO,IAAZ,EAAlB;AACA,YAAMiC,SAAS,GAAGxC,WAAW,CAACS,MAAZ,EAAlB;AACA,UAAI2C,oBAAoB,GAAG,KAA3B;;AACA,WAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,WAAW,CAACK,IAAhC,EAAsCK,CAAC,EAAvC,EAA2C;AACvC,YAAI2C,WAAW,GAAGb,SAAS,CAAC5B,IAAV,GAAiB9F,KAAnC;AACF,YAAIwI,eAAe,GAAGf,SAAS,CAAC3B,IAAV,GAAiB9F,KAAvC;;AAEA,YAAIuI,WAAW,IAAI,CAACF,SAApB,EAA+B;AAAE;AAC/BC,UAAAA,oBAAoB,GAAG,IAAvB;;AACA,cAAMF,MAAM,CAAChB,WAAP,EAAD,CAAuBC,QAAvB,CAAgCmB,eAAhC,CAAL,EAAwD;AAEtDH,YAAAA,SAAS,GAAG,IAAZ;AACAjI,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,WAJD,MAIO;AACLgI,YAAAA,SAAS,GAAG,KAAZ;AACD;AAEF,SAVD,MAUO,IAAK,CAACC,oBAAF,IAA4B1C,CAAC,KAAKV,WAAW,CAACK,IAAZ,GAAmB,CAAzD,EAA6D;AAAE;AACpE8C,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF;;AACA,UAAIA,SAAJ,EAAc;AACb,eAAO,IAAP;AACA,OAFD,MAGI;AACH,eAAO,KAAP;AACA;AACH,KA5BA,MA4BM;AACL,aAAO,IAAP;AACD;AACF,GA3YiD,CA6YnD;;;AACCI,EAAAA,iBAAiB,CAACtD,eAAD,EAAiBuD,UAAjB,EAA4B;AAC3C,QAAIC,aAAa,GAAG,KAApB;;AACA,QAAIxD,eAAe,CAACI,IAAhB,GAAuB,CAA3B,EAA8B;AAC5B,YAAMkC,SAAS,GAAGtC,eAAe,CAACM,IAAhB,EAAlB;AACA,YAAMiC,SAAS,GAAGvC,eAAe,CAACQ,MAAhB,EAAlB;AACA,UAAIiD,wBAAwB,GAAG,KAA/B;;AACA,WAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,eAAe,CAACI,IAApC,EAA0CK,CAAC,EAA3C,EAA+C;AAC3C,YAAIiD,eAAe,GAAGnB,SAAS,CAAC5B,IAAV,GAAiB9F,KAAvC;AACA,YAAI8I,mBAAmB,GAAGrB,SAAS,CAAC3B,IAAV,GAAiB9F,KAA3C;;AACF,YAAI6I,eAAe,IAAI,CAACF,aAAxB,EAAuC;AAAE;AACvCC,UAAAA,wBAAwB,GAAG,IAA3B;;AACA,cAAMF,UAAU,CAACtB,WAAX,EAAD,CAA2BC,QAA3B,CAAoCyB,mBAApC,CAAL,EAAgE;AAC9DH,YAAAA,aAAa,GAAG,IAAhB,CAD8D,CAE9D;AACD,WAHD,MAGO;AACLA,YAAAA,aAAa,GAAG,KAAhB;AACD;AAEF,SATD,MASO,IAAK,CAACC,wBAAF,IAAgChD,CAAC,KAAKT,eAAe,CAACI,IAAhB,GAAuB,CAAjE,EAAqE;AAAE;AAC5EoD,UAAAA,aAAa,GAAG,IAAhB;AACD;AACF;;AACD,UAAIA,aAAJ,EAAkB;AAChB,eAAO,IAAP;AACA,OAFF,MAGK;AACH,eAAO,KAAP;AACA;AACH,KA1BD,MA0BO;AACL,aAAO,IAAP;AACD;AACF,GA7aiD,CA+alD;;;AACAI,EAAAA,iBAAiB,CAACC,cAAD,EAAgBC,UAAhB,EAA2B;AAE1C,QAAID,cAAc,CAACzD,IAAf,GAAsB,CAA1B,EAA6B;AAAG;AAC9B,YAAMkC,SAAS,GAAGuB,cAAc,CAACvD,IAAf,EAAlB;AACA,YAAMiC,SAAS,GAAGsB,cAAc,CAACrD,MAAf,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoD,cAAc,CAACzD,IAAnC,EAAyCK,CAAC,EAA1C,EAA8C;AAAG;AAC/C,YAAIsD,aAAa,GAAGxB,SAAS,CAAC5B,IAAV,GAAiB9F,KAArC;AACA,YAAImJ,SAAS,GAAG1B,SAAS,CAAC3B,IAAV,GAAiB9F,KAAjC;;AACA,YAAIkJ,aAAJ,EAAmB;AACjB,cAAK,CAAID,UAAU,CAAC7B,WAAX,EAAD,CAA2BC,QAA3B,CAAoC8B,SAApC,CAAR,EAA2D;AACzD,mBAAO,KAAP,CADyD,CAC1C;AAChB;AACF;AACF;;AACD,aAAO,IAAP;AACD,KAbD,MAaO;AACL,aAAO,IAAP;AACD;AACF,GAlciD,CAochD;;;AAEAC,EAAAA,mBAAmB,CAACC,qBAAD,EAAuBC,SAAvB,EAAiC;AAElD,QAAID,qBAAqB,CAAC9D,IAAtB,GAA6B,CAAjC,EAAoC;AAAG;AACrCnF,MAAAA,OAAO,CAACC,GAAR,CAAYgJ,qBAAZ;AACAjJ,MAAAA,OAAO,CAACC,GAAR,CAAYiJ,SAAZ;AACA,YAAM7B,SAAS,GAAG4B,qBAAqB,CAAC5D,IAAtB,EAAlB;AACA,YAAMiC,SAAS,GAAG2B,qBAAqB,CAAC1D,MAAtB,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyD,qBAAqB,CAAC9D,IAA1C,EAAgDK,CAAC,EAAjD,EAAqD;AAAG;AACtD,YAAI2D,UAAU,GAAG7B,SAAS,CAAC5B,IAAV,GAAiB9F,KAAlC;AACA,YAAIwJ,MAAM,GAAG/B,SAAS,CAAC3B,IAAV,GAAiB9F,KAA9B;;AACA,YAAIuJ,UAAJ,EAAgB;AACd,cAAKD,SAAS,CAAClC,WAAV,EAAD,CAA0BC,QAA1B,CAAmC,MAAnC,CAAJ,EAAgD;AAC9CiC,YAAAA,SAAS,GAAG,QAAZ;AACD;;AACD,cAAK,CAAIA,SAAS,CAAClC,WAAV,EAAD,CAA0BC,QAA1B,CAAmCmC,MAAnC,CAAR,EAAuD;AACrD,mBAAO,KAAP,CADqD,CACtC;AAChB;AACF;AACF;;AACD,aAAO,IAAP;AACD,KAlBD,MAkBO;AACL,aAAO,IAAP;AACD;AAEF;;AAGHC,EAAAA,eAAe,GAAE;AACf,QAAI3H,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;AACA,QAAI+E,SAAS,GAAG,KAAKhF,KAAL,CAAWtB,gBAAX,CAA4B,CAA5B,CAAhB;AACA,QAAIuG,SAAS,GAAG,KAAKjF,KAAL,CAAWtB,gBAAX,CAA4B,CAA5B,CAAhB;AACA,QAAImJ,OAAO,GAAG,KAAK7H,KAAL,CAAWlB,IAAzB;AACA,QAAIqE,aAAa,GAAG,KAAKnD,KAAL,CAAWV,kBAA/B;AACA,QAAI8D,eAAe,GAAG,KAAKpD,KAAL,CAAWL,mBAAjC;AACA,QAAI0D,WAAW,GAAG,KAAKrD,KAAL,CAAWJ,eAA7B;AACA,QAAI0D,eAAe,GAAG,KAAKtD,KAAL,CAAWH,oBAAjC;AACA,QAAIiI,eAAe,GAAG,KAAK9H,KAAL,CAAWF,mBAAjC;AACA,QAAIiI,gBAAgB,GAAG,KAAK/H,KAAL,CAAWD,qBAAlC;AACA,QAAIqB,gBAAgB,GAAE,EAAtB;AACAnB,IAAAA,SAAS,CAAC+H,GAAV,CAAcC,CAAC,iBACb;AAAA,gBAAI,CAAC,MAAM;AACT,YAAI,KAAKnD,eAAL,CAAqBmD,CAAC,CAACC,UAAvB,EAAmClD,SAAnC,EAA8CC,SAA9C,KACC,KAAKE,WAAL,CAAiB8C,CAAC,CAACnJ,IAAnB,EAAyBmJ,CAAC,CAACE,MAA3B,EAAmCN,OAAnC,CADD,IAEC,KAAKvB,cAAL,CAAoBjD,WAApB,EAAiC4E,CAAC,CAACG,GAAnC,CAFD,IAGC,KAAKxB,iBAAL,CAAuBtD,eAAvB,EAAwC2E,CAAC,CAACI,uBAA1C,CAHD,IAIC,KAAK5C,gBAAL,CAAsBtC,aAAtB,EAAqC8E,CAAC,CAACK,cAAvC,EAAuDL,CAAC,CAACM,eAAzD,CAJD,IAKC,KAAKvC,iBAAL,CAAuB5C,eAAvB,EAAwC6E,CAAC,CAACO,OAA1C,CALD,IAMC,KAAKtB,iBAAL,CAAuBY,eAAvB,EAAwCG,CAAC,CAACQ,OAA1C,CAND,IAOC,KAAKlB,mBAAL,CAAyBQ,gBAAzB,EAA2CE,CAAC,CAACS,iBAA7C,CAPL,EAQI;AACFtH,UAAAA,gBAAgB,CAAC+C,IAAjB,CAAsB8D,CAAtB;AACD;AACF,OAZG;AAAJ,qBADF;AAgBA,WAAO7G,gBAAP;AACD;;AAEDuH,EAAAA,YAAY,GAAE;AACZ,QAAIV,CAAC,GAAIzI,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAT;AACA,QAAImJ,CAAC,GAAGpJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAR;AACA,QAAIoJ,CAAC,GAAGrJ,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAR;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYyJ,CAAC,CAACa,SAAd;;AACA,QAAIb,CAAC,CAACa,SAAF,KAAgB,SAApB,EAA+B;AAC7Bb,MAAAA,CAAC,CAACa,SAAF,GAAc,kBAAd;AACAF,MAAAA,CAAC,CAACE,SAAF,GAAc,wBAAd;AACAD,MAAAA,CAAC,CAACE,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACD,KAJD,MAIO;AACLf,MAAAA,CAAC,CAACa,SAAF,GAAc,SAAd;AACAF,MAAAA,CAAC,CAACE,SAAF,GAAc,kBAAd;AACAD,MAAAA,CAAC,CAACE,KAAF,CAAQC,OAAR,GAAkB,OAAlB;AACD;AACF;;AAGDC,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,oBAAoB,GAAE,KAAKlJ,KAAL,CAAWS,gBAArC;AACA,QAAI0I,kBAAkB,GAAE,KAAKnJ,KAAL,CAAWY,cAAnC;AACA,QAAIwI,sBAAsB,GAAE,KAAKpJ,KAAL,CAAWW,kBAAvC;AACA,QAAI0I,sBAAsB,GAAE,KAAKrJ,KAAL,CAAWU,kBAAvC;AACA,QAAI4I,qBAAqB,GAAG,KAAKtJ,KAAL,CAAWa,iBAAvC;AACA,QAAIO,gBAAgB,GAAG,KAAKwG,eAAL,EAAvB;AACA,QAAInE,mBAAmB,GAAG,KAAKP,eAAL,EAA1B,CARO,CAQ4C;;AACnD3E,IAAAA,OAAO,CAACC,GAAR,CAAY4C,gBAAZ;AAGA,wBACE;AAAA,8BAEA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,EAAE,EAAC,YAArC;AAAA,gCAEE;AAAK,UAAA,KAAK,EAAC,aAAX;AAA0B,UAAA,OAAO,EAAE,MAAM,KAAKuH,YAAL,EAAzC;AAAA,iCACA,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,UAAD;AACA,UAAA,KAAK,EAAE;AAAEY,YAAAA,MAAM,EAAE;AAAV,WADP;AAEE,UAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,UAAA,QAAQ,MAHV,CAGe;AAHf;AAIE,UAAA,eAAe,EAAE,IAJnB,CAI2B;AAJ3B;AAKE,UAAA,gBAAgB,EAAE,GALpB;AAAA,iCAOA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,EAAE,EAAC,kBAA5B;AAAA,oCACA;AAAK,cAAA,KAAK,EAAC,aAAX;AAAyB,cAAA,EAAE,EAAC,YAA5B;AAAyC,cAAA,OAAO,EAAE,MAAM,KAAKb,YAAL,EAAxD;AAAA,qCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADA,eAIE;AAAA,sCACA;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACM;AAAM,kBAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADN,eAGM;AAAG,kBAAA,SAAS,EAAC,UAAb;AAAA,4BAAyBvH,gBAAgB,CAAC2B;AAA1C;AAAA;AAAA;AAAA;AAAA,wBAHN;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAOI,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,gBADL;AAEE,gBAAA,KAAK,EAAC,kBAFR;AAGE,gBAAA,OAAO,EAAC,UAHV,CAIE;AAJF;AAKE,gBAAA,KAAK,EAAE;AAAE0G,kBAAAA,OAAO,EAAE,YAAX;AAAyBC,kBAAAA,WAAW,EAAE,CAAtC;AAAyCC,kBAAAA,aAAa,EAAC,CAAvD;AAA0DC,kBAAAA,KAAK,EAAC;AAAhE,iBALT;AAME,gBAAA,IAAI,EAAC,MANP;AAOE,gBAAA,IAAI,EAAC,MAPP;AAQE,gBAAA,QAAQ,EAAE,KAAKjL,eARjB;AASE,gBAAA,SAAS,EAAC;AATZ;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAoBE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACE;AAAG,kBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAG,kBAAA,SAAS,EAAC,aAAb;AAAA,0CACA;AAAA,oCAAK,KAAKqB,KAAL,CAAWtB,gBAAX,CAA4B,CAA5B,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAA,qCAAM,KAAKsB,KAAL,CAAWtB,gBAAX,CAA4B,CAA5B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,eA2BE;AAAM,gBAAA,SAAS,EAAC,kBAAhB;AAAA,uCAGE,QAAC,MAAD;AACE,kBAAA,YAAY,EAAE,CAAC,CAAD,EAAI,EAAJ,CADhB;AAEE,kBAAA,KAAK,EAAE,KAAKA,gBAFd;AAGE,kBAAA,QAAQ,EAAE,KAAKN,YAHjB;AAIE,kBAAA,iBAAiB,EAAC,MAJpB;AAKE,qCAAgB,cALlB;AAME,kBAAA,gBAAgB,EAAE,KAAKF,SANzB;AAOE,kBAAA,IAAI,EAAE,CAPR;AAQE,kBAAA,GAAG,EAAE,CARP;AASE,kBAAA,GAAG,EAAE,EATP;AAUE,kBAAA,KAAK,EAAE;AAAC2L,oBAAAA,KAAK,EAAC;AAAP;AAVT;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,sBA3BF,eA6CE;AAAG,gBAAA,SAAS,EAAC,YAAb;AAA2B,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,UAAU,EAAE;AAAd,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7CF,eA8CE;AAAA,uCACE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAA,6BAEI,KAAK9J,KAAL,CAAWE,SAAX,CAAqB6J,KAArB,CAA2B,CAA3B,EAA8Bb,oBAA9B,EAAoDlB,GAApD,CAAwD5I,IAAI,iBAC1D;AAAA,2CACE;AAAA,6CACE;AAAA,gDACE;AACE,0BAAA,IAAI,EAAC,UADP;AAEE,0BAAA,IAAI,EAAC,oBAFP;AAGE,0BAAA,KAAK,EAAEA,IAAI,CAACN,IAAL,CAAUyG,WAAV,EAHT;AAIE,0BAAA,QAAQ,EAAE,KAAK9D,oBAJjB;AAKE,0BAAA,EAAE,EAAErC,IAAI,CAACN,IAAL,CAAUyG,WAAV;AALN;AAAA;AAAA;AAAA;AAAA,gCADF,OAOMnG,IAAI,CAACN,IAPX,QAOmBM,IAAI,CAAC4K,KAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,CAFJ,eAkBE;AAAG,oBAAA,SAAS,EAAC,UAAb;AACC,oBAAA,OAAO,EAAE,KAAKrI,cADf;AAAA,8BAEG,KAAK3B,KAAL,CAAWc,cAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,0BAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA9CF,eA6EE;AAAG,gBAAA,SAAS,EAAC,YAAb;AAA0B,gBAAA,KAAK,EAAE;AAAEgJ,kBAAAA,UAAU,EAAE;AAAd,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7EF,eA8EE;AAAA,uCACE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAA,6BAEI,KAAK9J,KAAL,CAAWG,UAAX,CAAsB4J,KAAtB,CAA4B,CAA5B,EAA+BX,sBAA/B,EAAuDpB,GAAvD,CAA2D5I,IAAI,iBAC7D;AAAA,2CACE;AAAA,6CACE;AAAA,gDACE;AACE,0BAAA,IAAI,EAAG,qBADT;AAEE,0BAAA,IAAI,EAAC,UAFP;AAGE,0BAAA,KAAK,EAAEA,IAAI,CAACN,IAAL,CAAUyG,WAAV,EAHT;AAIE,0BAAA,QAAQ,EAAE,KAAK9D,oBAJjB;AAKE,0BAAA,EAAE,EAAErC,IAAI,CAACN,IAAL,CAAUyG,WAAV,EALN;AAME,0BAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,gCADF,OAQMnG,IAAI,CAACN,IARX,QAQoBM,IAAI,CAAC4K,KARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,CAFJ,EAmBM,KAAKhK,KAAL,CAAWG,UAAX,CAAsB4C,MAAtB,GAA+B,EAAhC,gBACD;AAAG,oBAAA,SAAS,EAAC,UAAb;AACE,oBAAA,OAAO,EAAE,KAAKlB,gBADhB;AAAA,8BAEG,KAAK7B,KAAL,CAAWgB,gBAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,0BADC,GASFzC,OAAO,CAACC,GAAR,CAAY,eAAZ,CA5BH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA9EF,eAgHE;AAAG,gBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhHF,eAiHE;AAAA,uCACE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAA,6BAEI,KAAKwB,KAAL,CAAWI,OAAX,CAAmB2J,KAAnB,CAAyB,CAAzB,EAA4BZ,kBAA5B,EAAgDnB,GAAhD,CAAoD5I,IAAI,iBACtD;AAAA,2CACE;AAAA,6CACE;AAAA,gDACE;AACE,0BAAA,IAAI,EAAG,iBADT;AAEE,0BAAA,IAAI,EAAC,UAFP;AAGE,0BAAA,KAAK,EAAEA,IAAI,CAACN,IAAL,CAAUyG,WAAV,EAHT;AAIE,0BAAA,QAAQ,EAAE,KAAK9D,oBAJjB;AAKE,0BAAA,EAAE,EAAErC,IAAI,CAACN,IAAL,CAAUyG,WAAV;AALN;AAAA;AAAA;AAAA;AAAA,gCADF,OAOMnG,IAAI,CAACN,IAPX,QAOmBM,IAAI,CAAC4K,KAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,CAFJ,EAkBM,KAAKhK,KAAL,CAAWI,OAAX,CAAmB2C,MAAnB,GAA4B,EAA7B,gBACC;AAAG,oBAAA,SAAS,EAAC,UAAb;AACE,oBAAA,OAAO,EAAE,KAAKjB,YADhB;AAAA,8BAEG,KAAK9B,KAAL,CAAWiB,YAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,0BADD,GASG1C,OAAO,CAACC,GAAR,CAAY,WAAZ,CA3BR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjHF,eAmJE;AAAG,gBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnJF,eAoJE;AAAA,uCACE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAA,6BAEI,KAAKwB,KAAL,CAAWK,WAAX,CAAuB0J,KAAvB,CAA6B,CAA7B,EAAgCV,sBAAhC,EAAwDrB,GAAxD,CAA4D5I,IAAI,iBAC9D;AAAA,2CACE;AAAA,6CACE;AAAA,gDACE;AACE,0BAAA,IAAI,EAAG,sBADT;AAEE,0BAAA,IAAI,EAAC,UAFP;AAGE,0BAAA,KAAK,EAAEA,IAAI,CAACN,IAAL,CAAUyG,WAAV,EAHT;AAIE,0BAAA,QAAQ,EAAE,KAAK9D,oBAJjB;AAKE,0BAAA,EAAE,EAAErC,IAAI,CAACN,IAAL,CAAUyG,WAAV;AALN;AAAA;AAAA;AAAA;AAAA,gCADF,OAOMnG,IAAI,CAACN,IAPX,QAOmBM,IAAI,CAAC4K,KAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,CAFJ,EAkBI,KAAKhK,KAAL,CAAWK,WAAX,CAAuB0C,MAAvB,GAAgC,EAAjC,gBACC;AAAG,oBAAA,SAAS,EAAC,UAAb;AACE,oBAAA,OAAO,EAAE,KAAKnB,gBADhB;AAAA,8BAEG,KAAK5B,KAAL,CAAWe,gBAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,0BADD,GASAxC,OAAO,CAACC,GAAR,CAAY,eAAZ,CA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBApJF,eAsLG;AAAG,gBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtLH,eAuLE;AAAA,uCACE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAA,6BAEI,KAAKwB,KAAL,CAAWM,UAAX,CAAsByJ,KAAtB,CAA4B,CAA5B,EAA+BT,qBAA/B,EAAsDtB,GAAtD,CAA0D5I,IAAI,iBAC5D;AAAA,2CACE;AAAA,6CACE;AAAA,gDACE;AACE,0BAAA,IAAI,EAAG,qBADT;AAEE,0BAAA,IAAI,EAAC,UAFP;AAGE,0BAAA,KAAK,EAAEA,IAAI,CAACN,IAAL,CAAUyG,WAAV,EAHT;AAIE,0BAAA,QAAQ,EAAE,KAAK9D,oBAJjB;AAKE,0BAAA,EAAE,EAAErC,IAAI,CAACN,IAAL,CAAUyG,WAAV;AALN;AAAA;AAAA;AAAA;AAAA,gCADF,OAOMnG,IAAI,CAACN,IAPX,QAOmBM,IAAI,CAAC4K,KAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,CAFJ,EAkBM,KAAKhK,KAAL,CAAWM,UAAX,CAAsByC,MAAtB,GAA+B,EAAhC,gBACC;AAAG,oBAAA,SAAS,EAAC,UAAb;AACE,oBAAA,OAAO,EAAE,KAAKhB,eADhB;AAAA,8BAEG,KAAK/B,KAAL,CAAWkB,eAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,0BADD,GASG3C,OAAO,CAACC,GAAR,CAAY,cAAZ,CA3BR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAvLF,eA0NE;AAAG,gBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1NF,eA2NE;AAAA,uCACE;AAAO,kBAAA,SAAS,EAAC,iBAAjB;AAAA,4BAEI,KAAKwB,KAAL,CAAWO,iBAAX,CAA6BwJ,KAA7B,CAAmC,CAAnC,EAAsCT,qBAAtC,EAA6DtB,GAA7D,CAAiE5I,IAAI,iBACnE;AAAA,2CACE;AAAA,6CACE;AAAA,gDACE;AACE,0BAAA,IAAI,EAAG,uBADT;AAEE,0BAAA,IAAI,EAAC,UAFP;AAGE,0BAAA,KAAK,EAAEA,IAAI,CAACN,IAAL,CAAUyG,WAAV,EAHT;AAIE,0BAAA,QAAQ,EAAE,KAAK9D,oBAJjB;AAKE,0BAAA,EAAE,EAAErC,IAAI,CAACN,IAAL,CAAUyG,WAAV;AALN;AAAA;AAAA;AAAA;AAAA,gCADF,OAOMnG,IAAI,CAACN,IAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3NF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA,gBALF,eAwQE,QAAC,UAAD;AACA,UAAA,KAAK,EAAE;AAAEyK,YAAAA,MAAM,EAAE;AAAV,WADP;AAEE,UAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,UAAA,QAAQ,MAHV,CAGe;AAHf;AAIE,UAAA,eAAe,EAAE,IAJnB,CAI2B;AAJ3B;AAKE,UAAA,gBAAgB,EAAE,GALpB;AAAA,iCAOE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCAKI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,wBACG/F,mBAAmB,CAACuE,GAApB,CAAwBC,CAAC,iBACxB;AAAA,0BAEI,CAAC,MAAM;AACL,sCAEI;AAAA,2CACE,QAAC,IAAD;AACE,sBAAA,KAAK,EAAEA,CAAC,CAAC9J,KADX,CAEE;AAFF;AAGE,sBAAA,QAAQ,EAAE,KAAKa,YAAL,CAAkBiJ,CAAlB,CAHZ;AAIE,sBAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF,mCAFJ;AAYD,iBAbD;AAFJ,+BADD;AADH;AAAA;AAAA;AAAA;AAAA,oBALJ,EAkCK7G,gBAAgB,CAAC2B,MAAjB,GAA0B,CAA1B,GAA8BxE,OAAO,CAACC,GAAR,CAAY4C,gBAAgB,CAAC2B,MAA7B,CAA9B,gBACC;AAAA,wBAEI,CAAC,MAAM;AACL;AAAA;AAAS;AACP;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,2CACE;AAAK,sBAAA,GAAG,EAAC,iBAAT;AAA2B,sBAAA,GAAG,EAAExF;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAKD,eAND;AAFJ,6BAnCN,EAiDK6D,gBAAgB,CAAC2I,KAAjB,CAAwB,KAAK/J,KAAL,CAAWqB,WAAX,GAAyB,KAAKrB,KAAL,CAAWsB,eAArC,GAAwD,KAAKtB,KAAL,CAAWsB,eAA1F,EAA2G,KAAKtB,KAAL,CAAWqB,WAAX,GAAyB,KAAKrB,KAAL,CAAWsB,eAA/I,EAAgK0G,GAAhK,CAAoKiC,QAAQ,iBAC3K;AAAA,wBAEI,CAAC,MAAM;AACL,oCAEI,QAAC,YAAD;AAAc,kBAAA,QAAQ,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAKD,eAND;AAFJ,6BADD,CAjDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAxQF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAqVE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,mBACG,KAAKjK,KAAL,CAAWqB,WAAX,GAAyB,CAAzB,gBACC;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,MAAM,KAAK2B,UAAL,CAAgB,MAAhB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAEG,IAHN,EAIG5B,gBAAgB,CAAC2B,MAAjB,GAA0B,KAAK/C,KAAL,CAAWqB,WAAX,GAAyB,KAAKrB,KAAL,CAAWsB,eAA9D,gBACC;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,MAAM,KAAK0B,UAAL,CAAgB,MAAhB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAEG,IANN;AAAA;AAAA;AAAA;AAAA;AAAA,cArVF;AAAA,oBADF;AAgWD;;AA73BiD","sourcesContent":["import React, { Component } from 'react';\nimport '../components/styles/style.css';\nimport config from '../config';\n// import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport NoResult from '../assets/noResult.gif'\nimport Chip from '@material-ui/core/Chip';\n// import empGroup from '../assets/group-orange.png'\nimport {  TextField } from \"@material-ui/core\";\nimport { event } from 'jquery';\nimport { EmployeeCard } from './EmployeeCard';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { BsFillFunnelFill } from \"react-icons/bs\";\n\n\n/*\n  state variables and api data: 20-68 lines\n  onchange functions\n  filtering employees based on filter logic\n  req Data initializations\n  filters (Dynamic checkboxes,slider,input) html\n  displaying tags,emp cards,next/back button\n*/\n\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Employees: [],//api data\n      skillsApi: [],\n      MangersApi: [],\n      PodsApi: [],\n      projectsApi: [],\n      hobbiesApi: [],\n      employeeStatusApi: [],\n      skills: [],\n      name: '',\n      skillsFilterShow:10,   //number of skill filters to be shown\n      projectsFilterShow:10,   //number of projects filters to be shown\n      managersFilterShow:10,\n      podsFilterShow:10,\n      HobbiesFilterShow:10,\n      skillsExpanded: false,\n      projectsExpanded: false,\n      managersExpanded: false,\n      podsExpanded:false,\n      hobbiesExpanded:false,\n      checkedItemsSkills: new Map(),\n      checkedItemsManager: new Map(),\n      checkedItemsPod: new Map(),\n      checkedItemsProjects: new Map(),\n      checkedItemsHobbies: new Map(),\n      checkedItemsEmpStatus: new Map(),\n      ExperienceMinMax: [0, 35],\n      filteredEmployee: [],\n      currentPage :1,\n      maxItemsPerPage:12,\n      checkedItemsTag : [],\n      skillsCheckBox: false\n    }\n\n    this.CheckBoxhandleChange = this.CheckBoxhandleChange.bind(this);\n    this.showMoreSkills = this.showMoreSkills.bind(this);\n    this.showMoreProjects = this.showMoreProjects.bind(this);\n    this.showMoreManagers = this.showMoreManagers.bind(this);\n    this.showMorePods = this.showMorePods.bind(this);\n    this.showMoreHobbies = this.showMoreHobbies.bind(this);\n  }\n  //fetching data from api\n  componentDidMount() {\n    Promise.all([\n      fetch(config.drupal_url + '/Employees').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/skills').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/manager').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/pod').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/projects').then(res => res.json()),\n      fetch(config.drupal_url + '/TaxonomyOrder/hobbies').then(res => res.json()),\n      fetch(config.drupal_url + '/Taxonomy/employee_status').then(res => res.json())\n    ]).then(([urlOneData, urlTwoData, urlThreeData, urlFourData, urlFiveData, urlSixData, urlSevenData]) => {\n      this.setState({\n        Employees: urlOneData,\n        skillsApi: urlTwoData,\n        MangersApi: urlThreeData,\n        PodsApi: urlFourData,\n        projectsApi: urlFiveData,\n        hobbiesApi: urlSixData,\n        employeeStatusApi:urlSevenData\n      });\n    })\n  }\n\n  //Experience slider on change calls the fxn and changes the values\n  valueText = (value) => {\n    return `${value}`;\n  };\n  handleChange = (e, newValue) => {\n    console.log(newValue);\n    this.setState({ ExperienceMinMax: newValue });\n  };\n\n  //all types of input text field changes will call the fxn and changes the value\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n\n  CheckBoxhandleChange(event) {   //skills,project,pod,manager checkeditems change (to check uncheck)\n    let nam = event.target.name;\n    var isChecked = event.target.checked;\n    var item = event.target.value;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'checkedItemsSkills'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      // document.getElementById(item).checked = true;\n    }\n    else if(nam === 'checkedItemsManager')\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n    else if(nam === 'checkedItemsPod')\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n    else if(nam === 'checkedItemsProjects')\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n    else if(nam === 'checkedItemsHobbies')\n      this.setState(prevState => ({ checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked) }));\n    else if(nam === 'checkedItemsEmpStatus')\n      this.setState(prevState => ({ checkedItemsEmpStatus: prevState.checkedItemsEmpStatus.set(item, isChecked) }));\n  }\n\n\n\n  //show more skill filter option\n  showMoreSkills(){\n    this.state.skillsFilterShow === 10 ? (\n      this.setState({ skillsFilterShow: this.state.skillsApi.length, skillsExpanded: true })\n    ) : (\n      this.setState({ skillsFilterShow: 10, skillsExpanded: false })\n    )\n  }\n\n  //show more filter filter option\n  showMoreProjects(){\n    this.state.projectsFilterShow === 10 ? (\n      this.setState({ projectsFilterShow: this.state.projectsApi.length, projectsExpanded: true })\n    ) : (\n      this.setState({ projectsFilterShow: 10, projectsExpanded: false })\n    )\n  }\n\n   //show more filter filter option this.state.managersExpanded\n   showMoreManagers(){\n    this.state.managersFilterShow === 10 ? (\n      this.setState({ managersFilterShow: this.state.MangersApi.length, managersExpanded: true })\n    ) : (\n      this.setState({ managersFilterShow: 10, managersExpanded: false })\n    )\n  }\n\n  //show more filter filter option this.state.managersExpanded\n  showMorePods() {\n    this.state.podsFilterShow === 10 ? (\n      this.setState({ podsFilterShow: this.state.PodsApi.length, podsExpanded: true })\n    ) : (\n      this.setState({ podsFilterShow: 10, podsExpanded: false })\n    )\n  }\n\n  showMoreHobbies(){\n    this.state.HobbiesFilterShow === 10 ? (\n      this.setState({ HobbiesFilterShow: this.state.hobbiesApi.length, hobbiesExpanded: true })\n    ) : (\n      this.setState({ HobbiesFilterShow: 10, hobbiesExpanded: false })\n    )\n\n  }\n\n  //next or back to view other emp cards if exists\n  changePage(direction) {\n    console.log(direction);\n    if (direction === 'back') {\n     this.setState({\n      currentPage: this.state.currentPage - 1\n     });\n    } else if (direction === 'next') {\n     this.setState({\n      currentPage: this.state.currentPage + 1\n     });\n    }\n  }\n\n  AllCheckedItems(){\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbiesChecked = this.state.checkedItemsHobbies;\n    let EmpStatuschecked = this.state.checkedItemsEmpStatus;\n    let checkedItemsTagList=[];\n    //storing all the checked items in array to display as tags\n    if(skillsChecked.size >0 || ManagersChecked.size >0  ||  podsChecked.size >0  || projectsChecked.size>0 || HobbiesChecked.size>0 || EmpStatuschecked.size>0){\n      const iteratorS1 = skillsChecked.keys();\n      const iteratorS2 = skillsChecked.values();\n     \n      for (let i = 0; i < skillsChecked.size ; i++) {\n        let ps = iteratorS1.next().value;\n        if (iteratorS2.next().value) {\n          const tagsCheckedObj = { value: ps, filterField: \"skill\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n         \n        }\n      }\n\n      const iteratorM1 = ManagersChecked.keys();\n      const iteratorM2 = ManagersChecked.values();\n      for (let i = 0; i < ManagersChecked.size; i++) {\n        let ps = iteratorM1.next().value;\n        if (iteratorM2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"manager\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorP1 = podsChecked.keys();\n      const iteratorP2 = podsChecked.values();\n      for (let i = 0; i < podsChecked.size; i++) {\n        let ps = iteratorP1.next().value;\n        if (iteratorP2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"pod\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorPr1 = projectsChecked.keys();\n      const iteratorPr2 = projectsChecked.values();\n      for (let i = 0; i < projectsChecked.size; i++) {\n        let ps = iteratorPr1.next().value;\n        if (iteratorPr2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"project\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorH1 = HobbiesChecked.keys();\n      const iteratorH2 = HobbiesChecked.values();\n      for (let i = 0; i < HobbiesChecked.size; i++) {\n        let ps = iteratorH1.next().value;\n        if (iteratorH2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"hobby\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n\n      const iteratorES1 = EmpStatuschecked.keys();\n      const iteratorES2 = EmpStatuschecked.values();\n      for (let i = 0; i < EmpStatuschecked.size; i++) {\n        let ps = iteratorES1.next().value;\n        if (iteratorES2.next().value) {\n          let tagsCheckedObj = { value: ps, filterField: \"EmpStatus\" };\n          checkedItemsTagList.push(tagsCheckedObj);\n        }\n      }\n      console.log(EmpStatuschecked);\n      console.log(checkedItemsTagList.length);\n      console.log(checkedItemsTagList);\n  }\n  return checkedItemsTagList;\n\n  }\n\n  //if u click cancel on the selected tags the checkboxes should be unchecked auto\n  handleDelete = (chipToDelete) => () => {\n    console.log(chipToDelete);\n\n    let nam = chipToDelete.filterField;\n    var isChecked = false;\n    var item = chipToDelete.value;;\n    console.log(nam);\n    console.log(isChecked);\n    if(nam === 'skill'){\n      this.setState(prevState => ({ checkedItemsSkills: prevState.checkedItemsSkills.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n      console.log(event.target);\n    }\n    else if(nam === 'manager'){\n      this.setState(prevState => ({ checkedItemsManager: prevState.checkedItemsManager.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'pod'){\n      this.setState(prevState => ({ checkedItemsPod: prevState.checkedItemsPod.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'project'){\n      this.setState(prevState => ({ checkedItemsProjects: prevState.checkedItemsProjects.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'hobby'){\n      this.setState(prevState => ({ checkedItemsHobbies: prevState.checkedItemsHobbies.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n    else if(nam === 'EmpStatus'){\n      this.setState(prevState => ({ checkedItemsEmpStatus: prevState.checkedItemsEmpStatus.set(item, isChecked) }));\n      document.getElementById(item).checked = false;\n    }\n  };\n\n  //checking the empdetails matches\n  //experience match employee's\n  CheckExperience(employeeExperience,expMinReq, expMaxReq){\n     //experience checking: whether the emp has meet the req experience of customer\n    if ((((parseInt(employeeExperience)) >= expMinReq) && (parseInt(employeeExperience) <= expMaxReq))) {\n      return true;\n    }\n    return false;\n  }\n\n    //name checking: whether the emp has matched the name\n  checkNameId(empName,empId,NameIdReq){\n    if (NameIdReq) {\n      if (((empName.toLowerCase()).includes(NameIdReq.toLowerCase())) || empId.includes(NameIdReq)) {\n       return true;\n        //   console.log(\"nameMatch\"+x.name+\" \"+nameReq);\n      } else {\n        return false;\n      }\n    } else {\n      return true;     //if customer not typed anything\n    }\n\n  }\n\n  //checking skills match\n  checkSkillsMatch(skillsChecked,empPrimarySkills,empSecondarySkills){\n    if (skillsChecked.size > 0) {  //atleast one skill is checked\n      const iterator1 = skillsChecked.keys();\n      const iterator2 = skillsChecked.values();\n      for (let i = 0; i < skillsChecked.size; i++) {  //checking all the checked skills the emp has or not\n        let selectedSkill = iterator2.next().value;\n        let skillName = iterator1.next().value;\n        if (selectedSkill) {\n          if ( !(((empPrimarySkills.toLowerCase()).includes(skillName)) || ((empSecondarySkills.toLowerCase()).includes(skillName))) ) {\n            return false;  //if one is not in the profile then return false\n          }\n        }\n      }\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n\n  //managers Match checking\n  checkManagerMatch(ManagersChecked,EmpManager){\n    let managerMatch = false;\n    if (ManagersChecked.size > 0) {\n      const iterator1 = ManagersChecked.keys();\n      const iterator2 = ManagersChecked.values();\n      let oneManagerAtleastChecked = false;\n      for (let i = 0; i < ManagersChecked.size; i++) {\n          let selectedManger = iterator2.next().value;\n           let selectedMangerName = iterator1.next().value;\n        if (selectedManger && !managerMatch) {  //check whether the checkbox is still selected and manager is matched in previous loop\n          oneManagerAtleastChecked = true;\n          if (((EmpManager.toLowerCase()).includes(selectedMangerName))) {\n            managerMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            managerMatch = false;\n          }\n\n        } else if ((!oneManagerAtleastChecked) && (i === ManagersChecked.size - 1)) {  //if all the previous checked managers are unchecked\n          managerMatch = true;\n        }\n      }\n      if(managerMatch)\n        return true;\n      else\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  //check pods Match\n  checkPodsMatch(podsChecked,empPod){\n    let podsMatch = false;\n     if (podsChecked.size > 0) {\n      const iterator1 = podsChecked.keys();\n      const iterator2 = podsChecked.values();\n      let onePodAtleastChecked = false;\n      for (let i = 0; i < podsChecked.size; i++) {\n          let selectedPod = iterator2.next().value;\n        let selectedPodName = iterator1.next().value;\n\n        if (selectedPod && !podsMatch) { //check whether the checkbox is still selected and pod is matched in previous loop\n          onePodAtleastChecked = true;\n          if (((empPod.toLowerCase()).includes(selectedPodName))) {\n\n            podsMatch = true;\n            console.log(\"true inside loop\");\n          } else {\n            podsMatch = false;\n          }\n\n        } else if ((!onePodAtleastChecked) && (i === podsChecked.size - 1)) { //if all the previous checked pods are unchecked\n          podsMatch = true;\n        }\n      }\n       if (podsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }  \n    } else {\n      return true;\n    }\n  }\n\n //projects match\n  checkProjectMatch(projectsChecked,empProject){\n    let projectsMatch = false;\n    if (projectsChecked.size > 0) {\n      const iterator1 = projectsChecked.keys();\n      const iterator2 = projectsChecked.values();\n      let oneProjectAtleastChecked = false;\n      for (let i = 0; i < projectsChecked.size; i++) {\n          let selectedProject = iterator2.next().value;\n          let selectedProjectName = iterator1.next().value;\n        if (selectedProject && !projectsMatch) { //check whether the checkbox is still selected and project is matched in previous loop\n          oneProjectAtleastChecked = true;\n          if (((empProject.toLowerCase()).includes(selectedProjectName))) {\n            projectsMatch = true;\n            // console.log(\"true inside loop\");\n          } else {\n            projectsMatch = false;\n          }\n\n        } else if ((!oneProjectAtleastChecked) && (i === projectsChecked.size - 1)) { //if all the previous checked projects are unchecked\n          projectsMatch = true;  \n        }\n      }\n      if (projectsMatch){\n        return true;\n       }  \n       else{\n        return false;\n       }\n    } else {\n      return true;\n    }\n  }\n\n  //Hobbies match\n  checkHobbiesMatch(hobbiesChecked,empHobbies){\n\n    if (hobbiesChecked.size > 0) {  //atleast one hobby is checked\n      const iterator1 = hobbiesChecked.keys();\n      const iterator2 = hobbiesChecked.values();\n      for (let i = 0; i < hobbiesChecked.size; i++) {  //checking all the checked hobby the emp has or not\n        let selectedHobby = iterator2.next().value;\n        let hobbyName = iterator1.next().value;\n        if (selectedHobby) {\n          if ( !(((empHobbies.toLowerCase()).includes(hobbyName))) ) {\n            return false;  //if one is not in the profile then return false\n          }\n        }\n      }\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n    //checking emp status match\n\n    checkEmpStatusMatch(EmployeeStatusChecked,EmpStatus){\n     \n      if (EmployeeStatusChecked.size > 0) {  //atleast one hobby is checked\n        console.log(EmployeeStatusChecked);\n        console.log(EmpStatus);\n        const iterator1 = EmployeeStatusChecked.keys();\n        const iterator2 = EmployeeStatusChecked.values();\n        for (let i = 0; i < EmployeeStatusChecked.size; i++) {  //checking all the checked hobby the emp has or not\n          let selectedES = iterator2.next().value;\n          let ESName = iterator1.next().value;\n          if (selectedES) {\n            if(((EmpStatus.toLowerCase()).includes(\"left\"))){\n              EmpStatus = \"Alumni\";\n            }\n            if ( !(((EmpStatus.toLowerCase()).includes(ESName))) ) {\n              return false;  //if one is not in the profile then return false\n            }\n          }\n        }\n        return true;\n      } else {\n        return true;\n      }\n     \n    }\n\n\n  filteringTheEmp(){\n    let Employees = this.state.Employees;\n    let expMinReq = this.state.ExperienceMinMax[0];\n    let expMaxReq = this.state.ExperienceMinMax[1];\n    let nameReq = this.state.name;\n    let skillsChecked = this.state.checkedItemsSkills;\n    let ManagersChecked = this.state.checkedItemsManager;\n    let podsChecked = this.state.checkedItemsPod;\n    let projectsChecked = this.state.checkedItemsProjects;\n    let HobbbiesChecked = this.state.checkedItemsHobbies;\n    let EmpStatusChecked = this.state.checkedItemsEmpStatus;\n    let filteredEmployee= [];\n    Employees.map(x => (\n      <>{((() => {\n        if (this.CheckExperience(x.Experience, expMinReq, expMaxReq)\n          && this.checkNameId(x.name, x.Emp_id, nameReq)\n          && this.checkPodsMatch(podsChecked, x.Pod)\n          && this.checkProjectMatch(projectsChecked, x.current_working_project)\n          && this.checkSkillsMatch(skillsChecked, x.primary_skills, x.secndary_skills)\n          && this.checkManagerMatch(ManagersChecked, x.Manager)\n          && this.checkHobbiesMatch(HobbbiesChecked, x.hobbies)\n          && this.checkEmpStatusMatch(EmpStatusChecked, x.employment_status)\n          ) {\n          filteredEmployee.push(x);\n        }\n      })())}\n      </>\n    ))\n    return filteredEmployee;\n  }\n\n  FiltersHover(){\n    var x =  document.getElementById(\"filtersContainer\");\n    var y = document.getElementById(\"filterPage\");\n    var z = document.getElementById(\"filter-icon\");\n    console.log(x.className);\n    if (x.className === \"reqForm\") {\n      x.className = \"filtersContainer\";\n      y.className = \"filter-containerMobile\";  \n      z.style.display = 'none';\n    } else {\n      x.className = \"reqForm\";\n      y.className = \"filter-container\";\n      z.style.display = 'block';\n    }\n  }\n\n\n  render() {\n    //initialisig the state variables for manipulations\n    let skillsFilterShowCust =this.state.skillsFilterShow;\n    let podsFilterShowCust =this.state.podsFilterShow;\n    let managersFilterShowCust =this.state.managersFilterShow;\n    let projectsFilterShowCust =this.state.projectsFilterShow;\n    let HobbiesFilterShowCust = this.state.HobbiesFilterShow;\n    let filteredEmployee = this.filteringTheEmp();\n    let checkedItemsTagList = this.AllCheckedItems();  //getting all the checked items and storing to make tags\n    console.log(filteredEmployee);\n\n\n    return (\n      <>\n     \n      <div className=\"filter-container\" id=\"filterPage\">\n        {/* different types of filters  */}\n        <div class=\"filter-icon\"  onClick={() => this.FiltersHover()} >\n        <BsFillFunnelFill id=\"filter-icon\"></BsFillFunnelFill>\n        </div>\n        <Scrollbars \n        style={{ height: \"100%\" }}\n          onScroll={this.handleScroll}\n          autoHide     // Hide delay in ms\n          autoHideTimeout={1000}   // Duration for hide animation in ms.\n          autoHideDuration={200}\n        >\n        <div className=\"reqForm\" id=\"filtersContainer\">\n        <div class=\"filter-icon\" id=\"clear-icon\" onClick={() => this.FiltersHover()} >\n            <ClearIcon ></ClearIcon>\n        </div>\n          <form >\n          <div className=\"filtered-emp-count\">\n                <span className=\"filterName\">Employees: </span>\n                {/* <img alt=\"no of emp\" src={empGroup} style={{ height: \"20px\",  paddingLeft: \"10%\" }}></img> */}\n                <p className=\"empCount\">{filteredEmployee.length}</p>\n              </div>\n            {/* name or id input filed*/}\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Enter name or Id\"\n                variant=\"outlined\"\n                // size=\"small\"\n                style={{ padding: \"10.5px 8px\", paddingLeft: 0, paddingBottom:0, width:\"100%\" }}\n                type=\"text\"\n                name=\"name\"\n                onChange={this.myChangeHandler}\n                className=\"InpcheckedItemsSkillsuttextField\"\n              />\n\n            {/* Experience slider*/}\n            <div className=\"Experience-overview\">\n              <p className=\"filterName\">Experience: </p>\n              <p className=\"exp-display\">\n              <p> {this.state.ExperienceMinMax[0]} - </p>\n              <p>  {this.state.ExperienceMinMax[1]} years</p>\n              </p>\n            </div>\n            <div  className=\"experienceSlider\" >\n              {/* <Typography id=\"range-slider\" gutterBottom>\n                </Typography> style={{ width: 180 }} */}\n              <Slider\n                defaultValue={[0, 25]}\n                value={this.ExperienceMinMax}\n                onChange={this.handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={this.valueText}\n                step={1}\n                min={0}\n                max={45}\n                style={{color:\"#ff8c4b\"}}\n              />\n            </div>\n\n            {/*  skills checkboxes*/}\n            <p className=\"filterName\"  style={{ paddingTop: 2}}>Skills :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.skillsApi.slice(0, skillsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            name='checkedItemsSkills'\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                <p className=\"showMore\"\n                 onClick={this.showMoreSkills}>\n                  {this.state.skillsExpanded ? (\n                    <span>show less</span>\n                  ) : (\n                    <span>show more</span>\n                  )}\n                </p>\n              </table>\n            </form>\n\n            {/* Manager checkbox selection */}\n            <p className=\"filterName\" style={{ paddingTop: 2}}>Managers :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.MangersApi.slice(0, managersFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsManager'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                            className=\"checkboxes\"\n                          /> {item.name } ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                  {(this.state.MangersApi.length > 10)?\n                  <p className=\"showMore\"\n                    onClick={this.showMoreManagers}>\n                    {this.state.managersExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less managers\")}\n              </table>\n            </form>\n\n            {/* Pods checkbox selection */}\n            <p className=\"filterName\">Pods :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.PodsApi.slice(0, podsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsPod'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                  }\n                  {(this.state.PodsApi.length > 10) ?\n                    <p className=\"showMore\"\n                      onClick={this.showMorePods}>\n                      {this.state.podsExpanded ? (\n                        <span>show less</span>\n                      ) : (\n                        <span>show more</span>\n                      )}\n                    </p>\n                    : console.log(\"less pods\")\n                  }\n              </table>\n            </form>\n\n            {/* projects checkbox selection */}\n            <p className=\"filterName\">projects :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.projectsApi.slice(0, projectsFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsProjects'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                }\n                {(this.state.projectsApi.length > 10)?\n                  <p className=\"showMore\"\n                    onClick={this.showMoreProjects}>\n                    {this.state.projectsExpanded ? (\n                      <span>show less</span>\n                    ) : (\n                      <span>show more</span>\n                    )}\n                  </p> \n                :console.log(\"less products\")}\n \n              </table>\n            </form>\n\n             {/* Hobbbies checkbox selection */}\n             <p className=\"filterName\">Hobbies :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.hobbiesApi.slice(0, HobbiesFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsHobbies'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} ({item.count })\n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                  }\n                  {(this.state.hobbiesApi.length > 10) ?\n                    <p className=\"showMore\"\n                      onClick={this.showMoreHobbies}>\n                      {this.state.hobbiesExpanded ? (\n                        <span>show less</span>\n                      ) : (\n                        <span>show more</span>\n                      )}\n                    </p>\n                    : console.log(\"less hobbies\")\n                  }\n              </table>\n            </form>\n\n\n            {/* emp status checkbox selection */}\n            <p className=\"filterName\">Employee Status :</p>\n            <form >\n              <table className=\"CheckboxesTable\">\n                {\n                  this.state.employeeStatusApi.slice(0, HobbiesFilterShowCust).map(item => (\n                    <tr>\n                      <td>\n                        <label>\n                          <input\n                            name = 'checkedItemsEmpStatus'\n                            type=\"checkbox\"\n                            value={item.name.toLowerCase()}\n                            onChange={this.CheckBoxhandleChange}\n                            id={item.name.toLowerCase()}\n                          /> {item.name} \n                        </label>\n                      </td>\n                    </tr>\n                  ))\n                  }\n                 \n              </table>\n            </form>\n\n\n          </form>\n         \n        </div>\n        </Scrollbars>\n        {/* //displaying */}\n        <Scrollbars \n        style={{ height: 600 }}\n          onScroll={this.handleScroll}\n          autoHide     // Hide delay in ms\n          autoHideTimeout={1000}   // Duration for hide animation in ms.\n          autoHideDuration={200}\n        >\n          <div className=\"Employees\">\n\n            {/* selected filters as tags */}\n            {/* {console.log(this.state.checkedItemsTag)} */}\n            {/* <div className=\"tagsAndEmpCountContainer\"> */}\n              <div className=\"selectedTags\">\n                {checkedItemsTagList.map(x => (\n                  <>\n                    {(\n                      (() => {\n                        return (\n                          (\n                            <>\n                              <Chip\n                                label={x.value}\n                                // icon={icon}\n                                onDelete={this.handleDelete(x)}\n                                className=\"tags\"\n                              />\n                            </>\n                          )\n                        )\n                      })()\n                    )}\n                  </>\n                ))\n                }\n              </div>\n              {/* <div className=\"filtered-emp-count\">\n                <img alt=\"no of emp\" src={empGroup} style={{ height: \"25%\" }}></img>\n                <p className=\"empCount\">{filteredEmployee.length}</p>\n              </div> */}\n            {/* </div> */}\n         \n              {filteredEmployee.length > 0 ? console.log(filteredEmployee.length) :\n                <>\n                  {(\n                    (() => {\n                      return ( //no result found\n                        <div className='NoResult'>\n                          <img alt=\"No result found\" src={NoResult}></img>\n                        </div>\n                      )\n                    })())\n                  }\n                </>\n              }\n\n              {/* Filtered Employees displaying */}\n              {filteredEmployee.slice((this.state.currentPage * this.state.maxItemsPerPage) - this.state.maxItemsPerPage, this.state.currentPage * this.state.maxItemsPerPage).map(employee => (\n                <>\n                  {(\n                    (() => {\n                      return (\n                        (\n                          <EmployeeCard employee={employee}></EmployeeCard>\n                        )\n                      )\n                    })()\n                  )}\n                </>\n              ))\n              }\n           \n          </div>\n          </Scrollbars>\n        </div>\n        {/* next page or back button for viewing the cards */}\n        <div className=\"nextBack\">\n          {this.state.currentPage > 1 ?\n            <button className=\"nextBackBttn\" onClick={() => this.changePage('back')}>&laquo; </button>\n            : null}\n          {filteredEmployee.length > this.state.currentPage * this.state.maxItemsPerPage ?\n            <button className=\"nextBackBttn\" onClick={() => this.changePage('next')}> &raquo;</button>\n            : null}\n        </div>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}