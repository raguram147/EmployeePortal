{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport config from \"../config\";\n/*\n        Component       : It is the functional component(Custom Hooks) that gets the parameter url, that returns the states of data, loading and error.\n        Author          : Created by Lister Raguram Sundaravadivel\n             \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */\n\nconst useFetch = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDetails = useCallback(async (url, resultData) => {\n    setLoading(true);\n\n    try {\n      const result = await fetch(url, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          'Access-Control-Allow-Origin': config.drupal_url + \"/\",\n          'Access-Control-Allow-Methods': 'GET',\n          'Access-Control-Allow-Headers': 'application/json'\n        },\n        contentType: 'application/json'\n      });\n\n      if (!result.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      let data = await result.json();\n\n      if (data != null) {\n        setLoading(false);\n        setError(null);\n      } else if (data.length === 0) {\n        throw new Error(\"Centers Not Available!\");\n      }\n\n      resultData(data);\n    } catch (error) {\n      setError(error.message + \"\");\n      setLoading(false);\n    }\n  }, []);\n  return [loading, fetchDetails, error];\n};\n\n_s(useFetch, \"TiU+wJgUFouyXtOSwTSglQWfWno=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/Hooks/use-fetch.js"],"names":["useState","useCallback","config","useFetch","loading","setLoading","error","setError","fetchDetails","url","resultData","result","fetch","method","mode","headers","drupal_url","contentType","ok","Error","data","json","length","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMQ,YAAY,GAAGP,WAAW,CAAC,OAAOQ,GAAP,EAAYC,UAAZ,KAA2B;AAC1DL,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMM,MAAM,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAC9BI,QAAAA,MAAM,EAAE,KADsB;AAE9BC,QAAAA,IAAI,EAAC,MAFyB;AAG9BC,QAAAA,OAAO,EAAE;AACP,yCAA+Bb,MAAM,CAACc,UAAP,GAAkB,GAD1C;AAEP,0CAA+B,KAFxB;AAGP,0CAA+B;AAHxB,SAHqB;AAQhCC,QAAAA,WAAW,EAAE;AARmB,OAAN,CAA1B;;AAUA,UAAI,CAACN,MAAM,CAACO,EAAZ,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,UAAIC,IAAI,GAAG,MAAMT,MAAM,CAACU,IAAP,EAAjB;;AACA,UAAID,IAAI,IAAI,IAAZ,EAAkB;AAChBf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAHD,MAGO,IAAIa,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AAC5B,cAAM,IAAIH,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACDT,MAAAA,UAAU,CAACU,IAAD,CAAV;AACD,KAvBD,CAuBE,OAAOd,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACiB,OAAN,GAAgB,EAAjB,CAAR;AACAlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GA7B+B,EA6B7B,EA7B6B,CAAhC;AA8BA,SAAO,CAACD,OAAD,EAAUI,YAAV,EAAwBF,KAAxB,CAAP;AACD,CAlCD;;GAAMH,Q;;AAoCN,eAAeA,QAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport config from \"../config\";\n/*\n        Component       : It is the functional component(Custom Hooks) that gets the parameter url, that returns the states of data, loading and error.\n        Author          : Created by Lister Raguram Sundaravadivel\n             \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */\nconst useFetch = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDetails = useCallback(async (url, resultData) => {\n    setLoading(true);\n    try {\n      const result = await fetch(url, {\n        method: \"GET\",\n        mode:\"cors\",\n        headers: {\n          'Access-Control-Allow-Origin': config.drupal_url+\"/\",\n          'Access-Control-Allow-Methods':'GET',\n          'Access-Control-Allow-Headers':'application/json',\n      },\n      contentType: 'application/json'\n      });\n      if (!result.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      let data = await result.json();\n      if (data != null) {\n        setLoading(false);\n        setError(null);\n      } else if (data.length === 0) {\n        throw new Error(\"Centers Not Available!\");\n      }\n      resultData(data);\n    } catch (error) {\n      setError(error.message + \"\");\n      setLoading(false);\n    }\n  }, []);\n  return [loading, fetchDetails, error];\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}