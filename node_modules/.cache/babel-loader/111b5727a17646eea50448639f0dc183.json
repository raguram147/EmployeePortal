{"ast":null,"code":"import _regeneratorRuntime from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/raguram_s/lister-emp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback}from\"react\";import config from\"../config\";/*\n        Component       : It is the functional component(Custom Hooks) that gets the parameter url, that returns the states of data, loading and error.\n        Author          : Created by Lister Raguram Sundaravadivel\n             \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */var useFetch=function useFetch(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var fetchDetails=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url,resultData){var result,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.prev=1;_context.next=4;return fetch(url,{method:\"GET\",mode:\"cors\",headers:{'Access-Control-Allow-Origin':config.drupal_url+\"/\",'Access-Control-Allow-Methods':'GET','Access-Control-Allow-Headers':'application/json'},contentType:'application/json'});case 4:result=_context.sent;if(result.ok){_context.next=7;break;}throw new Error(\"Request failed!\");case 7:_context.next=9;return result.json();case 9:data=_context.sent;if(!(data!=null)){_context.next=15;break;}setLoading(false);setError(null);_context.next=17;break;case 15:if(!(data.length===0)){_context.next=17;break;}throw new Error(\"Centers Not Available!\");case 17:resultData(data);_context.next=24;break;case 20:_context.prev=20;_context.t0=_context[\"catch\"](1);setError(_context.t0.message+\"\");setLoading(false);case 24:case\"end\":return _context.stop();}}},_callee,null,[[1,20]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}(),[]);return[loading,fetchDetails,error];};export default useFetch;","map":{"version":3,"sources":["/home/raguram_s/lister-emp-portal/src/Hooks/use-fetch.js"],"names":["useState","useCallback","config","useFetch","loading","setLoading","error","setError","fetchDetails","url","resultData","fetch","method","mode","headers","drupal_url","contentType","result","ok","Error","json","data","length","message"],"mappings":"qcAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA;AACA;AACA;AACA;AACA;AACA;AACA,QACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,cAA8BH,QAAQ,CAAC,KAAD,CAAtC,wCAAOI,OAAP,eAAgBC,UAAhB,eACA,eAA0BL,QAAQ,CAAC,IAAD,CAAlC,yCAAOM,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,YAAY,CAAGP,WAAW,0FAAC,iBAAOQ,GAAP,CAAYC,UAAZ,kIAC/BL,UAAU,CAAC,IAAD,CAAV,CAD+B,sCAGRM,CAAAA,KAAK,CAACF,GAAD,CAAM,CAC9BG,MAAM,CAAE,KADsB,CAE9BC,IAAI,CAAC,MAFyB,CAG9BC,OAAO,CAAE,CACP,8BAA+BZ,MAAM,CAACa,UAAP,CAAkB,GAD1C,CAEP,+BAA+B,KAFxB,CAGP,+BAA+B,kBAHxB,CAHqB,CAQhCC,WAAW,CAAE,kBARmB,CAAN,CAHG,QAGvBC,MAHuB,kBAaxBA,MAAM,CAACC,EAbiB,8BAcrB,IAAIC,CAAAA,KAAJ,CAAU,iBAAV,CAdqB,8BAiBZF,CAAAA,MAAM,CAACG,IAAP,EAjBY,QAiBzBC,IAjByB,oBAkBzBA,IAAI,EAAI,IAlBiB,2BAmB3BhB,UAAU,CAAC,KAAD,CAAV,CACAE,QAAQ,CAAC,IAAD,CAAR,CApB2B,oCAqBlBc,IAAI,CAACC,MAAL,GAAgB,CArBE,gCAsBrB,IAAIH,CAAAA,KAAJ,CAAU,wBAAV,CAtBqB,SAwB7BT,UAAU,CAACW,IAAD,CAAV,CAxB6B,iFA0B7Bd,QAAQ,CAAC,YAAMgB,OAAN,CAAgB,EAAjB,CAAR,CACAlB,UAAU,CAAC,KAAD,CAAV,CA3B6B,qEAAD,mEA6B7B,EA7B6B,CAAhC,CA8BA,MAAO,CAACD,OAAD,CAAUI,YAAV,CAAwBF,KAAxB,CAAP,CACD,CAlCD,CAoCA,cAAeH,CAAAA,QAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport config from \"../config\";\n/*\n        Component       : It is the functional component(Custom Hooks) that gets the parameter url, that returns the states of data, loading and error.\n        Author          : Created by Lister Raguram Sundaravadivel\n             \n        Last Modified   :\n        (Format \"Name Date `MM-DD-YYY`\")\n      */\nconst useFetch = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDetails = useCallback(async (url, resultData) => {\n    setLoading(true);\n    try {\n      const result = await fetch(url, {\n        method: \"GET\",\n        mode:\"cors\",\n        headers: {\n          'Access-Control-Allow-Origin': config.drupal_url+\"/\",\n          'Access-Control-Allow-Methods':'GET',\n          'Access-Control-Allow-Headers':'application/json',\n      },\n      contentType: 'application/json'\n      });\n      if (!result.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      let data = await result.json();\n      if (data != null) {\n        setLoading(false);\n        setError(null);\n      } else if (data.length === 0) {\n        throw new Error(\"Centers Not Available!\");\n      }\n      resultData(data);\n    } catch (error) {\n      setError(error.message + \"\");\n      setLoading(false);\n    }\n  }, []);\n  return [loading, fetchDetails, error];\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}